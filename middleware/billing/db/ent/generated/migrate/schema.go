// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AddonsColumns holds the columns for the "addons" table.
	AddonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "usd_price", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "credit", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "sort_order", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "enabled", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "description", Type: field.TypeString, Nullable: true, Default: ""},
	}
	// AddonsTable holds the schema information for the "addons" table.
	AddonsTable = &schema.Table{
		Name:       "addons",
		Columns:    AddonsColumns,
		PrimaryKey: []*schema.Column{AddonsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "addon_ent_id",
				Unique:  true,
				Columns: []*schema.Column{AddonsColumns[1]},
			},
		},
	}
	// ExchangesColumns holds the columns for the "exchanges" table.
	ExchangesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "usage_type", Type: field.TypeString, Nullable: true, Default: "DefaultUsageType"},
		{Name: "credit", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "exchange_threshold", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "path", Type: field.TypeString, Nullable: true, Default: ""},
	}
	// ExchangesTable holds the schema information for the "exchanges" table.
	ExchangesTable = &schema.Table{
		Name:       "exchanges",
		Columns:    ExchangesColumns,
		PrimaryKey: []*schema.Column{ExchangesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "exchange_ent_id",
				Unique:  true,
				Columns: []*schema.Column{ExchangesColumns[1]},
			},
		},
	}
	// SubscriptionsColumns holds the columns for the "subscriptions" table.
	SubscriptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "package_name", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "usd_price", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "description", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "sort_order", Type: field.TypeUint32, Nullable: true},
		{Name: "package_type", Type: field.TypeString, Nullable: true, Default: "DefaultPackageType"},
		{Name: "credit", Type: field.TypeUint32, Nullable: true},
		{Name: "reset_type", Type: field.TypeString, Nullable: true, Default: "DefaultResetType"},
		{Name: "qps_limit", Type: field.TypeUint32, Nullable: true},
	}
	// SubscriptionsTable holds the schema information for the "subscriptions" table.
	SubscriptionsTable = &schema.Table{
		Name:       "subscriptions",
		Columns:    SubscriptionsColumns,
		PrimaryKey: []*schema.Column{SubscriptionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "subscription_ent_id",
				Unique:  true,
				Columns: []*schema.Column{SubscriptionsColumns[1]},
			},
		},
	}
	// UserCreditRecordsColumns holds the columns for the "user_credit_records" table.
	UserCreditRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "operation_type", Type: field.TypeString, Nullable: true, Default: "DefaultOperationType"},
		{Name: "credits_change", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "extra", Type: field.TypeString, Nullable: true, Default: ""},
	}
	// UserCreditRecordsTable holds the schema information for the "user_credit_records" table.
	UserCreditRecordsTable = &schema.Table{
		Name:       "user_credit_records",
		Columns:    UserCreditRecordsColumns,
		PrimaryKey: []*schema.Column{UserCreditRecordsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "usercreditrecord_ent_id",
				Unique:  true,
				Columns: []*schema.Column{UserCreditRecordsColumns[1]},
			},
		},
	}
	// UserSubscriptionsColumns holds the columns for the "user_subscriptions" table.
	UserSubscriptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "package_id", Type: field.TypeUUID, Nullable: true},
		{Name: "start_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "end_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "usage_state", Type: field.TypeString, Nullable: true, Default: "DefaultUsageState"},
		{Name: "subscription_credit", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "addon_credit", Type: field.TypeUint32, Nullable: true, Default: 0},
	}
	// UserSubscriptionsTable holds the schema information for the "user_subscriptions" table.
	UserSubscriptionsTable = &schema.Table{
		Name:       "user_subscriptions",
		Columns:    UserSubscriptionsColumns,
		PrimaryKey: []*schema.Column{UserSubscriptionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "usersubscription_ent_id",
				Unique:  true,
				Columns: []*schema.Column{UserSubscriptionsColumns[1]},
			},
		},
	}
	// UserSubscriptionChangesColumns holds the columns for the "user_subscription_changes" table.
	UserSubscriptionChangesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_subscription_id", Type: field.TypeUUID, Nullable: true},
		{Name: "old_package_id", Type: field.TypeUUID, Nullable: true},
		{Name: "new_package_id", Type: field.TypeUUID, Nullable: true},
	}
	// UserSubscriptionChangesTable holds the schema information for the "user_subscription_changes" table.
	UserSubscriptionChangesTable = &schema.Table{
		Name:       "user_subscription_changes",
		Columns:    UserSubscriptionChangesColumns,
		PrimaryKey: []*schema.Column{UserSubscriptionChangesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "usersubscriptionchange_ent_id",
				Unique:  true,
				Columns: []*schema.Column{UserSubscriptionChangesColumns[1]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AddonsTable,
		ExchangesTable,
		SubscriptionsTable,
		UserCreditRecordsTable,
		UserSubscriptionsTable,
		UserSubscriptionChangesTable,
	}
)

func init() {
}
