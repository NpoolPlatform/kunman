// Code generated by ent, DO NOT EDIT.

package addon

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/billing/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.Addon {
	return predicate.Addon(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.Addon {
	return predicate.Addon(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.Addon {
	return predicate.Addon(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.Addon {
	return predicate.Addon(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.Addon {
	return predicate.Addon(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.Addon {
	return predicate.Addon(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.Addon {
	return predicate.Addon(sql.FieldLTE(FieldID, id))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldEntID, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldAppID, v))
}

// UsdPrice applies equality check predicate on the "usd_price" field. It's identical to UsdPriceEQ.
func UsdPrice(v decimal.Decimal) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldUsdPrice, v))
}

// Credit applies equality check predicate on the "credit" field. It's identical to CreditEQ.
func Credit(v uint32) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldCredit, v))
}

// SortOrder applies equality check predicate on the "sort_order" field. It's identical to SortOrderEQ.
func SortOrder(v uint32) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldSortOrder, v))
}

// Enabled applies equality check predicate on the "enabled" field. It's identical to EnabledEQ.
func Enabled(v bool) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldEnabled, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldDescription, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldLTE(FieldEntID, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v uuid.UUID) predicate.Addon {
	return predicate.Addon(sql.FieldLTE(FieldAppID, v))
}

// AppIDIsNil applies the IsNil predicate on the "app_id" field.
func AppIDIsNil() predicate.Addon {
	return predicate.Addon(sql.FieldIsNull(FieldAppID))
}

// AppIDNotNil applies the NotNil predicate on the "app_id" field.
func AppIDNotNil() predicate.Addon {
	return predicate.Addon(sql.FieldNotNull(FieldAppID))
}

// UsdPriceEQ applies the EQ predicate on the "usd_price" field.
func UsdPriceEQ(v decimal.Decimal) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldUsdPrice, v))
}

// UsdPriceNEQ applies the NEQ predicate on the "usd_price" field.
func UsdPriceNEQ(v decimal.Decimal) predicate.Addon {
	return predicate.Addon(sql.FieldNEQ(FieldUsdPrice, v))
}

// UsdPriceIn applies the In predicate on the "usd_price" field.
func UsdPriceIn(vs ...decimal.Decimal) predicate.Addon {
	return predicate.Addon(sql.FieldIn(FieldUsdPrice, vs...))
}

// UsdPriceNotIn applies the NotIn predicate on the "usd_price" field.
func UsdPriceNotIn(vs ...decimal.Decimal) predicate.Addon {
	return predicate.Addon(sql.FieldNotIn(FieldUsdPrice, vs...))
}

// UsdPriceGT applies the GT predicate on the "usd_price" field.
func UsdPriceGT(v decimal.Decimal) predicate.Addon {
	return predicate.Addon(sql.FieldGT(FieldUsdPrice, v))
}

// UsdPriceGTE applies the GTE predicate on the "usd_price" field.
func UsdPriceGTE(v decimal.Decimal) predicate.Addon {
	return predicate.Addon(sql.FieldGTE(FieldUsdPrice, v))
}

// UsdPriceLT applies the LT predicate on the "usd_price" field.
func UsdPriceLT(v decimal.Decimal) predicate.Addon {
	return predicate.Addon(sql.FieldLT(FieldUsdPrice, v))
}

// UsdPriceLTE applies the LTE predicate on the "usd_price" field.
func UsdPriceLTE(v decimal.Decimal) predicate.Addon {
	return predicate.Addon(sql.FieldLTE(FieldUsdPrice, v))
}

// UsdPriceIsNil applies the IsNil predicate on the "usd_price" field.
func UsdPriceIsNil() predicate.Addon {
	return predicate.Addon(sql.FieldIsNull(FieldUsdPrice))
}

// UsdPriceNotNil applies the NotNil predicate on the "usd_price" field.
func UsdPriceNotNil() predicate.Addon {
	return predicate.Addon(sql.FieldNotNull(FieldUsdPrice))
}

// CreditEQ applies the EQ predicate on the "credit" field.
func CreditEQ(v uint32) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldCredit, v))
}

// CreditNEQ applies the NEQ predicate on the "credit" field.
func CreditNEQ(v uint32) predicate.Addon {
	return predicate.Addon(sql.FieldNEQ(FieldCredit, v))
}

// CreditIn applies the In predicate on the "credit" field.
func CreditIn(vs ...uint32) predicate.Addon {
	return predicate.Addon(sql.FieldIn(FieldCredit, vs...))
}

// CreditNotIn applies the NotIn predicate on the "credit" field.
func CreditNotIn(vs ...uint32) predicate.Addon {
	return predicate.Addon(sql.FieldNotIn(FieldCredit, vs...))
}

// CreditGT applies the GT predicate on the "credit" field.
func CreditGT(v uint32) predicate.Addon {
	return predicate.Addon(sql.FieldGT(FieldCredit, v))
}

// CreditGTE applies the GTE predicate on the "credit" field.
func CreditGTE(v uint32) predicate.Addon {
	return predicate.Addon(sql.FieldGTE(FieldCredit, v))
}

// CreditLT applies the LT predicate on the "credit" field.
func CreditLT(v uint32) predicate.Addon {
	return predicate.Addon(sql.FieldLT(FieldCredit, v))
}

// CreditLTE applies the LTE predicate on the "credit" field.
func CreditLTE(v uint32) predicate.Addon {
	return predicate.Addon(sql.FieldLTE(FieldCredit, v))
}

// CreditIsNil applies the IsNil predicate on the "credit" field.
func CreditIsNil() predicate.Addon {
	return predicate.Addon(sql.FieldIsNull(FieldCredit))
}

// CreditNotNil applies the NotNil predicate on the "credit" field.
func CreditNotNil() predicate.Addon {
	return predicate.Addon(sql.FieldNotNull(FieldCredit))
}

// SortOrderEQ applies the EQ predicate on the "sort_order" field.
func SortOrderEQ(v uint32) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldSortOrder, v))
}

// SortOrderNEQ applies the NEQ predicate on the "sort_order" field.
func SortOrderNEQ(v uint32) predicate.Addon {
	return predicate.Addon(sql.FieldNEQ(FieldSortOrder, v))
}

// SortOrderIn applies the In predicate on the "sort_order" field.
func SortOrderIn(vs ...uint32) predicate.Addon {
	return predicate.Addon(sql.FieldIn(FieldSortOrder, vs...))
}

// SortOrderNotIn applies the NotIn predicate on the "sort_order" field.
func SortOrderNotIn(vs ...uint32) predicate.Addon {
	return predicate.Addon(sql.FieldNotIn(FieldSortOrder, vs...))
}

// SortOrderGT applies the GT predicate on the "sort_order" field.
func SortOrderGT(v uint32) predicate.Addon {
	return predicate.Addon(sql.FieldGT(FieldSortOrder, v))
}

// SortOrderGTE applies the GTE predicate on the "sort_order" field.
func SortOrderGTE(v uint32) predicate.Addon {
	return predicate.Addon(sql.FieldGTE(FieldSortOrder, v))
}

// SortOrderLT applies the LT predicate on the "sort_order" field.
func SortOrderLT(v uint32) predicate.Addon {
	return predicate.Addon(sql.FieldLT(FieldSortOrder, v))
}

// SortOrderLTE applies the LTE predicate on the "sort_order" field.
func SortOrderLTE(v uint32) predicate.Addon {
	return predicate.Addon(sql.FieldLTE(FieldSortOrder, v))
}

// SortOrderIsNil applies the IsNil predicate on the "sort_order" field.
func SortOrderIsNil() predicate.Addon {
	return predicate.Addon(sql.FieldIsNull(FieldSortOrder))
}

// SortOrderNotNil applies the NotNil predicate on the "sort_order" field.
func SortOrderNotNil() predicate.Addon {
	return predicate.Addon(sql.FieldNotNull(FieldSortOrder))
}

// EnabledEQ applies the EQ predicate on the "enabled" field.
func EnabledEQ(v bool) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldEnabled, v))
}

// EnabledNEQ applies the NEQ predicate on the "enabled" field.
func EnabledNEQ(v bool) predicate.Addon {
	return predicate.Addon(sql.FieldNEQ(FieldEnabled, v))
}

// EnabledIsNil applies the IsNil predicate on the "enabled" field.
func EnabledIsNil() predicate.Addon {
	return predicate.Addon(sql.FieldIsNull(FieldEnabled))
}

// EnabledNotNil applies the NotNil predicate on the "enabled" field.
func EnabledNotNil() predicate.Addon {
	return predicate.Addon(sql.FieldNotNull(FieldEnabled))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Addon {
	return predicate.Addon(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Addon {
	return predicate.Addon(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Addon {
	return predicate.Addon(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Addon {
	return predicate.Addon(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Addon {
	return predicate.Addon(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Addon {
	return predicate.Addon(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Addon {
	return predicate.Addon(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Addon {
	return predicate.Addon(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Addon {
	return predicate.Addon(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Addon {
	return predicate.Addon(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Addon {
	return predicate.Addon(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.Addon {
	return predicate.Addon(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.Addon {
	return predicate.Addon(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Addon {
	return predicate.Addon(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Addon {
	return predicate.Addon(sql.FieldContainsFold(FieldDescription, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Addon) predicate.Addon {
	return predicate.Addon(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Addon) predicate.Addon {
	return predicate.Addon(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Addon) predicate.Addon {
	return predicate.Addon(sql.NotPredicates(p))
}
