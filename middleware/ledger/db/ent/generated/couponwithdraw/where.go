// Code generated by ent, DO NOT EDIT.

package couponwithdraw

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/ledger/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldDeletedAt, v))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldEntID, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldAppID, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldUserID, v))
}

// CoinTypeID applies equality check predicate on the "coin_type_id" field. It's identical to CoinTypeIDEQ.
func CoinTypeID(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldCoinTypeID, v))
}

// AllocatedID applies equality check predicate on the "allocated_id" field. It's identical to AllocatedIDEQ.
func AllocatedID(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldAllocatedID, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v string) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldState, v))
}

// Amount applies equality check predicate on the "amount" field. It's identical to AmountEQ.
func Amount(v decimal.Decimal) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldAmount, v))
}

// ReviewID applies equality check predicate on the "review_id" field. It's identical to ReviewIDEQ.
func ReviewID(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldReviewID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLTE(FieldDeletedAt, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLTE(FieldEntID, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLTE(FieldAppID, v))
}

// AppIDIsNil applies the IsNil predicate on the "app_id" field.
func AppIDIsNil() predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIsNull(FieldAppID))
}

// AppIDNotNil applies the NotNil predicate on the "app_id" field.
func AppIDNotNil() predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotNull(FieldAppID))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLTE(FieldUserID, v))
}

// UserIDIsNil applies the IsNil predicate on the "user_id" field.
func UserIDIsNil() predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIsNull(FieldUserID))
}

// UserIDNotNil applies the NotNil predicate on the "user_id" field.
func UserIDNotNil() predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotNull(FieldUserID))
}

// CoinTypeIDEQ applies the EQ predicate on the "coin_type_id" field.
func CoinTypeIDEQ(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldCoinTypeID, v))
}

// CoinTypeIDNEQ applies the NEQ predicate on the "coin_type_id" field.
func CoinTypeIDNEQ(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNEQ(FieldCoinTypeID, v))
}

// CoinTypeIDIn applies the In predicate on the "coin_type_id" field.
func CoinTypeIDIn(vs ...uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIn(FieldCoinTypeID, vs...))
}

// CoinTypeIDNotIn applies the NotIn predicate on the "coin_type_id" field.
func CoinTypeIDNotIn(vs ...uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotIn(FieldCoinTypeID, vs...))
}

// CoinTypeIDGT applies the GT predicate on the "coin_type_id" field.
func CoinTypeIDGT(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGT(FieldCoinTypeID, v))
}

// CoinTypeIDGTE applies the GTE predicate on the "coin_type_id" field.
func CoinTypeIDGTE(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGTE(FieldCoinTypeID, v))
}

// CoinTypeIDLT applies the LT predicate on the "coin_type_id" field.
func CoinTypeIDLT(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLT(FieldCoinTypeID, v))
}

// CoinTypeIDLTE applies the LTE predicate on the "coin_type_id" field.
func CoinTypeIDLTE(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLTE(FieldCoinTypeID, v))
}

// CoinTypeIDIsNil applies the IsNil predicate on the "coin_type_id" field.
func CoinTypeIDIsNil() predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIsNull(FieldCoinTypeID))
}

// CoinTypeIDNotNil applies the NotNil predicate on the "coin_type_id" field.
func CoinTypeIDNotNil() predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotNull(FieldCoinTypeID))
}

// AllocatedIDEQ applies the EQ predicate on the "allocated_id" field.
func AllocatedIDEQ(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldAllocatedID, v))
}

// AllocatedIDNEQ applies the NEQ predicate on the "allocated_id" field.
func AllocatedIDNEQ(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNEQ(FieldAllocatedID, v))
}

// AllocatedIDIn applies the In predicate on the "allocated_id" field.
func AllocatedIDIn(vs ...uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIn(FieldAllocatedID, vs...))
}

// AllocatedIDNotIn applies the NotIn predicate on the "allocated_id" field.
func AllocatedIDNotIn(vs ...uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotIn(FieldAllocatedID, vs...))
}

// AllocatedIDGT applies the GT predicate on the "allocated_id" field.
func AllocatedIDGT(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGT(FieldAllocatedID, v))
}

// AllocatedIDGTE applies the GTE predicate on the "allocated_id" field.
func AllocatedIDGTE(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGTE(FieldAllocatedID, v))
}

// AllocatedIDLT applies the LT predicate on the "allocated_id" field.
func AllocatedIDLT(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLT(FieldAllocatedID, v))
}

// AllocatedIDLTE applies the LTE predicate on the "allocated_id" field.
func AllocatedIDLTE(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLTE(FieldAllocatedID, v))
}

// AllocatedIDIsNil applies the IsNil predicate on the "allocated_id" field.
func AllocatedIDIsNil() predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIsNull(FieldAllocatedID))
}

// AllocatedIDNotNil applies the NotNil predicate on the "allocated_id" field.
func AllocatedIDNotNil() predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotNull(FieldAllocatedID))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v string) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v string) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...string) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...string) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v string) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v string) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v string) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v string) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLTE(FieldState, v))
}

// StateContains applies the Contains predicate on the "state" field.
func StateContains(v string) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldContains(FieldState, v))
}

// StateHasPrefix applies the HasPrefix predicate on the "state" field.
func StateHasPrefix(v string) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldHasPrefix(FieldState, v))
}

// StateHasSuffix applies the HasSuffix predicate on the "state" field.
func StateHasSuffix(v string) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldHasSuffix(FieldState, v))
}

// StateIsNil applies the IsNil predicate on the "state" field.
func StateIsNil() predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIsNull(FieldState))
}

// StateNotNil applies the NotNil predicate on the "state" field.
func StateNotNil() predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotNull(FieldState))
}

// StateEqualFold applies the EqualFold predicate on the "state" field.
func StateEqualFold(v string) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEqualFold(FieldState, v))
}

// StateContainsFold applies the ContainsFold predicate on the "state" field.
func StateContainsFold(v string) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldContainsFold(FieldState, v))
}

// AmountEQ applies the EQ predicate on the "amount" field.
func AmountEQ(v decimal.Decimal) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldAmount, v))
}

// AmountNEQ applies the NEQ predicate on the "amount" field.
func AmountNEQ(v decimal.Decimal) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNEQ(FieldAmount, v))
}

// AmountIn applies the In predicate on the "amount" field.
func AmountIn(vs ...decimal.Decimal) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIn(FieldAmount, vs...))
}

// AmountNotIn applies the NotIn predicate on the "amount" field.
func AmountNotIn(vs ...decimal.Decimal) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotIn(FieldAmount, vs...))
}

// AmountGT applies the GT predicate on the "amount" field.
func AmountGT(v decimal.Decimal) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGT(FieldAmount, v))
}

// AmountGTE applies the GTE predicate on the "amount" field.
func AmountGTE(v decimal.Decimal) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGTE(FieldAmount, v))
}

// AmountLT applies the LT predicate on the "amount" field.
func AmountLT(v decimal.Decimal) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLT(FieldAmount, v))
}

// AmountLTE applies the LTE predicate on the "amount" field.
func AmountLTE(v decimal.Decimal) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLTE(FieldAmount, v))
}

// AmountIsNil applies the IsNil predicate on the "amount" field.
func AmountIsNil() predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIsNull(FieldAmount))
}

// AmountNotNil applies the NotNil predicate on the "amount" field.
func AmountNotNil() predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotNull(FieldAmount))
}

// ReviewIDEQ applies the EQ predicate on the "review_id" field.
func ReviewIDEQ(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldEQ(FieldReviewID, v))
}

// ReviewIDNEQ applies the NEQ predicate on the "review_id" field.
func ReviewIDNEQ(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNEQ(FieldReviewID, v))
}

// ReviewIDIn applies the In predicate on the "review_id" field.
func ReviewIDIn(vs ...uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIn(FieldReviewID, vs...))
}

// ReviewIDNotIn applies the NotIn predicate on the "review_id" field.
func ReviewIDNotIn(vs ...uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotIn(FieldReviewID, vs...))
}

// ReviewIDGT applies the GT predicate on the "review_id" field.
func ReviewIDGT(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGT(FieldReviewID, v))
}

// ReviewIDGTE applies the GTE predicate on the "review_id" field.
func ReviewIDGTE(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldGTE(FieldReviewID, v))
}

// ReviewIDLT applies the LT predicate on the "review_id" field.
func ReviewIDLT(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLT(FieldReviewID, v))
}

// ReviewIDLTE applies the LTE predicate on the "review_id" field.
func ReviewIDLTE(v uuid.UUID) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldLTE(FieldReviewID, v))
}

// ReviewIDIsNil applies the IsNil predicate on the "review_id" field.
func ReviewIDIsNil() predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldIsNull(FieldReviewID))
}

// ReviewIDNotNil applies the NotNil predicate on the "review_id" field.
func ReviewIDNotNil() predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.FieldNotNull(FieldReviewID))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CouponWithdraw) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CouponWithdraw) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CouponWithdraw) predicate.CouponWithdraw {
	return predicate.CouponWithdraw(sql.NotPredicates(p))
}
