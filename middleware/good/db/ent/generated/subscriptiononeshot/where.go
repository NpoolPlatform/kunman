// Code generated by ent, DO NOT EDIT.

package subscriptiononeshot

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/good/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLTE(FieldID, id))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldEntID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldDeletedAt, v))
}

// GoodID applies equality check predicate on the "good_id" field. It's identical to GoodIDEQ.
func GoodID(v uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldGoodID, v))
}

// Quota applies equality check predicate on the "quota" field. It's identical to QuotaEQ.
func Quota(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldQuota, v))
}

// UsdPrice applies equality check predicate on the "usd_price" field. It's identical to UsdPriceEQ.
func UsdPrice(v decimal.Decimal) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldUsdPrice, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLTE(FieldEntID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLTE(FieldDeletedAt, v))
}

// GoodIDEQ applies the EQ predicate on the "good_id" field.
func GoodIDEQ(v uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldGoodID, v))
}

// GoodIDNEQ applies the NEQ predicate on the "good_id" field.
func GoodIDNEQ(v uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNEQ(FieldGoodID, v))
}

// GoodIDIn applies the In predicate on the "good_id" field.
func GoodIDIn(vs ...uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldIn(FieldGoodID, vs...))
}

// GoodIDNotIn applies the NotIn predicate on the "good_id" field.
func GoodIDNotIn(vs ...uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNotIn(FieldGoodID, vs...))
}

// GoodIDGT applies the GT predicate on the "good_id" field.
func GoodIDGT(v uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGT(FieldGoodID, v))
}

// GoodIDGTE applies the GTE predicate on the "good_id" field.
func GoodIDGTE(v uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGTE(FieldGoodID, v))
}

// GoodIDLT applies the LT predicate on the "good_id" field.
func GoodIDLT(v uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLT(FieldGoodID, v))
}

// GoodIDLTE applies the LTE predicate on the "good_id" field.
func GoodIDLTE(v uuid.UUID) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLTE(FieldGoodID, v))
}

// GoodIDIsNil applies the IsNil predicate on the "good_id" field.
func GoodIDIsNil() predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldIsNull(FieldGoodID))
}

// GoodIDNotNil applies the NotNil predicate on the "good_id" field.
func GoodIDNotNil() predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNotNull(FieldGoodID))
}

// QuotaEQ applies the EQ predicate on the "quota" field.
func QuotaEQ(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldQuota, v))
}

// QuotaNEQ applies the NEQ predicate on the "quota" field.
func QuotaNEQ(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNEQ(FieldQuota, v))
}

// QuotaIn applies the In predicate on the "quota" field.
func QuotaIn(vs ...uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldIn(FieldQuota, vs...))
}

// QuotaNotIn applies the NotIn predicate on the "quota" field.
func QuotaNotIn(vs ...uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNotIn(FieldQuota, vs...))
}

// QuotaGT applies the GT predicate on the "quota" field.
func QuotaGT(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGT(FieldQuota, v))
}

// QuotaGTE applies the GTE predicate on the "quota" field.
func QuotaGTE(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGTE(FieldQuota, v))
}

// QuotaLT applies the LT predicate on the "quota" field.
func QuotaLT(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLT(FieldQuota, v))
}

// QuotaLTE applies the LTE predicate on the "quota" field.
func QuotaLTE(v uint32) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLTE(FieldQuota, v))
}

// QuotaIsNil applies the IsNil predicate on the "quota" field.
func QuotaIsNil() predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldIsNull(FieldQuota))
}

// QuotaNotNil applies the NotNil predicate on the "quota" field.
func QuotaNotNil() predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNotNull(FieldQuota))
}

// UsdPriceEQ applies the EQ predicate on the "usd_price" field.
func UsdPriceEQ(v decimal.Decimal) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldEQ(FieldUsdPrice, v))
}

// UsdPriceNEQ applies the NEQ predicate on the "usd_price" field.
func UsdPriceNEQ(v decimal.Decimal) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNEQ(FieldUsdPrice, v))
}

// UsdPriceIn applies the In predicate on the "usd_price" field.
func UsdPriceIn(vs ...decimal.Decimal) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldIn(FieldUsdPrice, vs...))
}

// UsdPriceNotIn applies the NotIn predicate on the "usd_price" field.
func UsdPriceNotIn(vs ...decimal.Decimal) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNotIn(FieldUsdPrice, vs...))
}

// UsdPriceGT applies the GT predicate on the "usd_price" field.
func UsdPriceGT(v decimal.Decimal) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGT(FieldUsdPrice, v))
}

// UsdPriceGTE applies the GTE predicate on the "usd_price" field.
func UsdPriceGTE(v decimal.Decimal) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldGTE(FieldUsdPrice, v))
}

// UsdPriceLT applies the LT predicate on the "usd_price" field.
func UsdPriceLT(v decimal.Decimal) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLT(FieldUsdPrice, v))
}

// UsdPriceLTE applies the LTE predicate on the "usd_price" field.
func UsdPriceLTE(v decimal.Decimal) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldLTE(FieldUsdPrice, v))
}

// UsdPriceIsNil applies the IsNil predicate on the "usd_price" field.
func UsdPriceIsNil() predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldIsNull(FieldUsdPrice))
}

// UsdPriceNotNil applies the NotNil predicate on the "usd_price" field.
func UsdPriceNotNil() predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.FieldNotNull(FieldUsdPrice))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SubscriptionOneShot) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SubscriptionOneShot) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SubscriptionOneShot) predicate.SubscriptionOneShot {
	return predicate.SubscriptionOneShot(sql.NotPredicates(p))
}
