// Code generated by ent, DO NOT EDIT.

package vendorbrand

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the vendorbrand type in the database.
	Label = "vendor_brand"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldLogo holds the string denoting the logo field in the database.
	FieldLogo = "logo"
	// Table holds the table name of the vendorbrand in the database.
	Table = "vendor_brands"
)

// Columns holds all SQL columns for vendorbrand fields.
var Columns = []string{
	FieldID,
	FieldEntID,
	FieldName,
	FieldLogo,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultLogo holds the default value on creation for the "logo" field.
	DefaultLogo string
	// LogoValidator is a validator for the "logo" field. It is called by the builders before save.
	LogoValidator func(string) error
)

// OrderOption defines the ordering options for the VendorBrand queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEntID orders the results by the ent_id field.
func ByEntID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByLogo orders the results by the logo field.
func ByLogo(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLogo, opts...).ToFunc()
}
