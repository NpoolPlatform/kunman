// Code generated by ent, DO NOT EDIT.

package fbmcrowdfunding

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/good/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLTE(FieldID, id))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldEntID, v))
}

// GoodID applies equality check predicate on the "good_id" field. It's identical to GoodIDEQ.
func GoodID(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldGoodID, v))
}

// MinDepositAmount applies equality check predicate on the "min_deposit_amount" field. It's identical to MinDepositAmountEQ.
func MinDepositAmount(v decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldMinDepositAmount, v))
}

// DeliveryAt applies equality check predicate on the "delivery_at" field. It's identical to DeliveryAtEQ.
func DeliveryAt(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldDeliveryAt, v))
}

// TargetAmount applies equality check predicate on the "target_amount" field. It's identical to TargetAmountEQ.
func TargetAmount(v decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldTargetAmount, v))
}

// DepositStartAt applies equality check predicate on the "deposit_start_at" field. It's identical to DepositStartAtEQ.
func DepositStartAt(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldDepositStartAt, v))
}

// DepositEndAt applies equality check predicate on the "deposit_end_at" field. It's identical to DepositEndAtEQ.
func DepositEndAt(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldDepositEndAt, v))
}

// ContractAddress applies equality check predicate on the "contract_address" field. It's identical to ContractAddressEQ.
func ContractAddress(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldContractAddress, v))
}

// DepositCoinTypeID applies equality check predicate on the "deposit_coin_type_id" field. It's identical to DepositCoinTypeIDEQ.
func DepositCoinTypeID(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldDepositCoinTypeID, v))
}

// Redeemable applies equality check predicate on the "redeemable" field. It's identical to RedeemableEQ.
func Redeemable(v bool) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldRedeemable, v))
}

// RedeemDelayHours applies equality check predicate on the "redeem_delay_hours" field. It's identical to RedeemDelayHoursEQ.
func RedeemDelayHours(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldRedeemDelayHours, v))
}

// DurationDisplayType applies equality check predicate on the "duration_display_type" field. It's identical to DurationDisplayTypeEQ.
func DurationDisplayType(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldDurationDisplayType, v))
}

// DurationSeconds applies equality check predicate on the "duration_seconds" field. It's identical to DurationSecondsEQ.
func DurationSeconds(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldDurationSeconds, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLTE(FieldEntID, v))
}

// GoodIDEQ applies the EQ predicate on the "good_id" field.
func GoodIDEQ(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldGoodID, v))
}

// GoodIDNEQ applies the NEQ predicate on the "good_id" field.
func GoodIDNEQ(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNEQ(FieldGoodID, v))
}

// GoodIDIn applies the In predicate on the "good_id" field.
func GoodIDIn(vs ...uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIn(FieldGoodID, vs...))
}

// GoodIDNotIn applies the NotIn predicate on the "good_id" field.
func GoodIDNotIn(vs ...uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotIn(FieldGoodID, vs...))
}

// GoodIDGT applies the GT predicate on the "good_id" field.
func GoodIDGT(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGT(FieldGoodID, v))
}

// GoodIDGTE applies the GTE predicate on the "good_id" field.
func GoodIDGTE(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGTE(FieldGoodID, v))
}

// GoodIDLT applies the LT predicate on the "good_id" field.
func GoodIDLT(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLT(FieldGoodID, v))
}

// GoodIDLTE applies the LTE predicate on the "good_id" field.
func GoodIDLTE(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLTE(FieldGoodID, v))
}

// GoodIDIsNil applies the IsNil predicate on the "good_id" field.
func GoodIDIsNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIsNull(FieldGoodID))
}

// GoodIDNotNil applies the NotNil predicate on the "good_id" field.
func GoodIDNotNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotNull(FieldGoodID))
}

// MinDepositAmountEQ applies the EQ predicate on the "min_deposit_amount" field.
func MinDepositAmountEQ(v decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldMinDepositAmount, v))
}

// MinDepositAmountNEQ applies the NEQ predicate on the "min_deposit_amount" field.
func MinDepositAmountNEQ(v decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNEQ(FieldMinDepositAmount, v))
}

// MinDepositAmountIn applies the In predicate on the "min_deposit_amount" field.
func MinDepositAmountIn(vs ...decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIn(FieldMinDepositAmount, vs...))
}

// MinDepositAmountNotIn applies the NotIn predicate on the "min_deposit_amount" field.
func MinDepositAmountNotIn(vs ...decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotIn(FieldMinDepositAmount, vs...))
}

// MinDepositAmountGT applies the GT predicate on the "min_deposit_amount" field.
func MinDepositAmountGT(v decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGT(FieldMinDepositAmount, v))
}

// MinDepositAmountGTE applies the GTE predicate on the "min_deposit_amount" field.
func MinDepositAmountGTE(v decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGTE(FieldMinDepositAmount, v))
}

// MinDepositAmountLT applies the LT predicate on the "min_deposit_amount" field.
func MinDepositAmountLT(v decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLT(FieldMinDepositAmount, v))
}

// MinDepositAmountLTE applies the LTE predicate on the "min_deposit_amount" field.
func MinDepositAmountLTE(v decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLTE(FieldMinDepositAmount, v))
}

// MinDepositAmountIsNil applies the IsNil predicate on the "min_deposit_amount" field.
func MinDepositAmountIsNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIsNull(FieldMinDepositAmount))
}

// MinDepositAmountNotNil applies the NotNil predicate on the "min_deposit_amount" field.
func MinDepositAmountNotNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotNull(FieldMinDepositAmount))
}

// DeliveryAtEQ applies the EQ predicate on the "delivery_at" field.
func DeliveryAtEQ(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldDeliveryAt, v))
}

// DeliveryAtNEQ applies the NEQ predicate on the "delivery_at" field.
func DeliveryAtNEQ(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNEQ(FieldDeliveryAt, v))
}

// DeliveryAtIn applies the In predicate on the "delivery_at" field.
func DeliveryAtIn(vs ...uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIn(FieldDeliveryAt, vs...))
}

// DeliveryAtNotIn applies the NotIn predicate on the "delivery_at" field.
func DeliveryAtNotIn(vs ...uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotIn(FieldDeliveryAt, vs...))
}

// DeliveryAtGT applies the GT predicate on the "delivery_at" field.
func DeliveryAtGT(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGT(FieldDeliveryAt, v))
}

// DeliveryAtGTE applies the GTE predicate on the "delivery_at" field.
func DeliveryAtGTE(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGTE(FieldDeliveryAt, v))
}

// DeliveryAtLT applies the LT predicate on the "delivery_at" field.
func DeliveryAtLT(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLT(FieldDeliveryAt, v))
}

// DeliveryAtLTE applies the LTE predicate on the "delivery_at" field.
func DeliveryAtLTE(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLTE(FieldDeliveryAt, v))
}

// DeliveryAtIsNil applies the IsNil predicate on the "delivery_at" field.
func DeliveryAtIsNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIsNull(FieldDeliveryAt))
}

// DeliveryAtNotNil applies the NotNil predicate on the "delivery_at" field.
func DeliveryAtNotNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotNull(FieldDeliveryAt))
}

// TargetAmountEQ applies the EQ predicate on the "target_amount" field.
func TargetAmountEQ(v decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldTargetAmount, v))
}

// TargetAmountNEQ applies the NEQ predicate on the "target_amount" field.
func TargetAmountNEQ(v decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNEQ(FieldTargetAmount, v))
}

// TargetAmountIn applies the In predicate on the "target_amount" field.
func TargetAmountIn(vs ...decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIn(FieldTargetAmount, vs...))
}

// TargetAmountNotIn applies the NotIn predicate on the "target_amount" field.
func TargetAmountNotIn(vs ...decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotIn(FieldTargetAmount, vs...))
}

// TargetAmountGT applies the GT predicate on the "target_amount" field.
func TargetAmountGT(v decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGT(FieldTargetAmount, v))
}

// TargetAmountGTE applies the GTE predicate on the "target_amount" field.
func TargetAmountGTE(v decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGTE(FieldTargetAmount, v))
}

// TargetAmountLT applies the LT predicate on the "target_amount" field.
func TargetAmountLT(v decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLT(FieldTargetAmount, v))
}

// TargetAmountLTE applies the LTE predicate on the "target_amount" field.
func TargetAmountLTE(v decimal.Decimal) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLTE(FieldTargetAmount, v))
}

// TargetAmountIsNil applies the IsNil predicate on the "target_amount" field.
func TargetAmountIsNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIsNull(FieldTargetAmount))
}

// TargetAmountNotNil applies the NotNil predicate on the "target_amount" field.
func TargetAmountNotNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotNull(FieldTargetAmount))
}

// DepositStartAtEQ applies the EQ predicate on the "deposit_start_at" field.
func DepositStartAtEQ(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldDepositStartAt, v))
}

// DepositStartAtNEQ applies the NEQ predicate on the "deposit_start_at" field.
func DepositStartAtNEQ(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNEQ(FieldDepositStartAt, v))
}

// DepositStartAtIn applies the In predicate on the "deposit_start_at" field.
func DepositStartAtIn(vs ...uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIn(FieldDepositStartAt, vs...))
}

// DepositStartAtNotIn applies the NotIn predicate on the "deposit_start_at" field.
func DepositStartAtNotIn(vs ...uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotIn(FieldDepositStartAt, vs...))
}

// DepositStartAtGT applies the GT predicate on the "deposit_start_at" field.
func DepositStartAtGT(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGT(FieldDepositStartAt, v))
}

// DepositStartAtGTE applies the GTE predicate on the "deposit_start_at" field.
func DepositStartAtGTE(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGTE(FieldDepositStartAt, v))
}

// DepositStartAtLT applies the LT predicate on the "deposit_start_at" field.
func DepositStartAtLT(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLT(FieldDepositStartAt, v))
}

// DepositStartAtLTE applies the LTE predicate on the "deposit_start_at" field.
func DepositStartAtLTE(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLTE(FieldDepositStartAt, v))
}

// DepositStartAtIsNil applies the IsNil predicate on the "deposit_start_at" field.
func DepositStartAtIsNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIsNull(FieldDepositStartAt))
}

// DepositStartAtNotNil applies the NotNil predicate on the "deposit_start_at" field.
func DepositStartAtNotNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotNull(FieldDepositStartAt))
}

// DepositEndAtEQ applies the EQ predicate on the "deposit_end_at" field.
func DepositEndAtEQ(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldDepositEndAt, v))
}

// DepositEndAtNEQ applies the NEQ predicate on the "deposit_end_at" field.
func DepositEndAtNEQ(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNEQ(FieldDepositEndAt, v))
}

// DepositEndAtIn applies the In predicate on the "deposit_end_at" field.
func DepositEndAtIn(vs ...uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIn(FieldDepositEndAt, vs...))
}

// DepositEndAtNotIn applies the NotIn predicate on the "deposit_end_at" field.
func DepositEndAtNotIn(vs ...uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotIn(FieldDepositEndAt, vs...))
}

// DepositEndAtGT applies the GT predicate on the "deposit_end_at" field.
func DepositEndAtGT(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGT(FieldDepositEndAt, v))
}

// DepositEndAtGTE applies the GTE predicate on the "deposit_end_at" field.
func DepositEndAtGTE(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGTE(FieldDepositEndAt, v))
}

// DepositEndAtLT applies the LT predicate on the "deposit_end_at" field.
func DepositEndAtLT(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLT(FieldDepositEndAt, v))
}

// DepositEndAtLTE applies the LTE predicate on the "deposit_end_at" field.
func DepositEndAtLTE(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLTE(FieldDepositEndAt, v))
}

// DepositEndAtIsNil applies the IsNil predicate on the "deposit_end_at" field.
func DepositEndAtIsNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIsNull(FieldDepositEndAt))
}

// DepositEndAtNotNil applies the NotNil predicate on the "deposit_end_at" field.
func DepositEndAtNotNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotNull(FieldDepositEndAt))
}

// ContractAddressEQ applies the EQ predicate on the "contract_address" field.
func ContractAddressEQ(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldContractAddress, v))
}

// ContractAddressNEQ applies the NEQ predicate on the "contract_address" field.
func ContractAddressNEQ(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNEQ(FieldContractAddress, v))
}

// ContractAddressIn applies the In predicate on the "contract_address" field.
func ContractAddressIn(vs ...string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIn(FieldContractAddress, vs...))
}

// ContractAddressNotIn applies the NotIn predicate on the "contract_address" field.
func ContractAddressNotIn(vs ...string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotIn(FieldContractAddress, vs...))
}

// ContractAddressGT applies the GT predicate on the "contract_address" field.
func ContractAddressGT(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGT(FieldContractAddress, v))
}

// ContractAddressGTE applies the GTE predicate on the "contract_address" field.
func ContractAddressGTE(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGTE(FieldContractAddress, v))
}

// ContractAddressLT applies the LT predicate on the "contract_address" field.
func ContractAddressLT(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLT(FieldContractAddress, v))
}

// ContractAddressLTE applies the LTE predicate on the "contract_address" field.
func ContractAddressLTE(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLTE(FieldContractAddress, v))
}

// ContractAddressContains applies the Contains predicate on the "contract_address" field.
func ContractAddressContains(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldContains(FieldContractAddress, v))
}

// ContractAddressHasPrefix applies the HasPrefix predicate on the "contract_address" field.
func ContractAddressHasPrefix(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldHasPrefix(FieldContractAddress, v))
}

// ContractAddressHasSuffix applies the HasSuffix predicate on the "contract_address" field.
func ContractAddressHasSuffix(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldHasSuffix(FieldContractAddress, v))
}

// ContractAddressIsNil applies the IsNil predicate on the "contract_address" field.
func ContractAddressIsNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIsNull(FieldContractAddress))
}

// ContractAddressNotNil applies the NotNil predicate on the "contract_address" field.
func ContractAddressNotNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotNull(FieldContractAddress))
}

// ContractAddressEqualFold applies the EqualFold predicate on the "contract_address" field.
func ContractAddressEqualFold(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEqualFold(FieldContractAddress, v))
}

// ContractAddressContainsFold applies the ContainsFold predicate on the "contract_address" field.
func ContractAddressContainsFold(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldContainsFold(FieldContractAddress, v))
}

// DepositCoinTypeIDEQ applies the EQ predicate on the "deposit_coin_type_id" field.
func DepositCoinTypeIDEQ(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldDepositCoinTypeID, v))
}

// DepositCoinTypeIDNEQ applies the NEQ predicate on the "deposit_coin_type_id" field.
func DepositCoinTypeIDNEQ(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNEQ(FieldDepositCoinTypeID, v))
}

// DepositCoinTypeIDIn applies the In predicate on the "deposit_coin_type_id" field.
func DepositCoinTypeIDIn(vs ...uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIn(FieldDepositCoinTypeID, vs...))
}

// DepositCoinTypeIDNotIn applies the NotIn predicate on the "deposit_coin_type_id" field.
func DepositCoinTypeIDNotIn(vs ...uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotIn(FieldDepositCoinTypeID, vs...))
}

// DepositCoinTypeIDGT applies the GT predicate on the "deposit_coin_type_id" field.
func DepositCoinTypeIDGT(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGT(FieldDepositCoinTypeID, v))
}

// DepositCoinTypeIDGTE applies the GTE predicate on the "deposit_coin_type_id" field.
func DepositCoinTypeIDGTE(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGTE(FieldDepositCoinTypeID, v))
}

// DepositCoinTypeIDLT applies the LT predicate on the "deposit_coin_type_id" field.
func DepositCoinTypeIDLT(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLT(FieldDepositCoinTypeID, v))
}

// DepositCoinTypeIDLTE applies the LTE predicate on the "deposit_coin_type_id" field.
func DepositCoinTypeIDLTE(v uuid.UUID) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLTE(FieldDepositCoinTypeID, v))
}

// DepositCoinTypeIDIsNil applies the IsNil predicate on the "deposit_coin_type_id" field.
func DepositCoinTypeIDIsNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIsNull(FieldDepositCoinTypeID))
}

// DepositCoinTypeIDNotNil applies the NotNil predicate on the "deposit_coin_type_id" field.
func DepositCoinTypeIDNotNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotNull(FieldDepositCoinTypeID))
}

// RedeemableEQ applies the EQ predicate on the "redeemable" field.
func RedeemableEQ(v bool) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldRedeemable, v))
}

// RedeemableNEQ applies the NEQ predicate on the "redeemable" field.
func RedeemableNEQ(v bool) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNEQ(FieldRedeemable, v))
}

// RedeemableIsNil applies the IsNil predicate on the "redeemable" field.
func RedeemableIsNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIsNull(FieldRedeemable))
}

// RedeemableNotNil applies the NotNil predicate on the "redeemable" field.
func RedeemableNotNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotNull(FieldRedeemable))
}

// RedeemDelayHoursEQ applies the EQ predicate on the "redeem_delay_hours" field.
func RedeemDelayHoursEQ(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldRedeemDelayHours, v))
}

// RedeemDelayHoursNEQ applies the NEQ predicate on the "redeem_delay_hours" field.
func RedeemDelayHoursNEQ(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNEQ(FieldRedeemDelayHours, v))
}

// RedeemDelayHoursIn applies the In predicate on the "redeem_delay_hours" field.
func RedeemDelayHoursIn(vs ...uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIn(FieldRedeemDelayHours, vs...))
}

// RedeemDelayHoursNotIn applies the NotIn predicate on the "redeem_delay_hours" field.
func RedeemDelayHoursNotIn(vs ...uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotIn(FieldRedeemDelayHours, vs...))
}

// RedeemDelayHoursGT applies the GT predicate on the "redeem_delay_hours" field.
func RedeemDelayHoursGT(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGT(FieldRedeemDelayHours, v))
}

// RedeemDelayHoursGTE applies the GTE predicate on the "redeem_delay_hours" field.
func RedeemDelayHoursGTE(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGTE(FieldRedeemDelayHours, v))
}

// RedeemDelayHoursLT applies the LT predicate on the "redeem_delay_hours" field.
func RedeemDelayHoursLT(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLT(FieldRedeemDelayHours, v))
}

// RedeemDelayHoursLTE applies the LTE predicate on the "redeem_delay_hours" field.
func RedeemDelayHoursLTE(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLTE(FieldRedeemDelayHours, v))
}

// RedeemDelayHoursIsNil applies the IsNil predicate on the "redeem_delay_hours" field.
func RedeemDelayHoursIsNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIsNull(FieldRedeemDelayHours))
}

// RedeemDelayHoursNotNil applies the NotNil predicate on the "redeem_delay_hours" field.
func RedeemDelayHoursNotNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotNull(FieldRedeemDelayHours))
}

// DurationDisplayTypeEQ applies the EQ predicate on the "duration_display_type" field.
func DurationDisplayTypeEQ(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldDurationDisplayType, v))
}

// DurationDisplayTypeNEQ applies the NEQ predicate on the "duration_display_type" field.
func DurationDisplayTypeNEQ(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNEQ(FieldDurationDisplayType, v))
}

// DurationDisplayTypeIn applies the In predicate on the "duration_display_type" field.
func DurationDisplayTypeIn(vs ...string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIn(FieldDurationDisplayType, vs...))
}

// DurationDisplayTypeNotIn applies the NotIn predicate on the "duration_display_type" field.
func DurationDisplayTypeNotIn(vs ...string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotIn(FieldDurationDisplayType, vs...))
}

// DurationDisplayTypeGT applies the GT predicate on the "duration_display_type" field.
func DurationDisplayTypeGT(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGT(FieldDurationDisplayType, v))
}

// DurationDisplayTypeGTE applies the GTE predicate on the "duration_display_type" field.
func DurationDisplayTypeGTE(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGTE(FieldDurationDisplayType, v))
}

// DurationDisplayTypeLT applies the LT predicate on the "duration_display_type" field.
func DurationDisplayTypeLT(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLT(FieldDurationDisplayType, v))
}

// DurationDisplayTypeLTE applies the LTE predicate on the "duration_display_type" field.
func DurationDisplayTypeLTE(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLTE(FieldDurationDisplayType, v))
}

// DurationDisplayTypeContains applies the Contains predicate on the "duration_display_type" field.
func DurationDisplayTypeContains(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldContains(FieldDurationDisplayType, v))
}

// DurationDisplayTypeHasPrefix applies the HasPrefix predicate on the "duration_display_type" field.
func DurationDisplayTypeHasPrefix(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldHasPrefix(FieldDurationDisplayType, v))
}

// DurationDisplayTypeHasSuffix applies the HasSuffix predicate on the "duration_display_type" field.
func DurationDisplayTypeHasSuffix(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldHasSuffix(FieldDurationDisplayType, v))
}

// DurationDisplayTypeIsNil applies the IsNil predicate on the "duration_display_type" field.
func DurationDisplayTypeIsNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIsNull(FieldDurationDisplayType))
}

// DurationDisplayTypeNotNil applies the NotNil predicate on the "duration_display_type" field.
func DurationDisplayTypeNotNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotNull(FieldDurationDisplayType))
}

// DurationDisplayTypeEqualFold applies the EqualFold predicate on the "duration_display_type" field.
func DurationDisplayTypeEqualFold(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEqualFold(FieldDurationDisplayType, v))
}

// DurationDisplayTypeContainsFold applies the ContainsFold predicate on the "duration_display_type" field.
func DurationDisplayTypeContainsFold(v string) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldContainsFold(FieldDurationDisplayType, v))
}

// DurationSecondsEQ applies the EQ predicate on the "duration_seconds" field.
func DurationSecondsEQ(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldEQ(FieldDurationSeconds, v))
}

// DurationSecondsNEQ applies the NEQ predicate on the "duration_seconds" field.
func DurationSecondsNEQ(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNEQ(FieldDurationSeconds, v))
}

// DurationSecondsIn applies the In predicate on the "duration_seconds" field.
func DurationSecondsIn(vs ...uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIn(FieldDurationSeconds, vs...))
}

// DurationSecondsNotIn applies the NotIn predicate on the "duration_seconds" field.
func DurationSecondsNotIn(vs ...uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotIn(FieldDurationSeconds, vs...))
}

// DurationSecondsGT applies the GT predicate on the "duration_seconds" field.
func DurationSecondsGT(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGT(FieldDurationSeconds, v))
}

// DurationSecondsGTE applies the GTE predicate on the "duration_seconds" field.
func DurationSecondsGTE(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldGTE(FieldDurationSeconds, v))
}

// DurationSecondsLT applies the LT predicate on the "duration_seconds" field.
func DurationSecondsLT(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLT(FieldDurationSeconds, v))
}

// DurationSecondsLTE applies the LTE predicate on the "duration_seconds" field.
func DurationSecondsLTE(v uint32) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldLTE(FieldDurationSeconds, v))
}

// DurationSecondsIsNil applies the IsNil predicate on the "duration_seconds" field.
func DurationSecondsIsNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldIsNull(FieldDurationSeconds))
}

// DurationSecondsNotNil applies the NotNil predicate on the "duration_seconds" field.
func DurationSecondsNotNil() predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.FieldNotNull(FieldDurationSeconds))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.FbmCrowdFunding) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.FbmCrowdFunding) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.FbmCrowdFunding) predicate.FbmCrowdFunding {
	return predicate.FbmCrowdFunding(sql.NotPredicates(p))
}
