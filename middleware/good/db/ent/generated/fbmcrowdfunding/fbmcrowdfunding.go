// Code generated by ent, DO NOT EDIT.

package fbmcrowdfunding

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const (
	// Label holds the string label denoting the fbmcrowdfunding type in the database.
	Label = "fbm_crowd_funding"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldGoodID holds the string denoting the good_id field in the database.
	FieldGoodID = "good_id"
	// FieldMinDepositAmount holds the string denoting the min_deposit_amount field in the database.
	FieldMinDepositAmount = "min_deposit_amount"
	// FieldDeliveryAt holds the string denoting the delivery_at field in the database.
	FieldDeliveryAt = "delivery_at"
	// FieldTargetAmount holds the string denoting the target_amount field in the database.
	FieldTargetAmount = "target_amount"
	// FieldDepositStartAt holds the string denoting the deposit_start_at field in the database.
	FieldDepositStartAt = "deposit_start_at"
	// FieldDepositEndAt holds the string denoting the deposit_end_at field in the database.
	FieldDepositEndAt = "deposit_end_at"
	// FieldContractAddress holds the string denoting the contract_address field in the database.
	FieldContractAddress = "contract_address"
	// FieldDepositCoinTypeID holds the string denoting the deposit_coin_type_id field in the database.
	FieldDepositCoinTypeID = "deposit_coin_type_id"
	// FieldRedeemable holds the string denoting the redeemable field in the database.
	FieldRedeemable = "redeemable"
	// FieldRedeemDelayHours holds the string denoting the redeem_delay_hours field in the database.
	FieldRedeemDelayHours = "redeem_delay_hours"
	// FieldDurationDisplayType holds the string denoting the duration_display_type field in the database.
	FieldDurationDisplayType = "duration_display_type"
	// FieldDurationSeconds holds the string denoting the duration_seconds field in the database.
	FieldDurationSeconds = "duration_seconds"
	// Table holds the table name of the fbmcrowdfunding in the database.
	Table = "fbm_crowd_fundings"
)

// Columns holds all SQL columns for fbmcrowdfunding fields.
var Columns = []string{
	FieldID,
	FieldEntID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldGoodID,
	FieldMinDepositAmount,
	FieldDeliveryAt,
	FieldTargetAmount,
	FieldDepositStartAt,
	FieldDepositEndAt,
	FieldContractAddress,
	FieldDepositCoinTypeID,
	FieldRedeemable,
	FieldRedeemDelayHours,
	FieldDurationDisplayType,
	FieldDurationSeconds,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultGoodID holds the default value on creation for the "good_id" field.
	DefaultGoodID func() uuid.UUID
	// DefaultMinDepositAmount holds the default value on creation for the "min_deposit_amount" field.
	DefaultMinDepositAmount decimal.Decimal
	// DefaultDeliveryAt holds the default value on creation for the "delivery_at" field.
	DefaultDeliveryAt uint32
	// DefaultTargetAmount holds the default value on creation for the "target_amount" field.
	DefaultTargetAmount decimal.Decimal
	// DefaultDepositStartAt holds the default value on creation for the "deposit_start_at" field.
	DefaultDepositStartAt uint32
	// DefaultDepositEndAt holds the default value on creation for the "deposit_end_at" field.
	DefaultDepositEndAt uint32
	// DefaultContractAddress holds the default value on creation for the "contract_address" field.
	DefaultContractAddress string
	// DefaultDepositCoinTypeID holds the default value on creation for the "deposit_coin_type_id" field.
	DefaultDepositCoinTypeID func() uuid.UUID
	// DefaultRedeemable holds the default value on creation for the "redeemable" field.
	DefaultRedeemable bool
	// DefaultRedeemDelayHours holds the default value on creation for the "redeem_delay_hours" field.
	DefaultRedeemDelayHours uint32
	// DefaultDurationDisplayType holds the default value on creation for the "duration_display_type" field.
	DefaultDurationDisplayType string
	// DefaultDurationSeconds holds the default value on creation for the "duration_seconds" field.
	DefaultDurationSeconds uint32
)

// OrderOption defines the ordering options for the FbmCrowdFunding queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEntID orders the results by the ent_id field.
func ByEntID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByGoodID orders the results by the good_id field.
func ByGoodID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGoodID, opts...).ToFunc()
}

// ByMinDepositAmount orders the results by the min_deposit_amount field.
func ByMinDepositAmount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMinDepositAmount, opts...).ToFunc()
}

// ByDeliveryAt orders the results by the delivery_at field.
func ByDeliveryAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeliveryAt, opts...).ToFunc()
}

// ByTargetAmount orders the results by the target_amount field.
func ByTargetAmount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTargetAmount, opts...).ToFunc()
}

// ByDepositStartAt orders the results by the deposit_start_at field.
func ByDepositStartAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDepositStartAt, opts...).ToFunc()
}

// ByDepositEndAt orders the results by the deposit_end_at field.
func ByDepositEndAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDepositEndAt, opts...).ToFunc()
}

// ByContractAddress orders the results by the contract_address field.
func ByContractAddress(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldContractAddress, opts...).ToFunc()
}

// ByDepositCoinTypeID orders the results by the deposit_coin_type_id field.
func ByDepositCoinTypeID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDepositCoinTypeID, opts...).ToFunc()
}

// ByRedeemable orders the results by the redeemable field.
func ByRedeemable(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRedeemable, opts...).ToFunc()
}

// ByRedeemDelayHours orders the results by the redeem_delay_hours field.
func ByRedeemDelayHours(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRedeemDelayHours, opts...).ToFunc()
}

// ByDurationDisplayType orders the results by the duration_display_type field.
func ByDurationDisplayType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDurationDisplayType, opts...).ToFunc()
}

// ByDurationSeconds orders the results by the duration_seconds field.
func ByDurationSeconds(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDurationSeconds, opts...).ToFunc()
}
