// Code generated by ent, DO NOT EDIT.

package topmostposter

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/good/db/ent/generated/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldLTE(FieldID, id))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldEQ(FieldEntID, v))
}

// TopMostID applies equality check predicate on the "top_most_id" field. It's identical to TopMostIDEQ.
func TopMostID(v uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldEQ(FieldTopMostID, v))
}

// Poster applies equality check predicate on the "poster" field. It's identical to PosterEQ.
func Poster(v string) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldEQ(FieldPoster, v))
}

// Index applies equality check predicate on the "index" field. It's identical to IndexEQ.
func Index(v uint8) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldEQ(FieldIndex, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldLTE(FieldEntID, v))
}

// TopMostIDEQ applies the EQ predicate on the "top_most_id" field.
func TopMostIDEQ(v uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldEQ(FieldTopMostID, v))
}

// TopMostIDNEQ applies the NEQ predicate on the "top_most_id" field.
func TopMostIDNEQ(v uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldNEQ(FieldTopMostID, v))
}

// TopMostIDIn applies the In predicate on the "top_most_id" field.
func TopMostIDIn(vs ...uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldIn(FieldTopMostID, vs...))
}

// TopMostIDNotIn applies the NotIn predicate on the "top_most_id" field.
func TopMostIDNotIn(vs ...uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldNotIn(FieldTopMostID, vs...))
}

// TopMostIDGT applies the GT predicate on the "top_most_id" field.
func TopMostIDGT(v uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldGT(FieldTopMostID, v))
}

// TopMostIDGTE applies the GTE predicate on the "top_most_id" field.
func TopMostIDGTE(v uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldGTE(FieldTopMostID, v))
}

// TopMostIDLT applies the LT predicate on the "top_most_id" field.
func TopMostIDLT(v uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldLT(FieldTopMostID, v))
}

// TopMostIDLTE applies the LTE predicate on the "top_most_id" field.
func TopMostIDLTE(v uuid.UUID) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldLTE(FieldTopMostID, v))
}

// TopMostIDIsNil applies the IsNil predicate on the "top_most_id" field.
func TopMostIDIsNil() predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldIsNull(FieldTopMostID))
}

// TopMostIDNotNil applies the NotNil predicate on the "top_most_id" field.
func TopMostIDNotNil() predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldNotNull(FieldTopMostID))
}

// PosterEQ applies the EQ predicate on the "poster" field.
func PosterEQ(v string) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldEQ(FieldPoster, v))
}

// PosterNEQ applies the NEQ predicate on the "poster" field.
func PosterNEQ(v string) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldNEQ(FieldPoster, v))
}

// PosterIn applies the In predicate on the "poster" field.
func PosterIn(vs ...string) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldIn(FieldPoster, vs...))
}

// PosterNotIn applies the NotIn predicate on the "poster" field.
func PosterNotIn(vs ...string) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldNotIn(FieldPoster, vs...))
}

// PosterGT applies the GT predicate on the "poster" field.
func PosterGT(v string) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldGT(FieldPoster, v))
}

// PosterGTE applies the GTE predicate on the "poster" field.
func PosterGTE(v string) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldGTE(FieldPoster, v))
}

// PosterLT applies the LT predicate on the "poster" field.
func PosterLT(v string) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldLT(FieldPoster, v))
}

// PosterLTE applies the LTE predicate on the "poster" field.
func PosterLTE(v string) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldLTE(FieldPoster, v))
}

// PosterContains applies the Contains predicate on the "poster" field.
func PosterContains(v string) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldContains(FieldPoster, v))
}

// PosterHasPrefix applies the HasPrefix predicate on the "poster" field.
func PosterHasPrefix(v string) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldHasPrefix(FieldPoster, v))
}

// PosterHasSuffix applies the HasSuffix predicate on the "poster" field.
func PosterHasSuffix(v string) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldHasSuffix(FieldPoster, v))
}

// PosterIsNil applies the IsNil predicate on the "poster" field.
func PosterIsNil() predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldIsNull(FieldPoster))
}

// PosterNotNil applies the NotNil predicate on the "poster" field.
func PosterNotNil() predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldNotNull(FieldPoster))
}

// PosterEqualFold applies the EqualFold predicate on the "poster" field.
func PosterEqualFold(v string) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldEqualFold(FieldPoster, v))
}

// PosterContainsFold applies the ContainsFold predicate on the "poster" field.
func PosterContainsFold(v string) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldContainsFold(FieldPoster, v))
}

// IndexEQ applies the EQ predicate on the "index" field.
func IndexEQ(v uint8) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldEQ(FieldIndex, v))
}

// IndexNEQ applies the NEQ predicate on the "index" field.
func IndexNEQ(v uint8) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldNEQ(FieldIndex, v))
}

// IndexIn applies the In predicate on the "index" field.
func IndexIn(vs ...uint8) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldIn(FieldIndex, vs...))
}

// IndexNotIn applies the NotIn predicate on the "index" field.
func IndexNotIn(vs ...uint8) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldNotIn(FieldIndex, vs...))
}

// IndexGT applies the GT predicate on the "index" field.
func IndexGT(v uint8) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldGT(FieldIndex, v))
}

// IndexGTE applies the GTE predicate on the "index" field.
func IndexGTE(v uint8) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldGTE(FieldIndex, v))
}

// IndexLT applies the LT predicate on the "index" field.
func IndexLT(v uint8) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldLT(FieldIndex, v))
}

// IndexLTE applies the LTE predicate on the "index" field.
func IndexLTE(v uint8) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldLTE(FieldIndex, v))
}

// IndexIsNil applies the IsNil predicate on the "index" field.
func IndexIsNil() predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldIsNull(FieldIndex))
}

// IndexNotNil applies the NotNil predicate on the "index" field.
func IndexNotNil() predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.FieldNotNull(FieldIndex))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TopMostPoster) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TopMostPoster) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TopMostPoster) predicate.TopMostPoster {
	return predicate.TopMostPoster(sql.NotPredicates(p))
}
