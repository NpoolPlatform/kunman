// Code generated by ent, DO NOT EDIT.

package subscription

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const (
	// Label holds the string label denoting the subscription type in the database.
	Label = "subscription"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldGoodID holds the string denoting the good_id field in the database.
	FieldGoodID = "good_id"
	// FieldGoodType holds the string denoting the good_type field in the database.
	FieldGoodType = "good_type"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDurationDisplayType holds the string denoting the duration_display_type field in the database.
	FieldDurationDisplayType = "duration_display_type"
	// FieldDurationUnits holds the string denoting the duration_units field in the database.
	FieldDurationUnits = "duration_units"
	// FieldDurationQuota holds the string denoting the duration_quota field in the database.
	FieldDurationQuota = "duration_quota"
	// FieldDailyBonusQuota holds the string denoting the daily_bonus_quota field in the database.
	FieldDailyBonusQuota = "daily_bonus_quota"
	// FieldUsdPrice holds the string denoting the usd_price field in the database.
	FieldUsdPrice = "usd_price"
	// Table holds the table name of the subscription in the database.
	Table = "subscriptions"
)

// Columns holds all SQL columns for subscription fields.
var Columns = []string{
	FieldID,
	FieldEntID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldGoodID,
	FieldGoodType,
	FieldName,
	FieldDurationDisplayType,
	FieldDurationUnits,
	FieldDurationQuota,
	FieldDailyBonusQuota,
	FieldUsdPrice,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultGoodID holds the default value on creation for the "good_id" field.
	DefaultGoodID func() uuid.UUID
	// DefaultGoodType holds the default value on creation for the "good_type" field.
	DefaultGoodType string
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultDurationDisplayType holds the default value on creation for the "duration_display_type" field.
	DefaultDurationDisplayType string
	// DefaultDurationUnits holds the default value on creation for the "duration_units" field.
	DefaultDurationUnits uint32
	// DefaultDurationQuota holds the default value on creation for the "duration_quota" field.
	DefaultDurationQuota uint32
	// DefaultDailyBonusQuota holds the default value on creation for the "daily_bonus_quota" field.
	DefaultDailyBonusQuota uint32
	// DefaultUsdPrice holds the default value on creation for the "usd_price" field.
	DefaultUsdPrice decimal.Decimal
)

// OrderOption defines the ordering options for the Subscription queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEntID orders the results by the ent_id field.
func ByEntID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByGoodID orders the results by the good_id field.
func ByGoodID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGoodID, opts...).ToFunc()
}

// ByGoodType orders the results by the good_type field.
func ByGoodType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGoodType, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByDurationDisplayType orders the results by the duration_display_type field.
func ByDurationDisplayType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDurationDisplayType, opts...).ToFunc()
}

// ByDurationUnits orders the results by the duration_units field.
func ByDurationUnits(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDurationUnits, opts...).ToFunc()
}

// ByDurationQuota orders the results by the duration_quota field.
func ByDurationQuota(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDurationQuota, opts...).ToFunc()
}

// ByDailyBonusQuota orders the results by the daily_bonus_quota field.
func ByDailyBonusQuota(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDailyBonusQuota, opts...).ToFunc()
}

// ByUsdPrice orders the results by the usd_price field.
func ByUsdPrice(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUsdPrice, opts...).ToFunc()
}
