// Code generated by ent, DO NOT EDIT.

package recommend

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const (
	// Label holds the string label denoting the recommend type in the database.
	Label = "recommend"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldAppGoodID holds the string denoting the app_good_id field in the database.
	FieldAppGoodID = "app_good_id"
	// FieldRecommenderID holds the string denoting the recommender_id field in the database.
	FieldRecommenderID = "recommender_id"
	// FieldMessage holds the string denoting the message field in the database.
	FieldMessage = "message"
	// FieldRecommendIndex holds the string denoting the recommend_index field in the database.
	FieldRecommendIndex = "recommend_index"
	// FieldHide holds the string denoting the hide field in the database.
	FieldHide = "hide"
	// FieldHideReason holds the string denoting the hide_reason field in the database.
	FieldHideReason = "hide_reason"
	// Table holds the table name of the recommend in the database.
	Table = "app_good_recommends"
)

// Columns holds all SQL columns for recommend fields.
var Columns = []string{
	FieldID,
	FieldEntID,
	FieldAppGoodID,
	FieldRecommenderID,
	FieldMessage,
	FieldRecommendIndex,
	FieldHide,
	FieldHideReason,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultAppGoodID holds the default value on creation for the "app_good_id" field.
	DefaultAppGoodID func() uuid.UUID
	// DefaultRecommenderID holds the default value on creation for the "recommender_id" field.
	DefaultRecommenderID func() uuid.UUID
	// DefaultMessage holds the default value on creation for the "message" field.
	DefaultMessage string
	// DefaultRecommendIndex holds the default value on creation for the "recommend_index" field.
	DefaultRecommendIndex decimal.Decimal
	// DefaultHide holds the default value on creation for the "hide" field.
	DefaultHide bool
	// DefaultHideReason holds the default value on creation for the "hide_reason" field.
	DefaultHideReason string
)

// OrderOption defines the ordering options for the Recommend queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEntID orders the results by the ent_id field.
func ByEntID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntID, opts...).ToFunc()
}

// ByAppGoodID orders the results by the app_good_id field.
func ByAppGoodID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAppGoodID, opts...).ToFunc()
}

// ByRecommenderID orders the results by the recommender_id field.
func ByRecommenderID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRecommenderID, opts...).ToFunc()
}

// ByMessage orders the results by the message field.
func ByMessage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMessage, opts...).ToFunc()
}

// ByRecommendIndex orders the results by the recommend_index field.
func ByRecommendIndex(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRecommendIndex, opts...).ToFunc()
}

// ByHide orders the results by the hide field.
func ByHide(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHide, opts...).ToFunc()
}

// ByHideReason orders the results by the hide_reason field.
func ByHideReason(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHideReason, opts...).ToFunc()
}
