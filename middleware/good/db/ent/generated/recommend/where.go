// Code generated by ent, DO NOT EDIT.

package recommend

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/good/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.Recommend {
	return predicate.Recommend(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.Recommend {
	return predicate.Recommend(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.Recommend {
	return predicate.Recommend(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.Recommend {
	return predicate.Recommend(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.Recommend {
	return predicate.Recommend(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.Recommend {
	return predicate.Recommend(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.Recommend {
	return predicate.Recommend(sql.FieldLTE(FieldID, id))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldEntID, v))
}

// AppGoodID applies equality check predicate on the "app_good_id" field. It's identical to AppGoodIDEQ.
func AppGoodID(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldAppGoodID, v))
}

// RecommenderID applies equality check predicate on the "recommender_id" field. It's identical to RecommenderIDEQ.
func RecommenderID(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldRecommenderID, v))
}

// Message applies equality check predicate on the "message" field. It's identical to MessageEQ.
func Message(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldMessage, v))
}

// RecommendIndex applies equality check predicate on the "recommend_index" field. It's identical to RecommendIndexEQ.
func RecommendIndex(v decimal.Decimal) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldRecommendIndex, v))
}

// Hide applies equality check predicate on the "hide" field. It's identical to HideEQ.
func Hide(v bool) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldHide, v))
}

// HideReason applies equality check predicate on the "hide_reason" field. It's identical to HideReasonEQ.
func HideReason(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldHideReason, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldLTE(FieldEntID, v))
}

// AppGoodIDEQ applies the EQ predicate on the "app_good_id" field.
func AppGoodIDEQ(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldAppGoodID, v))
}

// AppGoodIDNEQ applies the NEQ predicate on the "app_good_id" field.
func AppGoodIDNEQ(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldNEQ(FieldAppGoodID, v))
}

// AppGoodIDIn applies the In predicate on the "app_good_id" field.
func AppGoodIDIn(vs ...uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldIn(FieldAppGoodID, vs...))
}

// AppGoodIDNotIn applies the NotIn predicate on the "app_good_id" field.
func AppGoodIDNotIn(vs ...uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldNotIn(FieldAppGoodID, vs...))
}

// AppGoodIDGT applies the GT predicate on the "app_good_id" field.
func AppGoodIDGT(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldGT(FieldAppGoodID, v))
}

// AppGoodIDGTE applies the GTE predicate on the "app_good_id" field.
func AppGoodIDGTE(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldGTE(FieldAppGoodID, v))
}

// AppGoodIDLT applies the LT predicate on the "app_good_id" field.
func AppGoodIDLT(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldLT(FieldAppGoodID, v))
}

// AppGoodIDLTE applies the LTE predicate on the "app_good_id" field.
func AppGoodIDLTE(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldLTE(FieldAppGoodID, v))
}

// AppGoodIDIsNil applies the IsNil predicate on the "app_good_id" field.
func AppGoodIDIsNil() predicate.Recommend {
	return predicate.Recommend(sql.FieldIsNull(FieldAppGoodID))
}

// AppGoodIDNotNil applies the NotNil predicate on the "app_good_id" field.
func AppGoodIDNotNil() predicate.Recommend {
	return predicate.Recommend(sql.FieldNotNull(FieldAppGoodID))
}

// RecommenderIDEQ applies the EQ predicate on the "recommender_id" field.
func RecommenderIDEQ(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldRecommenderID, v))
}

// RecommenderIDNEQ applies the NEQ predicate on the "recommender_id" field.
func RecommenderIDNEQ(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldNEQ(FieldRecommenderID, v))
}

// RecommenderIDIn applies the In predicate on the "recommender_id" field.
func RecommenderIDIn(vs ...uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldIn(FieldRecommenderID, vs...))
}

// RecommenderIDNotIn applies the NotIn predicate on the "recommender_id" field.
func RecommenderIDNotIn(vs ...uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldNotIn(FieldRecommenderID, vs...))
}

// RecommenderIDGT applies the GT predicate on the "recommender_id" field.
func RecommenderIDGT(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldGT(FieldRecommenderID, v))
}

// RecommenderIDGTE applies the GTE predicate on the "recommender_id" field.
func RecommenderIDGTE(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldGTE(FieldRecommenderID, v))
}

// RecommenderIDLT applies the LT predicate on the "recommender_id" field.
func RecommenderIDLT(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldLT(FieldRecommenderID, v))
}

// RecommenderIDLTE applies the LTE predicate on the "recommender_id" field.
func RecommenderIDLTE(v uuid.UUID) predicate.Recommend {
	return predicate.Recommend(sql.FieldLTE(FieldRecommenderID, v))
}

// RecommenderIDIsNil applies the IsNil predicate on the "recommender_id" field.
func RecommenderIDIsNil() predicate.Recommend {
	return predicate.Recommend(sql.FieldIsNull(FieldRecommenderID))
}

// RecommenderIDNotNil applies the NotNil predicate on the "recommender_id" field.
func RecommenderIDNotNil() predicate.Recommend {
	return predicate.Recommend(sql.FieldNotNull(FieldRecommenderID))
}

// MessageEQ applies the EQ predicate on the "message" field.
func MessageEQ(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldMessage, v))
}

// MessageNEQ applies the NEQ predicate on the "message" field.
func MessageNEQ(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldNEQ(FieldMessage, v))
}

// MessageIn applies the In predicate on the "message" field.
func MessageIn(vs ...string) predicate.Recommend {
	return predicate.Recommend(sql.FieldIn(FieldMessage, vs...))
}

// MessageNotIn applies the NotIn predicate on the "message" field.
func MessageNotIn(vs ...string) predicate.Recommend {
	return predicate.Recommend(sql.FieldNotIn(FieldMessage, vs...))
}

// MessageGT applies the GT predicate on the "message" field.
func MessageGT(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldGT(FieldMessage, v))
}

// MessageGTE applies the GTE predicate on the "message" field.
func MessageGTE(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldGTE(FieldMessage, v))
}

// MessageLT applies the LT predicate on the "message" field.
func MessageLT(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldLT(FieldMessage, v))
}

// MessageLTE applies the LTE predicate on the "message" field.
func MessageLTE(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldLTE(FieldMessage, v))
}

// MessageContains applies the Contains predicate on the "message" field.
func MessageContains(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldContains(FieldMessage, v))
}

// MessageHasPrefix applies the HasPrefix predicate on the "message" field.
func MessageHasPrefix(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldHasPrefix(FieldMessage, v))
}

// MessageHasSuffix applies the HasSuffix predicate on the "message" field.
func MessageHasSuffix(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldHasSuffix(FieldMessage, v))
}

// MessageIsNil applies the IsNil predicate on the "message" field.
func MessageIsNil() predicate.Recommend {
	return predicate.Recommend(sql.FieldIsNull(FieldMessage))
}

// MessageNotNil applies the NotNil predicate on the "message" field.
func MessageNotNil() predicate.Recommend {
	return predicate.Recommend(sql.FieldNotNull(FieldMessage))
}

// MessageEqualFold applies the EqualFold predicate on the "message" field.
func MessageEqualFold(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldEqualFold(FieldMessage, v))
}

// MessageContainsFold applies the ContainsFold predicate on the "message" field.
func MessageContainsFold(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldContainsFold(FieldMessage, v))
}

// RecommendIndexEQ applies the EQ predicate on the "recommend_index" field.
func RecommendIndexEQ(v decimal.Decimal) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldRecommendIndex, v))
}

// RecommendIndexNEQ applies the NEQ predicate on the "recommend_index" field.
func RecommendIndexNEQ(v decimal.Decimal) predicate.Recommend {
	return predicate.Recommend(sql.FieldNEQ(FieldRecommendIndex, v))
}

// RecommendIndexIn applies the In predicate on the "recommend_index" field.
func RecommendIndexIn(vs ...decimal.Decimal) predicate.Recommend {
	return predicate.Recommend(sql.FieldIn(FieldRecommendIndex, vs...))
}

// RecommendIndexNotIn applies the NotIn predicate on the "recommend_index" field.
func RecommendIndexNotIn(vs ...decimal.Decimal) predicate.Recommend {
	return predicate.Recommend(sql.FieldNotIn(FieldRecommendIndex, vs...))
}

// RecommendIndexGT applies the GT predicate on the "recommend_index" field.
func RecommendIndexGT(v decimal.Decimal) predicate.Recommend {
	return predicate.Recommend(sql.FieldGT(FieldRecommendIndex, v))
}

// RecommendIndexGTE applies the GTE predicate on the "recommend_index" field.
func RecommendIndexGTE(v decimal.Decimal) predicate.Recommend {
	return predicate.Recommend(sql.FieldGTE(FieldRecommendIndex, v))
}

// RecommendIndexLT applies the LT predicate on the "recommend_index" field.
func RecommendIndexLT(v decimal.Decimal) predicate.Recommend {
	return predicate.Recommend(sql.FieldLT(FieldRecommendIndex, v))
}

// RecommendIndexLTE applies the LTE predicate on the "recommend_index" field.
func RecommendIndexLTE(v decimal.Decimal) predicate.Recommend {
	return predicate.Recommend(sql.FieldLTE(FieldRecommendIndex, v))
}

// RecommendIndexIsNil applies the IsNil predicate on the "recommend_index" field.
func RecommendIndexIsNil() predicate.Recommend {
	return predicate.Recommend(sql.FieldIsNull(FieldRecommendIndex))
}

// RecommendIndexNotNil applies the NotNil predicate on the "recommend_index" field.
func RecommendIndexNotNil() predicate.Recommend {
	return predicate.Recommend(sql.FieldNotNull(FieldRecommendIndex))
}

// HideEQ applies the EQ predicate on the "hide" field.
func HideEQ(v bool) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldHide, v))
}

// HideNEQ applies the NEQ predicate on the "hide" field.
func HideNEQ(v bool) predicate.Recommend {
	return predicate.Recommend(sql.FieldNEQ(FieldHide, v))
}

// HideIsNil applies the IsNil predicate on the "hide" field.
func HideIsNil() predicate.Recommend {
	return predicate.Recommend(sql.FieldIsNull(FieldHide))
}

// HideNotNil applies the NotNil predicate on the "hide" field.
func HideNotNil() predicate.Recommend {
	return predicate.Recommend(sql.FieldNotNull(FieldHide))
}

// HideReasonEQ applies the EQ predicate on the "hide_reason" field.
func HideReasonEQ(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldEQ(FieldHideReason, v))
}

// HideReasonNEQ applies the NEQ predicate on the "hide_reason" field.
func HideReasonNEQ(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldNEQ(FieldHideReason, v))
}

// HideReasonIn applies the In predicate on the "hide_reason" field.
func HideReasonIn(vs ...string) predicate.Recommend {
	return predicate.Recommend(sql.FieldIn(FieldHideReason, vs...))
}

// HideReasonNotIn applies the NotIn predicate on the "hide_reason" field.
func HideReasonNotIn(vs ...string) predicate.Recommend {
	return predicate.Recommend(sql.FieldNotIn(FieldHideReason, vs...))
}

// HideReasonGT applies the GT predicate on the "hide_reason" field.
func HideReasonGT(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldGT(FieldHideReason, v))
}

// HideReasonGTE applies the GTE predicate on the "hide_reason" field.
func HideReasonGTE(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldGTE(FieldHideReason, v))
}

// HideReasonLT applies the LT predicate on the "hide_reason" field.
func HideReasonLT(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldLT(FieldHideReason, v))
}

// HideReasonLTE applies the LTE predicate on the "hide_reason" field.
func HideReasonLTE(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldLTE(FieldHideReason, v))
}

// HideReasonContains applies the Contains predicate on the "hide_reason" field.
func HideReasonContains(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldContains(FieldHideReason, v))
}

// HideReasonHasPrefix applies the HasPrefix predicate on the "hide_reason" field.
func HideReasonHasPrefix(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldHasPrefix(FieldHideReason, v))
}

// HideReasonHasSuffix applies the HasSuffix predicate on the "hide_reason" field.
func HideReasonHasSuffix(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldHasSuffix(FieldHideReason, v))
}

// HideReasonIsNil applies the IsNil predicate on the "hide_reason" field.
func HideReasonIsNil() predicate.Recommend {
	return predicate.Recommend(sql.FieldIsNull(FieldHideReason))
}

// HideReasonNotNil applies the NotNil predicate on the "hide_reason" field.
func HideReasonNotNil() predicate.Recommend {
	return predicate.Recommend(sql.FieldNotNull(FieldHideReason))
}

// HideReasonEqualFold applies the EqualFold predicate on the "hide_reason" field.
func HideReasonEqualFold(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldEqualFold(FieldHideReason, v))
}

// HideReasonContainsFold applies the ContainsFold predicate on the "hide_reason" field.
func HideReasonContainsFold(v string) predicate.Recommend {
	return predicate.Recommend(sql.FieldContainsFold(FieldHideReason, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Recommend) predicate.Recommend {
	return predicate.Recommend(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Recommend) predicate.Recommend {
	return predicate.Recommend(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Recommend) predicate.Recommend {
	return predicate.Recommend(sql.NotPredicates(p))
}
