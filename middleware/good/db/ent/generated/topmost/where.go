// Code generated by ent, DO NOT EDIT.

package topmost

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/good/db/ent/generated/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldLTE(FieldID, id))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldEntID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldDeletedAt, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldAppID, v))
}

// TopMostType applies equality check predicate on the "top_most_type" field. It's identical to TopMostTypeEQ.
func TopMostType(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldTopMostType, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldTitle, v))
}

// Message applies equality check predicate on the "message" field. It's identical to MessageEQ.
func Message(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldMessage, v))
}

// TargetURL applies equality check predicate on the "target_url" field. It's identical to TargetURLEQ.
func TargetURL(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldTargetURL, v))
}

// StartAt applies equality check predicate on the "start_at" field. It's identical to StartAtEQ.
func StartAt(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldStartAt, v))
}

// EndAt applies equality check predicate on the "end_at" field. It's identical to EndAtEQ.
func EndAt(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldEndAt, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldLTE(FieldEntID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldLTE(FieldDeletedAt, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v uuid.UUID) predicate.TopMost {
	return predicate.TopMost(sql.FieldLTE(FieldAppID, v))
}

// AppIDIsNil applies the IsNil predicate on the "app_id" field.
func AppIDIsNil() predicate.TopMost {
	return predicate.TopMost(sql.FieldIsNull(FieldAppID))
}

// AppIDNotNil applies the NotNil predicate on the "app_id" field.
func AppIDNotNil() predicate.TopMost {
	return predicate.TopMost(sql.FieldNotNull(FieldAppID))
}

// TopMostTypeEQ applies the EQ predicate on the "top_most_type" field.
func TopMostTypeEQ(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldTopMostType, v))
}

// TopMostTypeNEQ applies the NEQ predicate on the "top_most_type" field.
func TopMostTypeNEQ(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldNEQ(FieldTopMostType, v))
}

// TopMostTypeIn applies the In predicate on the "top_most_type" field.
func TopMostTypeIn(vs ...string) predicate.TopMost {
	return predicate.TopMost(sql.FieldIn(FieldTopMostType, vs...))
}

// TopMostTypeNotIn applies the NotIn predicate on the "top_most_type" field.
func TopMostTypeNotIn(vs ...string) predicate.TopMost {
	return predicate.TopMost(sql.FieldNotIn(FieldTopMostType, vs...))
}

// TopMostTypeGT applies the GT predicate on the "top_most_type" field.
func TopMostTypeGT(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldGT(FieldTopMostType, v))
}

// TopMostTypeGTE applies the GTE predicate on the "top_most_type" field.
func TopMostTypeGTE(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldGTE(FieldTopMostType, v))
}

// TopMostTypeLT applies the LT predicate on the "top_most_type" field.
func TopMostTypeLT(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldLT(FieldTopMostType, v))
}

// TopMostTypeLTE applies the LTE predicate on the "top_most_type" field.
func TopMostTypeLTE(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldLTE(FieldTopMostType, v))
}

// TopMostTypeContains applies the Contains predicate on the "top_most_type" field.
func TopMostTypeContains(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldContains(FieldTopMostType, v))
}

// TopMostTypeHasPrefix applies the HasPrefix predicate on the "top_most_type" field.
func TopMostTypeHasPrefix(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldHasPrefix(FieldTopMostType, v))
}

// TopMostTypeHasSuffix applies the HasSuffix predicate on the "top_most_type" field.
func TopMostTypeHasSuffix(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldHasSuffix(FieldTopMostType, v))
}

// TopMostTypeIsNil applies the IsNil predicate on the "top_most_type" field.
func TopMostTypeIsNil() predicate.TopMost {
	return predicate.TopMost(sql.FieldIsNull(FieldTopMostType))
}

// TopMostTypeNotNil applies the NotNil predicate on the "top_most_type" field.
func TopMostTypeNotNil() predicate.TopMost {
	return predicate.TopMost(sql.FieldNotNull(FieldTopMostType))
}

// TopMostTypeEqualFold applies the EqualFold predicate on the "top_most_type" field.
func TopMostTypeEqualFold(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldEqualFold(FieldTopMostType, v))
}

// TopMostTypeContainsFold applies the ContainsFold predicate on the "top_most_type" field.
func TopMostTypeContainsFold(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldContainsFold(FieldTopMostType, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.TopMost {
	return predicate.TopMost(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.TopMost {
	return predicate.TopMost(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleIsNil applies the IsNil predicate on the "title" field.
func TitleIsNil() predicate.TopMost {
	return predicate.TopMost(sql.FieldIsNull(FieldTitle))
}

// TitleNotNil applies the NotNil predicate on the "title" field.
func TitleNotNil() predicate.TopMost {
	return predicate.TopMost(sql.FieldNotNull(FieldTitle))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldContainsFold(FieldTitle, v))
}

// MessageEQ applies the EQ predicate on the "message" field.
func MessageEQ(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldMessage, v))
}

// MessageNEQ applies the NEQ predicate on the "message" field.
func MessageNEQ(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldNEQ(FieldMessage, v))
}

// MessageIn applies the In predicate on the "message" field.
func MessageIn(vs ...string) predicate.TopMost {
	return predicate.TopMost(sql.FieldIn(FieldMessage, vs...))
}

// MessageNotIn applies the NotIn predicate on the "message" field.
func MessageNotIn(vs ...string) predicate.TopMost {
	return predicate.TopMost(sql.FieldNotIn(FieldMessage, vs...))
}

// MessageGT applies the GT predicate on the "message" field.
func MessageGT(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldGT(FieldMessage, v))
}

// MessageGTE applies the GTE predicate on the "message" field.
func MessageGTE(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldGTE(FieldMessage, v))
}

// MessageLT applies the LT predicate on the "message" field.
func MessageLT(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldLT(FieldMessage, v))
}

// MessageLTE applies the LTE predicate on the "message" field.
func MessageLTE(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldLTE(FieldMessage, v))
}

// MessageContains applies the Contains predicate on the "message" field.
func MessageContains(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldContains(FieldMessage, v))
}

// MessageHasPrefix applies the HasPrefix predicate on the "message" field.
func MessageHasPrefix(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldHasPrefix(FieldMessage, v))
}

// MessageHasSuffix applies the HasSuffix predicate on the "message" field.
func MessageHasSuffix(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldHasSuffix(FieldMessage, v))
}

// MessageIsNil applies the IsNil predicate on the "message" field.
func MessageIsNil() predicate.TopMost {
	return predicate.TopMost(sql.FieldIsNull(FieldMessage))
}

// MessageNotNil applies the NotNil predicate on the "message" field.
func MessageNotNil() predicate.TopMost {
	return predicate.TopMost(sql.FieldNotNull(FieldMessage))
}

// MessageEqualFold applies the EqualFold predicate on the "message" field.
func MessageEqualFold(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldEqualFold(FieldMessage, v))
}

// MessageContainsFold applies the ContainsFold predicate on the "message" field.
func MessageContainsFold(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldContainsFold(FieldMessage, v))
}

// TargetURLEQ applies the EQ predicate on the "target_url" field.
func TargetURLEQ(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldTargetURL, v))
}

// TargetURLNEQ applies the NEQ predicate on the "target_url" field.
func TargetURLNEQ(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldNEQ(FieldTargetURL, v))
}

// TargetURLIn applies the In predicate on the "target_url" field.
func TargetURLIn(vs ...string) predicate.TopMost {
	return predicate.TopMost(sql.FieldIn(FieldTargetURL, vs...))
}

// TargetURLNotIn applies the NotIn predicate on the "target_url" field.
func TargetURLNotIn(vs ...string) predicate.TopMost {
	return predicate.TopMost(sql.FieldNotIn(FieldTargetURL, vs...))
}

// TargetURLGT applies the GT predicate on the "target_url" field.
func TargetURLGT(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldGT(FieldTargetURL, v))
}

// TargetURLGTE applies the GTE predicate on the "target_url" field.
func TargetURLGTE(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldGTE(FieldTargetURL, v))
}

// TargetURLLT applies the LT predicate on the "target_url" field.
func TargetURLLT(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldLT(FieldTargetURL, v))
}

// TargetURLLTE applies the LTE predicate on the "target_url" field.
func TargetURLLTE(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldLTE(FieldTargetURL, v))
}

// TargetURLContains applies the Contains predicate on the "target_url" field.
func TargetURLContains(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldContains(FieldTargetURL, v))
}

// TargetURLHasPrefix applies the HasPrefix predicate on the "target_url" field.
func TargetURLHasPrefix(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldHasPrefix(FieldTargetURL, v))
}

// TargetURLHasSuffix applies the HasSuffix predicate on the "target_url" field.
func TargetURLHasSuffix(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldHasSuffix(FieldTargetURL, v))
}

// TargetURLIsNil applies the IsNil predicate on the "target_url" field.
func TargetURLIsNil() predicate.TopMost {
	return predicate.TopMost(sql.FieldIsNull(FieldTargetURL))
}

// TargetURLNotNil applies the NotNil predicate on the "target_url" field.
func TargetURLNotNil() predicate.TopMost {
	return predicate.TopMost(sql.FieldNotNull(FieldTargetURL))
}

// TargetURLEqualFold applies the EqualFold predicate on the "target_url" field.
func TargetURLEqualFold(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldEqualFold(FieldTargetURL, v))
}

// TargetURLContainsFold applies the ContainsFold predicate on the "target_url" field.
func TargetURLContainsFold(v string) predicate.TopMost {
	return predicate.TopMost(sql.FieldContainsFold(FieldTargetURL, v))
}

// StartAtEQ applies the EQ predicate on the "start_at" field.
func StartAtEQ(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldStartAt, v))
}

// StartAtNEQ applies the NEQ predicate on the "start_at" field.
func StartAtNEQ(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldNEQ(FieldStartAt, v))
}

// StartAtIn applies the In predicate on the "start_at" field.
func StartAtIn(vs ...uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldIn(FieldStartAt, vs...))
}

// StartAtNotIn applies the NotIn predicate on the "start_at" field.
func StartAtNotIn(vs ...uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldNotIn(FieldStartAt, vs...))
}

// StartAtGT applies the GT predicate on the "start_at" field.
func StartAtGT(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldGT(FieldStartAt, v))
}

// StartAtGTE applies the GTE predicate on the "start_at" field.
func StartAtGTE(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldGTE(FieldStartAt, v))
}

// StartAtLT applies the LT predicate on the "start_at" field.
func StartAtLT(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldLT(FieldStartAt, v))
}

// StartAtLTE applies the LTE predicate on the "start_at" field.
func StartAtLTE(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldLTE(FieldStartAt, v))
}

// StartAtIsNil applies the IsNil predicate on the "start_at" field.
func StartAtIsNil() predicate.TopMost {
	return predicate.TopMost(sql.FieldIsNull(FieldStartAt))
}

// StartAtNotNil applies the NotNil predicate on the "start_at" field.
func StartAtNotNil() predicate.TopMost {
	return predicate.TopMost(sql.FieldNotNull(FieldStartAt))
}

// EndAtEQ applies the EQ predicate on the "end_at" field.
func EndAtEQ(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldEQ(FieldEndAt, v))
}

// EndAtNEQ applies the NEQ predicate on the "end_at" field.
func EndAtNEQ(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldNEQ(FieldEndAt, v))
}

// EndAtIn applies the In predicate on the "end_at" field.
func EndAtIn(vs ...uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldIn(FieldEndAt, vs...))
}

// EndAtNotIn applies the NotIn predicate on the "end_at" field.
func EndAtNotIn(vs ...uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldNotIn(FieldEndAt, vs...))
}

// EndAtGT applies the GT predicate on the "end_at" field.
func EndAtGT(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldGT(FieldEndAt, v))
}

// EndAtGTE applies the GTE predicate on the "end_at" field.
func EndAtGTE(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldGTE(FieldEndAt, v))
}

// EndAtLT applies the LT predicate on the "end_at" field.
func EndAtLT(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldLT(FieldEndAt, v))
}

// EndAtLTE applies the LTE predicate on the "end_at" field.
func EndAtLTE(v uint32) predicate.TopMost {
	return predicate.TopMost(sql.FieldLTE(FieldEndAt, v))
}

// EndAtIsNil applies the IsNil predicate on the "end_at" field.
func EndAtIsNil() predicate.TopMost {
	return predicate.TopMost(sql.FieldIsNull(FieldEndAt))
}

// EndAtNotNil applies the NotNil predicate on the "end_at" field.
func EndAtNotNil() predicate.TopMost {
	return predicate.TopMost(sql.FieldNotNull(FieldEndAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TopMost) predicate.TopMost {
	return predicate.TopMost(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TopMost) predicate.TopMost {
	return predicate.TopMost(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TopMost) predicate.TopMost {
	return predicate.TopMost(sql.NotPredicates(p))
}
