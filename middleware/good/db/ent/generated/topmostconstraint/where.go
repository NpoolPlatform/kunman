// Code generated by ent, DO NOT EDIT.

package topmostconstraint

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/good/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLTE(FieldID, id))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldEntID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldDeletedAt, v))
}

// TopMostID applies equality check predicate on the "top_most_id" field. It's identical to TopMostIDEQ.
func TopMostID(v uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldTopMostID, v))
}

// Constraint applies equality check predicate on the "constraint" field. It's identical to ConstraintEQ.
func Constraint(v string) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldConstraint, v))
}

// TargetValue applies equality check predicate on the "target_value" field. It's identical to TargetValueEQ.
func TargetValue(v decimal.Decimal) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldTargetValue, v))
}

// Index applies equality check predicate on the "index" field. It's identical to IndexEQ.
func Index(v uint8) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldIndex, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLTE(FieldEntID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLTE(FieldDeletedAt, v))
}

// TopMostIDEQ applies the EQ predicate on the "top_most_id" field.
func TopMostIDEQ(v uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldTopMostID, v))
}

// TopMostIDNEQ applies the NEQ predicate on the "top_most_id" field.
func TopMostIDNEQ(v uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNEQ(FieldTopMostID, v))
}

// TopMostIDIn applies the In predicate on the "top_most_id" field.
func TopMostIDIn(vs ...uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldIn(FieldTopMostID, vs...))
}

// TopMostIDNotIn applies the NotIn predicate on the "top_most_id" field.
func TopMostIDNotIn(vs ...uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNotIn(FieldTopMostID, vs...))
}

// TopMostIDGT applies the GT predicate on the "top_most_id" field.
func TopMostIDGT(v uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGT(FieldTopMostID, v))
}

// TopMostIDGTE applies the GTE predicate on the "top_most_id" field.
func TopMostIDGTE(v uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGTE(FieldTopMostID, v))
}

// TopMostIDLT applies the LT predicate on the "top_most_id" field.
func TopMostIDLT(v uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLT(FieldTopMostID, v))
}

// TopMostIDLTE applies the LTE predicate on the "top_most_id" field.
func TopMostIDLTE(v uuid.UUID) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLTE(FieldTopMostID, v))
}

// TopMostIDIsNil applies the IsNil predicate on the "top_most_id" field.
func TopMostIDIsNil() predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldIsNull(FieldTopMostID))
}

// TopMostIDNotNil applies the NotNil predicate on the "top_most_id" field.
func TopMostIDNotNil() predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNotNull(FieldTopMostID))
}

// ConstraintEQ applies the EQ predicate on the "constraint" field.
func ConstraintEQ(v string) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldConstraint, v))
}

// ConstraintNEQ applies the NEQ predicate on the "constraint" field.
func ConstraintNEQ(v string) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNEQ(FieldConstraint, v))
}

// ConstraintIn applies the In predicate on the "constraint" field.
func ConstraintIn(vs ...string) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldIn(FieldConstraint, vs...))
}

// ConstraintNotIn applies the NotIn predicate on the "constraint" field.
func ConstraintNotIn(vs ...string) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNotIn(FieldConstraint, vs...))
}

// ConstraintGT applies the GT predicate on the "constraint" field.
func ConstraintGT(v string) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGT(FieldConstraint, v))
}

// ConstraintGTE applies the GTE predicate on the "constraint" field.
func ConstraintGTE(v string) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGTE(FieldConstraint, v))
}

// ConstraintLT applies the LT predicate on the "constraint" field.
func ConstraintLT(v string) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLT(FieldConstraint, v))
}

// ConstraintLTE applies the LTE predicate on the "constraint" field.
func ConstraintLTE(v string) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLTE(FieldConstraint, v))
}

// ConstraintContains applies the Contains predicate on the "constraint" field.
func ConstraintContains(v string) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldContains(FieldConstraint, v))
}

// ConstraintHasPrefix applies the HasPrefix predicate on the "constraint" field.
func ConstraintHasPrefix(v string) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldHasPrefix(FieldConstraint, v))
}

// ConstraintHasSuffix applies the HasSuffix predicate on the "constraint" field.
func ConstraintHasSuffix(v string) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldHasSuffix(FieldConstraint, v))
}

// ConstraintIsNil applies the IsNil predicate on the "constraint" field.
func ConstraintIsNil() predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldIsNull(FieldConstraint))
}

// ConstraintNotNil applies the NotNil predicate on the "constraint" field.
func ConstraintNotNil() predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNotNull(FieldConstraint))
}

// ConstraintEqualFold applies the EqualFold predicate on the "constraint" field.
func ConstraintEqualFold(v string) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEqualFold(FieldConstraint, v))
}

// ConstraintContainsFold applies the ContainsFold predicate on the "constraint" field.
func ConstraintContainsFold(v string) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldContainsFold(FieldConstraint, v))
}

// TargetValueEQ applies the EQ predicate on the "target_value" field.
func TargetValueEQ(v decimal.Decimal) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldTargetValue, v))
}

// TargetValueNEQ applies the NEQ predicate on the "target_value" field.
func TargetValueNEQ(v decimal.Decimal) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNEQ(FieldTargetValue, v))
}

// TargetValueIn applies the In predicate on the "target_value" field.
func TargetValueIn(vs ...decimal.Decimal) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldIn(FieldTargetValue, vs...))
}

// TargetValueNotIn applies the NotIn predicate on the "target_value" field.
func TargetValueNotIn(vs ...decimal.Decimal) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNotIn(FieldTargetValue, vs...))
}

// TargetValueGT applies the GT predicate on the "target_value" field.
func TargetValueGT(v decimal.Decimal) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGT(FieldTargetValue, v))
}

// TargetValueGTE applies the GTE predicate on the "target_value" field.
func TargetValueGTE(v decimal.Decimal) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGTE(FieldTargetValue, v))
}

// TargetValueLT applies the LT predicate on the "target_value" field.
func TargetValueLT(v decimal.Decimal) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLT(FieldTargetValue, v))
}

// TargetValueLTE applies the LTE predicate on the "target_value" field.
func TargetValueLTE(v decimal.Decimal) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLTE(FieldTargetValue, v))
}

// TargetValueIsNil applies the IsNil predicate on the "target_value" field.
func TargetValueIsNil() predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldIsNull(FieldTargetValue))
}

// TargetValueNotNil applies the NotNil predicate on the "target_value" field.
func TargetValueNotNil() predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNotNull(FieldTargetValue))
}

// IndexEQ applies the EQ predicate on the "index" field.
func IndexEQ(v uint8) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldEQ(FieldIndex, v))
}

// IndexNEQ applies the NEQ predicate on the "index" field.
func IndexNEQ(v uint8) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNEQ(FieldIndex, v))
}

// IndexIn applies the In predicate on the "index" field.
func IndexIn(vs ...uint8) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldIn(FieldIndex, vs...))
}

// IndexNotIn applies the NotIn predicate on the "index" field.
func IndexNotIn(vs ...uint8) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNotIn(FieldIndex, vs...))
}

// IndexGT applies the GT predicate on the "index" field.
func IndexGT(v uint8) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGT(FieldIndex, v))
}

// IndexGTE applies the GTE predicate on the "index" field.
func IndexGTE(v uint8) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldGTE(FieldIndex, v))
}

// IndexLT applies the LT predicate on the "index" field.
func IndexLT(v uint8) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLT(FieldIndex, v))
}

// IndexLTE applies the LTE predicate on the "index" field.
func IndexLTE(v uint8) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldLTE(FieldIndex, v))
}

// IndexIsNil applies the IsNil predicate on the "index" field.
func IndexIsNil() predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldIsNull(FieldIndex))
}

// IndexNotNil applies the NotNil predicate on the "index" field.
func IndexNotNil() predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.FieldNotNull(FieldIndex))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TopMostConstraint) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TopMostConstraint) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TopMostConstraint) predicate.TopMostConstraint {
	return predicate.TopMostConstraint(sql.NotPredicates(p))
}
