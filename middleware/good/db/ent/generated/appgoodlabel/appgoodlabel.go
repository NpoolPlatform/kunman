// Code generated by ent, DO NOT EDIT.

package appgoodlabel

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the appgoodlabel type in the database.
	Label = "app_good_label"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldAppGoodID holds the string denoting the app_good_id field in the database.
	FieldAppGoodID = "app_good_id"
	// FieldIcon holds the string denoting the icon field in the database.
	FieldIcon = "icon"
	// FieldIconBgColor holds the string denoting the icon_bg_color field in the database.
	FieldIconBgColor = "icon_bg_color"
	// FieldLabel holds the string denoting the label field in the database.
	FieldLabel = "label"
	// FieldLabelBgColor holds the string denoting the label_bg_color field in the database.
	FieldLabelBgColor = "label_bg_color"
	// FieldIndex holds the string denoting the index field in the database.
	FieldIndex = "index"
	// Table holds the table name of the appgoodlabel in the database.
	Table = "app_good_labels"
)

// Columns holds all SQL columns for appgoodlabel fields.
var Columns = []string{
	FieldID,
	FieldEntID,
	FieldAppGoodID,
	FieldIcon,
	FieldIconBgColor,
	FieldLabel,
	FieldLabelBgColor,
	FieldIndex,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultAppGoodID holds the default value on creation for the "app_good_id" field.
	DefaultAppGoodID func() uuid.UUID
	// DefaultIcon holds the default value on creation for the "icon" field.
	DefaultIcon string
	// DefaultIconBgColor holds the default value on creation for the "icon_bg_color" field.
	DefaultIconBgColor string
	// DefaultLabel holds the default value on creation for the "label" field.
	DefaultLabel string
	// DefaultLabelBgColor holds the default value on creation for the "label_bg_color" field.
	DefaultLabelBgColor string
	// DefaultIndex holds the default value on creation for the "index" field.
	DefaultIndex uint8
)

// OrderOption defines the ordering options for the AppGoodLabel queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEntID orders the results by the ent_id field.
func ByEntID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntID, opts...).ToFunc()
}

// ByAppGoodID orders the results by the app_good_id field.
func ByAppGoodID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAppGoodID, opts...).ToFunc()
}

// ByIcon orders the results by the icon field.
func ByIcon(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIcon, opts...).ToFunc()
}

// ByIconBgColor orders the results by the icon_bg_color field.
func ByIconBgColor(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIconBgColor, opts...).ToFunc()
}

// ByLabel orders the results by the label field.
func ByLabel(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLabel, opts...).ToFunc()
}

// ByLabelBgColor orders the results by the label_bg_color field.
func ByLabelBgColor(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLabelBgColor, opts...).ToFunc()
}

// ByIndex orders the results by the index field.
func ByIndex(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIndex, opts...).ToFunc()
}
