// Code generated by ent, DO NOT EDIT.

package appsubscriptiononeshot

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const (
	// Label holds the string label denoting the appsubscriptiononeshot type in the database.
	Label = "app_subscription_one_shot"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldGoodID holds the string denoting the good_id field in the database.
	FieldGoodID = "good_id"
	// FieldAppGoodID holds the string denoting the app_good_id field in the database.
	FieldAppGoodID = "app_good_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldBanner holds the string denoting the banner field in the database.
	FieldBanner = "banner"
	// FieldUsdPrice holds the string denoting the usd_price field in the database.
	FieldUsdPrice = "usd_price"
	// Table holds the table name of the appsubscriptiononeshot in the database.
	Table = "app_subscription_one_shots"
)

// Columns holds all SQL columns for appsubscriptiononeshot fields.
var Columns = []string{
	FieldID,
	FieldEntID,
	FieldAppID,
	FieldGoodID,
	FieldAppGoodID,
	FieldName,
	FieldBanner,
	FieldUsdPrice,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultAppID holds the default value on creation for the "app_id" field.
	DefaultAppID func() uuid.UUID
	// DefaultGoodID holds the default value on creation for the "good_id" field.
	DefaultGoodID func() uuid.UUID
	// DefaultAppGoodID holds the default value on creation for the "app_good_id" field.
	DefaultAppGoodID func() uuid.UUID
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultBanner holds the default value on creation for the "banner" field.
	DefaultBanner string
	// DefaultUsdPrice holds the default value on creation for the "usd_price" field.
	DefaultUsdPrice decimal.Decimal
)

// OrderOption defines the ordering options for the AppSubscriptionOneShot queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEntID orders the results by the ent_id field.
func ByEntID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntID, opts...).ToFunc()
}

// ByAppID orders the results by the app_id field.
func ByAppID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAppID, opts...).ToFunc()
}

// ByGoodID orders the results by the good_id field.
func ByGoodID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGoodID, opts...).ToFunc()
}

// ByAppGoodID orders the results by the app_good_id field.
func ByAppGoodID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAppGoodID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByBanner orders the results by the banner field.
func ByBanner(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBanner, opts...).ToFunc()
}

// ByUsdPrice orders the results by the usd_price field.
func ByUsdPrice(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUsdPrice, opts...).ToFunc()
}
