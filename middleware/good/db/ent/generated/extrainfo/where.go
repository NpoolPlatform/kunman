// Code generated by ent, DO NOT EDIT.

package extrainfo

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/good/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLTE(FieldID, id))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldEntID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldDeletedAt, v))
}

// AppGoodID applies equality check predicate on the "app_good_id" field. It's identical to AppGoodIDEQ.
func AppGoodID(v uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldAppGoodID, v))
}

// Likes applies equality check predicate on the "likes" field. It's identical to LikesEQ.
func Likes(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldLikes, v))
}

// Dislikes applies equality check predicate on the "dislikes" field. It's identical to DislikesEQ.
func Dislikes(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldDislikes, v))
}

// RecommendCount applies equality check predicate on the "recommend_count" field. It's identical to RecommendCountEQ.
func RecommendCount(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldRecommendCount, v))
}

// CommentCount applies equality check predicate on the "comment_count" field. It's identical to CommentCountEQ.
func CommentCount(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldCommentCount, v))
}

// ScoreCount applies equality check predicate on the "score_count" field. It's identical to ScoreCountEQ.
func ScoreCount(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldScoreCount, v))
}

// Score applies equality check predicate on the "score" field. It's identical to ScoreEQ.
func Score(v decimal.Decimal) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldScore, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLTE(FieldEntID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLTE(FieldDeletedAt, v))
}

// AppGoodIDEQ applies the EQ predicate on the "app_good_id" field.
func AppGoodIDEQ(v uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldAppGoodID, v))
}

// AppGoodIDNEQ applies the NEQ predicate on the "app_good_id" field.
func AppGoodIDNEQ(v uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNEQ(FieldAppGoodID, v))
}

// AppGoodIDIn applies the In predicate on the "app_good_id" field.
func AppGoodIDIn(vs ...uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIn(FieldAppGoodID, vs...))
}

// AppGoodIDNotIn applies the NotIn predicate on the "app_good_id" field.
func AppGoodIDNotIn(vs ...uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotIn(FieldAppGoodID, vs...))
}

// AppGoodIDGT applies the GT predicate on the "app_good_id" field.
func AppGoodIDGT(v uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGT(FieldAppGoodID, v))
}

// AppGoodIDGTE applies the GTE predicate on the "app_good_id" field.
func AppGoodIDGTE(v uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGTE(FieldAppGoodID, v))
}

// AppGoodIDLT applies the LT predicate on the "app_good_id" field.
func AppGoodIDLT(v uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLT(FieldAppGoodID, v))
}

// AppGoodIDLTE applies the LTE predicate on the "app_good_id" field.
func AppGoodIDLTE(v uuid.UUID) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLTE(FieldAppGoodID, v))
}

// AppGoodIDIsNil applies the IsNil predicate on the "app_good_id" field.
func AppGoodIDIsNil() predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIsNull(FieldAppGoodID))
}

// AppGoodIDNotNil applies the NotNil predicate on the "app_good_id" field.
func AppGoodIDNotNil() predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotNull(FieldAppGoodID))
}

// LikesEQ applies the EQ predicate on the "likes" field.
func LikesEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldLikes, v))
}

// LikesNEQ applies the NEQ predicate on the "likes" field.
func LikesNEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNEQ(FieldLikes, v))
}

// LikesIn applies the In predicate on the "likes" field.
func LikesIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIn(FieldLikes, vs...))
}

// LikesNotIn applies the NotIn predicate on the "likes" field.
func LikesNotIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotIn(FieldLikes, vs...))
}

// LikesGT applies the GT predicate on the "likes" field.
func LikesGT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGT(FieldLikes, v))
}

// LikesGTE applies the GTE predicate on the "likes" field.
func LikesGTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGTE(FieldLikes, v))
}

// LikesLT applies the LT predicate on the "likes" field.
func LikesLT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLT(FieldLikes, v))
}

// LikesLTE applies the LTE predicate on the "likes" field.
func LikesLTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLTE(FieldLikes, v))
}

// LikesIsNil applies the IsNil predicate on the "likes" field.
func LikesIsNil() predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIsNull(FieldLikes))
}

// LikesNotNil applies the NotNil predicate on the "likes" field.
func LikesNotNil() predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotNull(FieldLikes))
}

// DislikesEQ applies the EQ predicate on the "dislikes" field.
func DislikesEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldDislikes, v))
}

// DislikesNEQ applies the NEQ predicate on the "dislikes" field.
func DislikesNEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNEQ(FieldDislikes, v))
}

// DislikesIn applies the In predicate on the "dislikes" field.
func DislikesIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIn(FieldDislikes, vs...))
}

// DislikesNotIn applies the NotIn predicate on the "dislikes" field.
func DislikesNotIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotIn(FieldDislikes, vs...))
}

// DislikesGT applies the GT predicate on the "dislikes" field.
func DislikesGT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGT(FieldDislikes, v))
}

// DislikesGTE applies the GTE predicate on the "dislikes" field.
func DislikesGTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGTE(FieldDislikes, v))
}

// DislikesLT applies the LT predicate on the "dislikes" field.
func DislikesLT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLT(FieldDislikes, v))
}

// DislikesLTE applies the LTE predicate on the "dislikes" field.
func DislikesLTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLTE(FieldDislikes, v))
}

// DislikesIsNil applies the IsNil predicate on the "dislikes" field.
func DislikesIsNil() predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIsNull(FieldDislikes))
}

// DislikesNotNil applies the NotNil predicate on the "dislikes" field.
func DislikesNotNil() predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotNull(FieldDislikes))
}

// RecommendCountEQ applies the EQ predicate on the "recommend_count" field.
func RecommendCountEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldRecommendCount, v))
}

// RecommendCountNEQ applies the NEQ predicate on the "recommend_count" field.
func RecommendCountNEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNEQ(FieldRecommendCount, v))
}

// RecommendCountIn applies the In predicate on the "recommend_count" field.
func RecommendCountIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIn(FieldRecommendCount, vs...))
}

// RecommendCountNotIn applies the NotIn predicate on the "recommend_count" field.
func RecommendCountNotIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotIn(FieldRecommendCount, vs...))
}

// RecommendCountGT applies the GT predicate on the "recommend_count" field.
func RecommendCountGT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGT(FieldRecommendCount, v))
}

// RecommendCountGTE applies the GTE predicate on the "recommend_count" field.
func RecommendCountGTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGTE(FieldRecommendCount, v))
}

// RecommendCountLT applies the LT predicate on the "recommend_count" field.
func RecommendCountLT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLT(FieldRecommendCount, v))
}

// RecommendCountLTE applies the LTE predicate on the "recommend_count" field.
func RecommendCountLTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLTE(FieldRecommendCount, v))
}

// RecommendCountIsNil applies the IsNil predicate on the "recommend_count" field.
func RecommendCountIsNil() predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIsNull(FieldRecommendCount))
}

// RecommendCountNotNil applies the NotNil predicate on the "recommend_count" field.
func RecommendCountNotNil() predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotNull(FieldRecommendCount))
}

// CommentCountEQ applies the EQ predicate on the "comment_count" field.
func CommentCountEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldCommentCount, v))
}

// CommentCountNEQ applies the NEQ predicate on the "comment_count" field.
func CommentCountNEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNEQ(FieldCommentCount, v))
}

// CommentCountIn applies the In predicate on the "comment_count" field.
func CommentCountIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIn(FieldCommentCount, vs...))
}

// CommentCountNotIn applies the NotIn predicate on the "comment_count" field.
func CommentCountNotIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotIn(FieldCommentCount, vs...))
}

// CommentCountGT applies the GT predicate on the "comment_count" field.
func CommentCountGT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGT(FieldCommentCount, v))
}

// CommentCountGTE applies the GTE predicate on the "comment_count" field.
func CommentCountGTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGTE(FieldCommentCount, v))
}

// CommentCountLT applies the LT predicate on the "comment_count" field.
func CommentCountLT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLT(FieldCommentCount, v))
}

// CommentCountLTE applies the LTE predicate on the "comment_count" field.
func CommentCountLTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLTE(FieldCommentCount, v))
}

// CommentCountIsNil applies the IsNil predicate on the "comment_count" field.
func CommentCountIsNil() predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIsNull(FieldCommentCount))
}

// CommentCountNotNil applies the NotNil predicate on the "comment_count" field.
func CommentCountNotNil() predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotNull(FieldCommentCount))
}

// ScoreCountEQ applies the EQ predicate on the "score_count" field.
func ScoreCountEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldScoreCount, v))
}

// ScoreCountNEQ applies the NEQ predicate on the "score_count" field.
func ScoreCountNEQ(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNEQ(FieldScoreCount, v))
}

// ScoreCountIn applies the In predicate on the "score_count" field.
func ScoreCountIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIn(FieldScoreCount, vs...))
}

// ScoreCountNotIn applies the NotIn predicate on the "score_count" field.
func ScoreCountNotIn(vs ...uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotIn(FieldScoreCount, vs...))
}

// ScoreCountGT applies the GT predicate on the "score_count" field.
func ScoreCountGT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGT(FieldScoreCount, v))
}

// ScoreCountGTE applies the GTE predicate on the "score_count" field.
func ScoreCountGTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGTE(FieldScoreCount, v))
}

// ScoreCountLT applies the LT predicate on the "score_count" field.
func ScoreCountLT(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLT(FieldScoreCount, v))
}

// ScoreCountLTE applies the LTE predicate on the "score_count" field.
func ScoreCountLTE(v uint32) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLTE(FieldScoreCount, v))
}

// ScoreCountIsNil applies the IsNil predicate on the "score_count" field.
func ScoreCountIsNil() predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIsNull(FieldScoreCount))
}

// ScoreCountNotNil applies the NotNil predicate on the "score_count" field.
func ScoreCountNotNil() predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotNull(FieldScoreCount))
}

// ScoreEQ applies the EQ predicate on the "score" field.
func ScoreEQ(v decimal.Decimal) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldEQ(FieldScore, v))
}

// ScoreNEQ applies the NEQ predicate on the "score" field.
func ScoreNEQ(v decimal.Decimal) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNEQ(FieldScore, v))
}

// ScoreIn applies the In predicate on the "score" field.
func ScoreIn(vs ...decimal.Decimal) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIn(FieldScore, vs...))
}

// ScoreNotIn applies the NotIn predicate on the "score" field.
func ScoreNotIn(vs ...decimal.Decimal) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotIn(FieldScore, vs...))
}

// ScoreGT applies the GT predicate on the "score" field.
func ScoreGT(v decimal.Decimal) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGT(FieldScore, v))
}

// ScoreGTE applies the GTE predicate on the "score" field.
func ScoreGTE(v decimal.Decimal) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldGTE(FieldScore, v))
}

// ScoreLT applies the LT predicate on the "score" field.
func ScoreLT(v decimal.Decimal) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLT(FieldScore, v))
}

// ScoreLTE applies the LTE predicate on the "score" field.
func ScoreLTE(v decimal.Decimal) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldLTE(FieldScore, v))
}

// ScoreIsNil applies the IsNil predicate on the "score" field.
func ScoreIsNil() predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldIsNull(FieldScore))
}

// ScoreNotNil applies the NotNil predicate on the "score" field.
func ScoreNotNil() predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.FieldNotNull(FieldScore))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ExtraInfo) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ExtraInfo) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ExtraInfo) predicate.ExtraInfo {
	return predicate.ExtraInfo(sql.NotPredicates(p))
}
