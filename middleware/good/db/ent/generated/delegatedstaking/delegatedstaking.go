// Code generated by ent, DO NOT EDIT.

package delegatedstaking

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the delegatedstaking type in the database.
	Label = "delegated_staking"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldGoodID holds the string denoting the good_id field in the database.
	FieldGoodID = "good_id"
	// FieldContractCodeURL holds the string denoting the contract_code_url field in the database.
	FieldContractCodeURL = "contract_code_url"
	// FieldContractCodeBranch holds the string denoting the contract_code_branch field in the database.
	FieldContractCodeBranch = "contract_code_branch"
	// FieldContractState holds the string denoting the contract_state field in the database.
	FieldContractState = "contract_state"
	// Table holds the table name of the delegatedstaking in the database.
	Table = "delegated_stakings"
)

// Columns holds all SQL columns for delegatedstaking fields.
var Columns = []string{
	FieldID,
	FieldEntID,
	FieldGoodID,
	FieldContractCodeURL,
	FieldContractCodeBranch,
	FieldContractState,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultGoodID holds the default value on creation for the "good_id" field.
	DefaultGoodID func() uuid.UUID
	// DefaultContractCodeURL holds the default value on creation for the "contract_code_url" field.
	DefaultContractCodeURL string
	// DefaultContractCodeBranch holds the default value on creation for the "contract_code_branch" field.
	DefaultContractCodeBranch string
	// DefaultContractState holds the default value on creation for the "contract_state" field.
	DefaultContractState string
)

// OrderOption defines the ordering options for the DelegatedStaking queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEntID orders the results by the ent_id field.
func ByEntID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntID, opts...).ToFunc()
}

// ByGoodID orders the results by the good_id field.
func ByGoodID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGoodID, opts...).ToFunc()
}

// ByContractCodeURL orders the results by the contract_code_url field.
func ByContractCodeURL(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldContractCodeURL, opts...).ToFunc()
}

// ByContractCodeBranch orders the results by the contract_code_branch field.
func ByContractCodeBranch(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldContractCodeBranch, opts...).ToFunc()
}

// ByContractState orders the results by the contract_state field.
func ByContractState(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldContractState, opts...).ToFunc()
}
