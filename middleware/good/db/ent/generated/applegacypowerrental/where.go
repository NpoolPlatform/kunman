// Code generated by ent, DO NOT EDIT.

package applegacypowerrental

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/good/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldLTE(FieldID, id))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldEQ(FieldEntID, v))
}

// AppGoodID applies equality check predicate on the "app_good_id" field. It's identical to AppGoodIDEQ.
func AppGoodID(v uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldEQ(FieldAppGoodID, v))
}

// TechniqueFeeRatio applies equality check predicate on the "technique_fee_ratio" field. It's identical to TechniqueFeeRatioEQ.
func TechniqueFeeRatio(v decimal.Decimal) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldEQ(FieldTechniqueFeeRatio, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldLTE(FieldEntID, v))
}

// AppGoodIDEQ applies the EQ predicate on the "app_good_id" field.
func AppGoodIDEQ(v uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldEQ(FieldAppGoodID, v))
}

// AppGoodIDNEQ applies the NEQ predicate on the "app_good_id" field.
func AppGoodIDNEQ(v uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldNEQ(FieldAppGoodID, v))
}

// AppGoodIDIn applies the In predicate on the "app_good_id" field.
func AppGoodIDIn(vs ...uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldIn(FieldAppGoodID, vs...))
}

// AppGoodIDNotIn applies the NotIn predicate on the "app_good_id" field.
func AppGoodIDNotIn(vs ...uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldNotIn(FieldAppGoodID, vs...))
}

// AppGoodIDGT applies the GT predicate on the "app_good_id" field.
func AppGoodIDGT(v uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldGT(FieldAppGoodID, v))
}

// AppGoodIDGTE applies the GTE predicate on the "app_good_id" field.
func AppGoodIDGTE(v uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldGTE(FieldAppGoodID, v))
}

// AppGoodIDLT applies the LT predicate on the "app_good_id" field.
func AppGoodIDLT(v uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldLT(FieldAppGoodID, v))
}

// AppGoodIDLTE applies the LTE predicate on the "app_good_id" field.
func AppGoodIDLTE(v uuid.UUID) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldLTE(FieldAppGoodID, v))
}

// AppGoodIDIsNil applies the IsNil predicate on the "app_good_id" field.
func AppGoodIDIsNil() predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldIsNull(FieldAppGoodID))
}

// AppGoodIDNotNil applies the NotNil predicate on the "app_good_id" field.
func AppGoodIDNotNil() predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldNotNull(FieldAppGoodID))
}

// TechniqueFeeRatioEQ applies the EQ predicate on the "technique_fee_ratio" field.
func TechniqueFeeRatioEQ(v decimal.Decimal) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldEQ(FieldTechniqueFeeRatio, v))
}

// TechniqueFeeRatioNEQ applies the NEQ predicate on the "technique_fee_ratio" field.
func TechniqueFeeRatioNEQ(v decimal.Decimal) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldNEQ(FieldTechniqueFeeRatio, v))
}

// TechniqueFeeRatioIn applies the In predicate on the "technique_fee_ratio" field.
func TechniqueFeeRatioIn(vs ...decimal.Decimal) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldIn(FieldTechniqueFeeRatio, vs...))
}

// TechniqueFeeRatioNotIn applies the NotIn predicate on the "technique_fee_ratio" field.
func TechniqueFeeRatioNotIn(vs ...decimal.Decimal) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldNotIn(FieldTechniqueFeeRatio, vs...))
}

// TechniqueFeeRatioGT applies the GT predicate on the "technique_fee_ratio" field.
func TechniqueFeeRatioGT(v decimal.Decimal) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldGT(FieldTechniqueFeeRatio, v))
}

// TechniqueFeeRatioGTE applies the GTE predicate on the "technique_fee_ratio" field.
func TechniqueFeeRatioGTE(v decimal.Decimal) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldGTE(FieldTechniqueFeeRatio, v))
}

// TechniqueFeeRatioLT applies the LT predicate on the "technique_fee_ratio" field.
func TechniqueFeeRatioLT(v decimal.Decimal) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldLT(FieldTechniqueFeeRatio, v))
}

// TechniqueFeeRatioLTE applies the LTE predicate on the "technique_fee_ratio" field.
func TechniqueFeeRatioLTE(v decimal.Decimal) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldLTE(FieldTechniqueFeeRatio, v))
}

// TechniqueFeeRatioIsNil applies the IsNil predicate on the "technique_fee_ratio" field.
func TechniqueFeeRatioIsNil() predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldIsNull(FieldTechniqueFeeRatio))
}

// TechniqueFeeRatioNotNil applies the NotNil predicate on the "technique_fee_ratio" field.
func TechniqueFeeRatioNotNil() predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.FieldNotNull(FieldTechniqueFeeRatio))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AppLegacyPowerRental) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AppLegacyPowerRental) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AppLegacyPowerRental) predicate.AppLegacyPowerRental {
	return predicate.AppLegacyPowerRental(sql.NotPredicates(p))
}
