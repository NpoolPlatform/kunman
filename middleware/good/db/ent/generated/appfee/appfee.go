// Code generated by ent, DO NOT EDIT.

package appfee

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const (
	// Label holds the string label denoting the appfee type in the database.
	Label = "app_fee"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldAppGoodID holds the string denoting the app_good_id field in the database.
	FieldAppGoodID = "app_good_id"
	// FieldUnitValue holds the string denoting the unit_value field in the database.
	FieldUnitValue = "unit_value"
	// FieldCancelMode holds the string denoting the cancel_mode field in the database.
	FieldCancelMode = "cancel_mode"
	// FieldMinOrderDurationSeconds holds the string denoting the min_order_duration_seconds field in the database.
	FieldMinOrderDurationSeconds = "min_order_duration_seconds"
	// Table holds the table name of the appfee in the database.
	Table = "app_fees"
)

// Columns holds all SQL columns for appfee fields.
var Columns = []string{
	FieldID,
	FieldEntID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldAppGoodID,
	FieldUnitValue,
	FieldCancelMode,
	FieldMinOrderDurationSeconds,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultAppGoodID holds the default value on creation for the "app_good_id" field.
	DefaultAppGoodID func() uuid.UUID
	// DefaultUnitValue holds the default value on creation for the "unit_value" field.
	DefaultUnitValue decimal.Decimal
	// DefaultCancelMode holds the default value on creation for the "cancel_mode" field.
	DefaultCancelMode string
	// DefaultMinOrderDurationSeconds holds the default value on creation for the "min_order_duration_seconds" field.
	DefaultMinOrderDurationSeconds uint32
)

// OrderOption defines the ordering options for the AppFee queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEntID orders the results by the ent_id field.
func ByEntID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByAppGoodID orders the results by the app_good_id field.
func ByAppGoodID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAppGoodID, opts...).ToFunc()
}

// ByUnitValue orders the results by the unit_value field.
func ByUnitValue(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUnitValue, opts...).ToFunc()
}

// ByCancelMode orders the results by the cancel_mode field.
func ByCancelMode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCancelMode, opts...).ToFunc()
}

// ByMinOrderDurationSeconds orders the results by the min_order_duration_seconds field.
func ByMinOrderDurationSeconds(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMinOrderDurationSeconds, opts...).ToFunc()
}
