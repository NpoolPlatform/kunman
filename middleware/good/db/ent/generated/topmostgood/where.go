// Code generated by ent, DO NOT EDIT.

package topmostgood

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/good/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldLTE(FieldID, id))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldEQ(FieldEntID, v))
}

// AppGoodID applies equality check predicate on the "app_good_id" field. It's identical to AppGoodIDEQ.
func AppGoodID(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldEQ(FieldAppGoodID, v))
}

// TopMostID applies equality check predicate on the "top_most_id" field. It's identical to TopMostIDEQ.
func TopMostID(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldEQ(FieldTopMostID, v))
}

// DisplayIndex applies equality check predicate on the "display_index" field. It's identical to DisplayIndexEQ.
func DisplayIndex(v uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldEQ(FieldDisplayIndex, v))
}

// UnitPrice applies equality check predicate on the "unit_price" field. It's identical to UnitPriceEQ.
func UnitPrice(v decimal.Decimal) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldEQ(FieldUnitPrice, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldLTE(FieldEntID, v))
}

// AppGoodIDEQ applies the EQ predicate on the "app_good_id" field.
func AppGoodIDEQ(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldEQ(FieldAppGoodID, v))
}

// AppGoodIDNEQ applies the NEQ predicate on the "app_good_id" field.
func AppGoodIDNEQ(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNEQ(FieldAppGoodID, v))
}

// AppGoodIDIn applies the In predicate on the "app_good_id" field.
func AppGoodIDIn(vs ...uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldIn(FieldAppGoodID, vs...))
}

// AppGoodIDNotIn applies the NotIn predicate on the "app_good_id" field.
func AppGoodIDNotIn(vs ...uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNotIn(FieldAppGoodID, vs...))
}

// AppGoodIDGT applies the GT predicate on the "app_good_id" field.
func AppGoodIDGT(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldGT(FieldAppGoodID, v))
}

// AppGoodIDGTE applies the GTE predicate on the "app_good_id" field.
func AppGoodIDGTE(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldGTE(FieldAppGoodID, v))
}

// AppGoodIDLT applies the LT predicate on the "app_good_id" field.
func AppGoodIDLT(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldLT(FieldAppGoodID, v))
}

// AppGoodIDLTE applies the LTE predicate on the "app_good_id" field.
func AppGoodIDLTE(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldLTE(FieldAppGoodID, v))
}

// AppGoodIDIsNil applies the IsNil predicate on the "app_good_id" field.
func AppGoodIDIsNil() predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldIsNull(FieldAppGoodID))
}

// AppGoodIDNotNil applies the NotNil predicate on the "app_good_id" field.
func AppGoodIDNotNil() predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNotNull(FieldAppGoodID))
}

// TopMostIDEQ applies the EQ predicate on the "top_most_id" field.
func TopMostIDEQ(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldEQ(FieldTopMostID, v))
}

// TopMostIDNEQ applies the NEQ predicate on the "top_most_id" field.
func TopMostIDNEQ(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNEQ(FieldTopMostID, v))
}

// TopMostIDIn applies the In predicate on the "top_most_id" field.
func TopMostIDIn(vs ...uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldIn(FieldTopMostID, vs...))
}

// TopMostIDNotIn applies the NotIn predicate on the "top_most_id" field.
func TopMostIDNotIn(vs ...uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNotIn(FieldTopMostID, vs...))
}

// TopMostIDGT applies the GT predicate on the "top_most_id" field.
func TopMostIDGT(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldGT(FieldTopMostID, v))
}

// TopMostIDGTE applies the GTE predicate on the "top_most_id" field.
func TopMostIDGTE(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldGTE(FieldTopMostID, v))
}

// TopMostIDLT applies the LT predicate on the "top_most_id" field.
func TopMostIDLT(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldLT(FieldTopMostID, v))
}

// TopMostIDLTE applies the LTE predicate on the "top_most_id" field.
func TopMostIDLTE(v uuid.UUID) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldLTE(FieldTopMostID, v))
}

// TopMostIDIsNil applies the IsNil predicate on the "top_most_id" field.
func TopMostIDIsNil() predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldIsNull(FieldTopMostID))
}

// TopMostIDNotNil applies the NotNil predicate on the "top_most_id" field.
func TopMostIDNotNil() predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNotNull(FieldTopMostID))
}

// DisplayIndexEQ applies the EQ predicate on the "display_index" field.
func DisplayIndexEQ(v uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldEQ(FieldDisplayIndex, v))
}

// DisplayIndexNEQ applies the NEQ predicate on the "display_index" field.
func DisplayIndexNEQ(v uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNEQ(FieldDisplayIndex, v))
}

// DisplayIndexIn applies the In predicate on the "display_index" field.
func DisplayIndexIn(vs ...uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldIn(FieldDisplayIndex, vs...))
}

// DisplayIndexNotIn applies the NotIn predicate on the "display_index" field.
func DisplayIndexNotIn(vs ...uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNotIn(FieldDisplayIndex, vs...))
}

// DisplayIndexGT applies the GT predicate on the "display_index" field.
func DisplayIndexGT(v uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldGT(FieldDisplayIndex, v))
}

// DisplayIndexGTE applies the GTE predicate on the "display_index" field.
func DisplayIndexGTE(v uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldGTE(FieldDisplayIndex, v))
}

// DisplayIndexLT applies the LT predicate on the "display_index" field.
func DisplayIndexLT(v uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldLT(FieldDisplayIndex, v))
}

// DisplayIndexLTE applies the LTE predicate on the "display_index" field.
func DisplayIndexLTE(v uint32) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldLTE(FieldDisplayIndex, v))
}

// DisplayIndexIsNil applies the IsNil predicate on the "display_index" field.
func DisplayIndexIsNil() predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldIsNull(FieldDisplayIndex))
}

// DisplayIndexNotNil applies the NotNil predicate on the "display_index" field.
func DisplayIndexNotNil() predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNotNull(FieldDisplayIndex))
}

// UnitPriceEQ applies the EQ predicate on the "unit_price" field.
func UnitPriceEQ(v decimal.Decimal) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldEQ(FieldUnitPrice, v))
}

// UnitPriceNEQ applies the NEQ predicate on the "unit_price" field.
func UnitPriceNEQ(v decimal.Decimal) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNEQ(FieldUnitPrice, v))
}

// UnitPriceIn applies the In predicate on the "unit_price" field.
func UnitPriceIn(vs ...decimal.Decimal) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldIn(FieldUnitPrice, vs...))
}

// UnitPriceNotIn applies the NotIn predicate on the "unit_price" field.
func UnitPriceNotIn(vs ...decimal.Decimal) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNotIn(FieldUnitPrice, vs...))
}

// UnitPriceGT applies the GT predicate on the "unit_price" field.
func UnitPriceGT(v decimal.Decimal) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldGT(FieldUnitPrice, v))
}

// UnitPriceGTE applies the GTE predicate on the "unit_price" field.
func UnitPriceGTE(v decimal.Decimal) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldGTE(FieldUnitPrice, v))
}

// UnitPriceLT applies the LT predicate on the "unit_price" field.
func UnitPriceLT(v decimal.Decimal) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldLT(FieldUnitPrice, v))
}

// UnitPriceLTE applies the LTE predicate on the "unit_price" field.
func UnitPriceLTE(v decimal.Decimal) predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldLTE(FieldUnitPrice, v))
}

// UnitPriceIsNil applies the IsNil predicate on the "unit_price" field.
func UnitPriceIsNil() predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldIsNull(FieldUnitPrice))
}

// UnitPriceNotNil applies the NotNil predicate on the "unit_price" field.
func UnitPriceNotNil() predicate.TopMostGood {
	return predicate.TopMostGood(sql.FieldNotNull(FieldUnitPrice))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TopMostGood) predicate.TopMostGood {
	return predicate.TopMostGood(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TopMostGood) predicate.TopMostGood {
	return predicate.TopMostGood(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TopMostGood) predicate.TopMostGood {
	return predicate.TopMostGood(sql.NotPredicates(p))
}
