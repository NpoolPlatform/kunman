// Code generated by ent, DO NOT EDIT.

package exchangerate

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/chain/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldDeletedAt, v))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldEntID, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldAppID, v))
}

// CoinTypeID applies equality check predicate on the "coin_type_id" field. It's identical to CoinTypeIDEQ.
func CoinTypeID(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldCoinTypeID, v))
}

// MarketValue applies equality check predicate on the "market_value" field. It's identical to MarketValueEQ.
func MarketValue(v decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldMarketValue, v))
}

// SettleValue applies equality check predicate on the "settle_value" field. It's identical to SettleValueEQ.
func SettleValue(v decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldSettleValue, v))
}

// SettlePercent applies equality check predicate on the "settle_percent" field. It's identical to SettlePercentEQ.
func SettlePercent(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldSettlePercent, v))
}

// Setter applies equality check predicate on the "setter" field. It's identical to SetterEQ.
func Setter(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldSetter, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLTE(FieldDeletedAt, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLTE(FieldEntID, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLTE(FieldAppID, v))
}

// AppIDIsNil applies the IsNil predicate on the "app_id" field.
func AppIDIsNil() predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIsNull(FieldAppID))
}

// AppIDNotNil applies the NotNil predicate on the "app_id" field.
func AppIDNotNil() predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotNull(FieldAppID))
}

// CoinTypeIDEQ applies the EQ predicate on the "coin_type_id" field.
func CoinTypeIDEQ(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldCoinTypeID, v))
}

// CoinTypeIDNEQ applies the NEQ predicate on the "coin_type_id" field.
func CoinTypeIDNEQ(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNEQ(FieldCoinTypeID, v))
}

// CoinTypeIDIn applies the In predicate on the "coin_type_id" field.
func CoinTypeIDIn(vs ...uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIn(FieldCoinTypeID, vs...))
}

// CoinTypeIDNotIn applies the NotIn predicate on the "coin_type_id" field.
func CoinTypeIDNotIn(vs ...uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotIn(FieldCoinTypeID, vs...))
}

// CoinTypeIDGT applies the GT predicate on the "coin_type_id" field.
func CoinTypeIDGT(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGT(FieldCoinTypeID, v))
}

// CoinTypeIDGTE applies the GTE predicate on the "coin_type_id" field.
func CoinTypeIDGTE(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGTE(FieldCoinTypeID, v))
}

// CoinTypeIDLT applies the LT predicate on the "coin_type_id" field.
func CoinTypeIDLT(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLT(FieldCoinTypeID, v))
}

// CoinTypeIDLTE applies the LTE predicate on the "coin_type_id" field.
func CoinTypeIDLTE(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLTE(FieldCoinTypeID, v))
}

// CoinTypeIDIsNil applies the IsNil predicate on the "coin_type_id" field.
func CoinTypeIDIsNil() predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIsNull(FieldCoinTypeID))
}

// CoinTypeIDNotNil applies the NotNil predicate on the "coin_type_id" field.
func CoinTypeIDNotNil() predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotNull(FieldCoinTypeID))
}

// MarketValueEQ applies the EQ predicate on the "market_value" field.
func MarketValueEQ(v decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldMarketValue, v))
}

// MarketValueNEQ applies the NEQ predicate on the "market_value" field.
func MarketValueNEQ(v decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNEQ(FieldMarketValue, v))
}

// MarketValueIn applies the In predicate on the "market_value" field.
func MarketValueIn(vs ...decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIn(FieldMarketValue, vs...))
}

// MarketValueNotIn applies the NotIn predicate on the "market_value" field.
func MarketValueNotIn(vs ...decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotIn(FieldMarketValue, vs...))
}

// MarketValueGT applies the GT predicate on the "market_value" field.
func MarketValueGT(v decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGT(FieldMarketValue, v))
}

// MarketValueGTE applies the GTE predicate on the "market_value" field.
func MarketValueGTE(v decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGTE(FieldMarketValue, v))
}

// MarketValueLT applies the LT predicate on the "market_value" field.
func MarketValueLT(v decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLT(FieldMarketValue, v))
}

// MarketValueLTE applies the LTE predicate on the "market_value" field.
func MarketValueLTE(v decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLTE(FieldMarketValue, v))
}

// MarketValueIsNil applies the IsNil predicate on the "market_value" field.
func MarketValueIsNil() predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIsNull(FieldMarketValue))
}

// MarketValueNotNil applies the NotNil predicate on the "market_value" field.
func MarketValueNotNil() predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotNull(FieldMarketValue))
}

// SettleValueEQ applies the EQ predicate on the "settle_value" field.
func SettleValueEQ(v decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldSettleValue, v))
}

// SettleValueNEQ applies the NEQ predicate on the "settle_value" field.
func SettleValueNEQ(v decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNEQ(FieldSettleValue, v))
}

// SettleValueIn applies the In predicate on the "settle_value" field.
func SettleValueIn(vs ...decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIn(FieldSettleValue, vs...))
}

// SettleValueNotIn applies the NotIn predicate on the "settle_value" field.
func SettleValueNotIn(vs ...decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotIn(FieldSettleValue, vs...))
}

// SettleValueGT applies the GT predicate on the "settle_value" field.
func SettleValueGT(v decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGT(FieldSettleValue, v))
}

// SettleValueGTE applies the GTE predicate on the "settle_value" field.
func SettleValueGTE(v decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGTE(FieldSettleValue, v))
}

// SettleValueLT applies the LT predicate on the "settle_value" field.
func SettleValueLT(v decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLT(FieldSettleValue, v))
}

// SettleValueLTE applies the LTE predicate on the "settle_value" field.
func SettleValueLTE(v decimal.Decimal) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLTE(FieldSettleValue, v))
}

// SettleValueIsNil applies the IsNil predicate on the "settle_value" field.
func SettleValueIsNil() predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIsNull(FieldSettleValue))
}

// SettleValueNotNil applies the NotNil predicate on the "settle_value" field.
func SettleValueNotNil() predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotNull(FieldSettleValue))
}

// SettlePercentEQ applies the EQ predicate on the "settle_percent" field.
func SettlePercentEQ(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldSettlePercent, v))
}

// SettlePercentNEQ applies the NEQ predicate on the "settle_percent" field.
func SettlePercentNEQ(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNEQ(FieldSettlePercent, v))
}

// SettlePercentIn applies the In predicate on the "settle_percent" field.
func SettlePercentIn(vs ...uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIn(FieldSettlePercent, vs...))
}

// SettlePercentNotIn applies the NotIn predicate on the "settle_percent" field.
func SettlePercentNotIn(vs ...uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotIn(FieldSettlePercent, vs...))
}

// SettlePercentGT applies the GT predicate on the "settle_percent" field.
func SettlePercentGT(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGT(FieldSettlePercent, v))
}

// SettlePercentGTE applies the GTE predicate on the "settle_percent" field.
func SettlePercentGTE(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGTE(FieldSettlePercent, v))
}

// SettlePercentLT applies the LT predicate on the "settle_percent" field.
func SettlePercentLT(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLT(FieldSettlePercent, v))
}

// SettlePercentLTE applies the LTE predicate on the "settle_percent" field.
func SettlePercentLTE(v uint32) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLTE(FieldSettlePercent, v))
}

// SettlePercentIsNil applies the IsNil predicate on the "settle_percent" field.
func SettlePercentIsNil() predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIsNull(FieldSettlePercent))
}

// SettlePercentNotNil applies the NotNil predicate on the "settle_percent" field.
func SettlePercentNotNil() predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotNull(FieldSettlePercent))
}

// SettleTipsIsNil applies the IsNil predicate on the "settle_tips" field.
func SettleTipsIsNil() predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIsNull(FieldSettleTips))
}

// SettleTipsNotNil applies the NotNil predicate on the "settle_tips" field.
func SettleTipsNotNil() predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotNull(FieldSettleTips))
}

// SetterEQ applies the EQ predicate on the "setter" field.
func SetterEQ(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldEQ(FieldSetter, v))
}

// SetterNEQ applies the NEQ predicate on the "setter" field.
func SetterNEQ(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNEQ(FieldSetter, v))
}

// SetterIn applies the In predicate on the "setter" field.
func SetterIn(vs ...uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIn(FieldSetter, vs...))
}

// SetterNotIn applies the NotIn predicate on the "setter" field.
func SetterNotIn(vs ...uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotIn(FieldSetter, vs...))
}

// SetterGT applies the GT predicate on the "setter" field.
func SetterGT(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGT(FieldSetter, v))
}

// SetterGTE applies the GTE predicate on the "setter" field.
func SetterGTE(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldGTE(FieldSetter, v))
}

// SetterLT applies the LT predicate on the "setter" field.
func SetterLT(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLT(FieldSetter, v))
}

// SetterLTE applies the LTE predicate on the "setter" field.
func SetterLTE(v uuid.UUID) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldLTE(FieldSetter, v))
}

// SetterIsNil applies the IsNil predicate on the "setter" field.
func SetterIsNil() predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldIsNull(FieldSetter))
}

// SetterNotNil applies the NotNil predicate on the "setter" field.
func SetterNotNil() predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.FieldNotNull(FieldSetter))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ExchangeRate) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ExchangeRate) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ExchangeRate) predicate.ExchangeRate {
	return predicate.ExchangeRate(sql.NotPredicates(p))
}
