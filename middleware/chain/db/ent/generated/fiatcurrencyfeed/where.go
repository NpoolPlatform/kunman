// Code generated by ent, DO NOT EDIT.

package fiatcurrencyfeed

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/chain/db/ent/generated/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldDeletedAt, v))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldEntID, v))
}

// FiatID applies equality check predicate on the "fiat_id" field. It's identical to FiatIDEQ.
func FiatID(v uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldFiatID, v))
}

// FeedType applies equality check predicate on the "feed_type" field. It's identical to FeedTypeEQ.
func FeedType(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldFeedType, v))
}

// FeedFiatName applies equality check predicate on the "feed_fiat_name" field. It's identical to FeedFiatNameEQ.
func FeedFiatName(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldFeedFiatName, v))
}

// Disabled applies equality check predicate on the "disabled" field. It's identical to DisabledEQ.
func Disabled(v bool) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldDisabled, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLTE(FieldDeletedAt, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLTE(FieldEntID, v))
}

// FiatIDEQ applies the EQ predicate on the "fiat_id" field.
func FiatIDEQ(v uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldFiatID, v))
}

// FiatIDNEQ applies the NEQ predicate on the "fiat_id" field.
func FiatIDNEQ(v uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNEQ(FieldFiatID, v))
}

// FiatIDIn applies the In predicate on the "fiat_id" field.
func FiatIDIn(vs ...uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldIn(FieldFiatID, vs...))
}

// FiatIDNotIn applies the NotIn predicate on the "fiat_id" field.
func FiatIDNotIn(vs ...uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNotIn(FieldFiatID, vs...))
}

// FiatIDGT applies the GT predicate on the "fiat_id" field.
func FiatIDGT(v uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGT(FieldFiatID, v))
}

// FiatIDGTE applies the GTE predicate on the "fiat_id" field.
func FiatIDGTE(v uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGTE(FieldFiatID, v))
}

// FiatIDLT applies the LT predicate on the "fiat_id" field.
func FiatIDLT(v uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLT(FieldFiatID, v))
}

// FiatIDLTE applies the LTE predicate on the "fiat_id" field.
func FiatIDLTE(v uuid.UUID) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLTE(FieldFiatID, v))
}

// FiatIDIsNil applies the IsNil predicate on the "fiat_id" field.
func FiatIDIsNil() predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldIsNull(FieldFiatID))
}

// FiatIDNotNil applies the NotNil predicate on the "fiat_id" field.
func FiatIDNotNil() predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNotNull(FieldFiatID))
}

// FeedTypeEQ applies the EQ predicate on the "feed_type" field.
func FeedTypeEQ(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldFeedType, v))
}

// FeedTypeNEQ applies the NEQ predicate on the "feed_type" field.
func FeedTypeNEQ(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNEQ(FieldFeedType, v))
}

// FeedTypeIn applies the In predicate on the "feed_type" field.
func FeedTypeIn(vs ...string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldIn(FieldFeedType, vs...))
}

// FeedTypeNotIn applies the NotIn predicate on the "feed_type" field.
func FeedTypeNotIn(vs ...string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNotIn(FieldFeedType, vs...))
}

// FeedTypeGT applies the GT predicate on the "feed_type" field.
func FeedTypeGT(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGT(FieldFeedType, v))
}

// FeedTypeGTE applies the GTE predicate on the "feed_type" field.
func FeedTypeGTE(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGTE(FieldFeedType, v))
}

// FeedTypeLT applies the LT predicate on the "feed_type" field.
func FeedTypeLT(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLT(FieldFeedType, v))
}

// FeedTypeLTE applies the LTE predicate on the "feed_type" field.
func FeedTypeLTE(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLTE(FieldFeedType, v))
}

// FeedTypeContains applies the Contains predicate on the "feed_type" field.
func FeedTypeContains(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldContains(FieldFeedType, v))
}

// FeedTypeHasPrefix applies the HasPrefix predicate on the "feed_type" field.
func FeedTypeHasPrefix(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldHasPrefix(FieldFeedType, v))
}

// FeedTypeHasSuffix applies the HasSuffix predicate on the "feed_type" field.
func FeedTypeHasSuffix(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldHasSuffix(FieldFeedType, v))
}

// FeedTypeIsNil applies the IsNil predicate on the "feed_type" field.
func FeedTypeIsNil() predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldIsNull(FieldFeedType))
}

// FeedTypeNotNil applies the NotNil predicate on the "feed_type" field.
func FeedTypeNotNil() predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNotNull(FieldFeedType))
}

// FeedTypeEqualFold applies the EqualFold predicate on the "feed_type" field.
func FeedTypeEqualFold(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEqualFold(FieldFeedType, v))
}

// FeedTypeContainsFold applies the ContainsFold predicate on the "feed_type" field.
func FeedTypeContainsFold(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldContainsFold(FieldFeedType, v))
}

// FeedFiatNameEQ applies the EQ predicate on the "feed_fiat_name" field.
func FeedFiatNameEQ(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldFeedFiatName, v))
}

// FeedFiatNameNEQ applies the NEQ predicate on the "feed_fiat_name" field.
func FeedFiatNameNEQ(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNEQ(FieldFeedFiatName, v))
}

// FeedFiatNameIn applies the In predicate on the "feed_fiat_name" field.
func FeedFiatNameIn(vs ...string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldIn(FieldFeedFiatName, vs...))
}

// FeedFiatNameNotIn applies the NotIn predicate on the "feed_fiat_name" field.
func FeedFiatNameNotIn(vs ...string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNotIn(FieldFeedFiatName, vs...))
}

// FeedFiatNameGT applies the GT predicate on the "feed_fiat_name" field.
func FeedFiatNameGT(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGT(FieldFeedFiatName, v))
}

// FeedFiatNameGTE applies the GTE predicate on the "feed_fiat_name" field.
func FeedFiatNameGTE(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldGTE(FieldFeedFiatName, v))
}

// FeedFiatNameLT applies the LT predicate on the "feed_fiat_name" field.
func FeedFiatNameLT(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLT(FieldFeedFiatName, v))
}

// FeedFiatNameLTE applies the LTE predicate on the "feed_fiat_name" field.
func FeedFiatNameLTE(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldLTE(FieldFeedFiatName, v))
}

// FeedFiatNameContains applies the Contains predicate on the "feed_fiat_name" field.
func FeedFiatNameContains(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldContains(FieldFeedFiatName, v))
}

// FeedFiatNameHasPrefix applies the HasPrefix predicate on the "feed_fiat_name" field.
func FeedFiatNameHasPrefix(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldHasPrefix(FieldFeedFiatName, v))
}

// FeedFiatNameHasSuffix applies the HasSuffix predicate on the "feed_fiat_name" field.
func FeedFiatNameHasSuffix(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldHasSuffix(FieldFeedFiatName, v))
}

// FeedFiatNameIsNil applies the IsNil predicate on the "feed_fiat_name" field.
func FeedFiatNameIsNil() predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldIsNull(FieldFeedFiatName))
}

// FeedFiatNameNotNil applies the NotNil predicate on the "feed_fiat_name" field.
func FeedFiatNameNotNil() predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNotNull(FieldFeedFiatName))
}

// FeedFiatNameEqualFold applies the EqualFold predicate on the "feed_fiat_name" field.
func FeedFiatNameEqualFold(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEqualFold(FieldFeedFiatName, v))
}

// FeedFiatNameContainsFold applies the ContainsFold predicate on the "feed_fiat_name" field.
func FeedFiatNameContainsFold(v string) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldContainsFold(FieldFeedFiatName, v))
}

// DisabledEQ applies the EQ predicate on the "disabled" field.
func DisabledEQ(v bool) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldEQ(FieldDisabled, v))
}

// DisabledNEQ applies the NEQ predicate on the "disabled" field.
func DisabledNEQ(v bool) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNEQ(FieldDisabled, v))
}

// DisabledIsNil applies the IsNil predicate on the "disabled" field.
func DisabledIsNil() predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldIsNull(FieldDisabled))
}

// DisabledNotNil applies the NotNil predicate on the "disabled" field.
func DisabledNotNil() predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.FieldNotNull(FieldDisabled))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.FiatCurrencyFeed) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.FiatCurrencyFeed) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.FiatCurrencyFeed) predicate.FiatCurrencyFeed {
	return predicate.FiatCurrencyFeed(sql.NotPredicates(p))
}
