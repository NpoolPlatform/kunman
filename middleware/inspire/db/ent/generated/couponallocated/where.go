// Code generated by ent, DO NOT EDIT.

package couponallocated

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/inspire/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldDeletedAt, v))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldEntID, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldAppID, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldUserID, v))
}

// CouponID applies equality check predicate on the "coupon_id" field. It's identical to CouponIDEQ.
func CouponID(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldCouponID, v))
}

// Denomination applies equality check predicate on the "denomination" field. It's identical to DenominationEQ.
func Denomination(v decimal.Decimal) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldDenomination, v))
}

// Used applies equality check predicate on the "used" field. It's identical to UsedEQ.
func Used(v bool) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldUsed, v))
}

// UsedAt applies equality check predicate on the "used_at" field. It's identical to UsedAtEQ.
func UsedAt(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldUsedAt, v))
}

// UsedByOrderID applies equality check predicate on the "used_by_order_id" field. It's identical to UsedByOrderIDEQ.
func UsedByOrderID(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldUsedByOrderID, v))
}

// StartAt applies equality check predicate on the "start_at" field. It's identical to StartAtEQ.
func StartAt(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldStartAt, v))
}

// CouponScope applies equality check predicate on the "coupon_scope" field. It's identical to CouponScopeEQ.
func CouponScope(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldCouponScope, v))
}

// Cashable applies equality check predicate on the "cashable" field. It's identical to CashableEQ.
func Cashable(v bool) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldCashable, v))
}

// Extra applies equality check predicate on the "extra" field. It's identical to ExtraEQ.
func Extra(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldExtra, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLTE(FieldDeletedAt, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLTE(FieldEntID, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLTE(FieldAppID, v))
}

// AppIDIsNil applies the IsNil predicate on the "app_id" field.
func AppIDIsNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIsNull(FieldAppID))
}

// AppIDNotNil applies the NotNil predicate on the "app_id" field.
func AppIDNotNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotNull(FieldAppID))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLTE(FieldUserID, v))
}

// UserIDIsNil applies the IsNil predicate on the "user_id" field.
func UserIDIsNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIsNull(FieldUserID))
}

// UserIDNotNil applies the NotNil predicate on the "user_id" field.
func UserIDNotNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotNull(FieldUserID))
}

// CouponIDEQ applies the EQ predicate on the "coupon_id" field.
func CouponIDEQ(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldCouponID, v))
}

// CouponIDNEQ applies the NEQ predicate on the "coupon_id" field.
func CouponIDNEQ(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldCouponID, v))
}

// CouponIDIn applies the In predicate on the "coupon_id" field.
func CouponIDIn(vs ...uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIn(FieldCouponID, vs...))
}

// CouponIDNotIn applies the NotIn predicate on the "coupon_id" field.
func CouponIDNotIn(vs ...uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotIn(FieldCouponID, vs...))
}

// CouponIDGT applies the GT predicate on the "coupon_id" field.
func CouponIDGT(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGT(FieldCouponID, v))
}

// CouponIDGTE applies the GTE predicate on the "coupon_id" field.
func CouponIDGTE(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGTE(FieldCouponID, v))
}

// CouponIDLT applies the LT predicate on the "coupon_id" field.
func CouponIDLT(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLT(FieldCouponID, v))
}

// CouponIDLTE applies the LTE predicate on the "coupon_id" field.
func CouponIDLTE(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLTE(FieldCouponID, v))
}

// CouponIDIsNil applies the IsNil predicate on the "coupon_id" field.
func CouponIDIsNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIsNull(FieldCouponID))
}

// CouponIDNotNil applies the NotNil predicate on the "coupon_id" field.
func CouponIDNotNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotNull(FieldCouponID))
}

// DenominationEQ applies the EQ predicate on the "denomination" field.
func DenominationEQ(v decimal.Decimal) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldDenomination, v))
}

// DenominationNEQ applies the NEQ predicate on the "denomination" field.
func DenominationNEQ(v decimal.Decimal) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldDenomination, v))
}

// DenominationIn applies the In predicate on the "denomination" field.
func DenominationIn(vs ...decimal.Decimal) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIn(FieldDenomination, vs...))
}

// DenominationNotIn applies the NotIn predicate on the "denomination" field.
func DenominationNotIn(vs ...decimal.Decimal) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotIn(FieldDenomination, vs...))
}

// DenominationGT applies the GT predicate on the "denomination" field.
func DenominationGT(v decimal.Decimal) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGT(FieldDenomination, v))
}

// DenominationGTE applies the GTE predicate on the "denomination" field.
func DenominationGTE(v decimal.Decimal) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGTE(FieldDenomination, v))
}

// DenominationLT applies the LT predicate on the "denomination" field.
func DenominationLT(v decimal.Decimal) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLT(FieldDenomination, v))
}

// DenominationLTE applies the LTE predicate on the "denomination" field.
func DenominationLTE(v decimal.Decimal) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLTE(FieldDenomination, v))
}

// DenominationIsNil applies the IsNil predicate on the "denomination" field.
func DenominationIsNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIsNull(FieldDenomination))
}

// DenominationNotNil applies the NotNil predicate on the "denomination" field.
func DenominationNotNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotNull(FieldDenomination))
}

// UsedEQ applies the EQ predicate on the "used" field.
func UsedEQ(v bool) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldUsed, v))
}

// UsedNEQ applies the NEQ predicate on the "used" field.
func UsedNEQ(v bool) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldUsed, v))
}

// UsedIsNil applies the IsNil predicate on the "used" field.
func UsedIsNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIsNull(FieldUsed))
}

// UsedNotNil applies the NotNil predicate on the "used" field.
func UsedNotNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotNull(FieldUsed))
}

// UsedAtEQ applies the EQ predicate on the "used_at" field.
func UsedAtEQ(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldUsedAt, v))
}

// UsedAtNEQ applies the NEQ predicate on the "used_at" field.
func UsedAtNEQ(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldUsedAt, v))
}

// UsedAtIn applies the In predicate on the "used_at" field.
func UsedAtIn(vs ...uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIn(FieldUsedAt, vs...))
}

// UsedAtNotIn applies the NotIn predicate on the "used_at" field.
func UsedAtNotIn(vs ...uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotIn(FieldUsedAt, vs...))
}

// UsedAtGT applies the GT predicate on the "used_at" field.
func UsedAtGT(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGT(FieldUsedAt, v))
}

// UsedAtGTE applies the GTE predicate on the "used_at" field.
func UsedAtGTE(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGTE(FieldUsedAt, v))
}

// UsedAtLT applies the LT predicate on the "used_at" field.
func UsedAtLT(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLT(FieldUsedAt, v))
}

// UsedAtLTE applies the LTE predicate on the "used_at" field.
func UsedAtLTE(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLTE(FieldUsedAt, v))
}

// UsedAtIsNil applies the IsNil predicate on the "used_at" field.
func UsedAtIsNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIsNull(FieldUsedAt))
}

// UsedAtNotNil applies the NotNil predicate on the "used_at" field.
func UsedAtNotNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotNull(FieldUsedAt))
}

// UsedByOrderIDEQ applies the EQ predicate on the "used_by_order_id" field.
func UsedByOrderIDEQ(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldUsedByOrderID, v))
}

// UsedByOrderIDNEQ applies the NEQ predicate on the "used_by_order_id" field.
func UsedByOrderIDNEQ(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldUsedByOrderID, v))
}

// UsedByOrderIDIn applies the In predicate on the "used_by_order_id" field.
func UsedByOrderIDIn(vs ...uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIn(FieldUsedByOrderID, vs...))
}

// UsedByOrderIDNotIn applies the NotIn predicate on the "used_by_order_id" field.
func UsedByOrderIDNotIn(vs ...uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotIn(FieldUsedByOrderID, vs...))
}

// UsedByOrderIDGT applies the GT predicate on the "used_by_order_id" field.
func UsedByOrderIDGT(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGT(FieldUsedByOrderID, v))
}

// UsedByOrderIDGTE applies the GTE predicate on the "used_by_order_id" field.
func UsedByOrderIDGTE(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGTE(FieldUsedByOrderID, v))
}

// UsedByOrderIDLT applies the LT predicate on the "used_by_order_id" field.
func UsedByOrderIDLT(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLT(FieldUsedByOrderID, v))
}

// UsedByOrderIDLTE applies the LTE predicate on the "used_by_order_id" field.
func UsedByOrderIDLTE(v uuid.UUID) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLTE(FieldUsedByOrderID, v))
}

// UsedByOrderIDIsNil applies the IsNil predicate on the "used_by_order_id" field.
func UsedByOrderIDIsNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIsNull(FieldUsedByOrderID))
}

// UsedByOrderIDNotNil applies the NotNil predicate on the "used_by_order_id" field.
func UsedByOrderIDNotNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotNull(FieldUsedByOrderID))
}

// StartAtEQ applies the EQ predicate on the "start_at" field.
func StartAtEQ(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldStartAt, v))
}

// StartAtNEQ applies the NEQ predicate on the "start_at" field.
func StartAtNEQ(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldStartAt, v))
}

// StartAtIn applies the In predicate on the "start_at" field.
func StartAtIn(vs ...uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIn(FieldStartAt, vs...))
}

// StartAtNotIn applies the NotIn predicate on the "start_at" field.
func StartAtNotIn(vs ...uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotIn(FieldStartAt, vs...))
}

// StartAtGT applies the GT predicate on the "start_at" field.
func StartAtGT(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGT(FieldStartAt, v))
}

// StartAtGTE applies the GTE predicate on the "start_at" field.
func StartAtGTE(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGTE(FieldStartAt, v))
}

// StartAtLT applies the LT predicate on the "start_at" field.
func StartAtLT(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLT(FieldStartAt, v))
}

// StartAtLTE applies the LTE predicate on the "start_at" field.
func StartAtLTE(v uint32) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLTE(FieldStartAt, v))
}

// StartAtIsNil applies the IsNil predicate on the "start_at" field.
func StartAtIsNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIsNull(FieldStartAt))
}

// StartAtNotNil applies the NotNil predicate on the "start_at" field.
func StartAtNotNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotNull(FieldStartAt))
}

// CouponScopeEQ applies the EQ predicate on the "coupon_scope" field.
func CouponScopeEQ(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldCouponScope, v))
}

// CouponScopeNEQ applies the NEQ predicate on the "coupon_scope" field.
func CouponScopeNEQ(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldCouponScope, v))
}

// CouponScopeIn applies the In predicate on the "coupon_scope" field.
func CouponScopeIn(vs ...string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIn(FieldCouponScope, vs...))
}

// CouponScopeNotIn applies the NotIn predicate on the "coupon_scope" field.
func CouponScopeNotIn(vs ...string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotIn(FieldCouponScope, vs...))
}

// CouponScopeGT applies the GT predicate on the "coupon_scope" field.
func CouponScopeGT(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGT(FieldCouponScope, v))
}

// CouponScopeGTE applies the GTE predicate on the "coupon_scope" field.
func CouponScopeGTE(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGTE(FieldCouponScope, v))
}

// CouponScopeLT applies the LT predicate on the "coupon_scope" field.
func CouponScopeLT(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLT(FieldCouponScope, v))
}

// CouponScopeLTE applies the LTE predicate on the "coupon_scope" field.
func CouponScopeLTE(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLTE(FieldCouponScope, v))
}

// CouponScopeContains applies the Contains predicate on the "coupon_scope" field.
func CouponScopeContains(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldContains(FieldCouponScope, v))
}

// CouponScopeHasPrefix applies the HasPrefix predicate on the "coupon_scope" field.
func CouponScopeHasPrefix(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldHasPrefix(FieldCouponScope, v))
}

// CouponScopeHasSuffix applies the HasSuffix predicate on the "coupon_scope" field.
func CouponScopeHasSuffix(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldHasSuffix(FieldCouponScope, v))
}

// CouponScopeIsNil applies the IsNil predicate on the "coupon_scope" field.
func CouponScopeIsNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIsNull(FieldCouponScope))
}

// CouponScopeNotNil applies the NotNil predicate on the "coupon_scope" field.
func CouponScopeNotNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotNull(FieldCouponScope))
}

// CouponScopeEqualFold applies the EqualFold predicate on the "coupon_scope" field.
func CouponScopeEqualFold(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEqualFold(FieldCouponScope, v))
}

// CouponScopeContainsFold applies the ContainsFold predicate on the "coupon_scope" field.
func CouponScopeContainsFold(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldContainsFold(FieldCouponScope, v))
}

// CashableEQ applies the EQ predicate on the "cashable" field.
func CashableEQ(v bool) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldCashable, v))
}

// CashableNEQ applies the NEQ predicate on the "cashable" field.
func CashableNEQ(v bool) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldCashable, v))
}

// CashableIsNil applies the IsNil predicate on the "cashable" field.
func CashableIsNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIsNull(FieldCashable))
}

// CashableNotNil applies the NotNil predicate on the "cashable" field.
func CashableNotNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotNull(FieldCashable))
}

// ExtraEQ applies the EQ predicate on the "extra" field.
func ExtraEQ(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEQ(FieldExtra, v))
}

// ExtraNEQ applies the NEQ predicate on the "extra" field.
func ExtraNEQ(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNEQ(FieldExtra, v))
}

// ExtraIn applies the In predicate on the "extra" field.
func ExtraIn(vs ...string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIn(FieldExtra, vs...))
}

// ExtraNotIn applies the NotIn predicate on the "extra" field.
func ExtraNotIn(vs ...string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotIn(FieldExtra, vs...))
}

// ExtraGT applies the GT predicate on the "extra" field.
func ExtraGT(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGT(FieldExtra, v))
}

// ExtraGTE applies the GTE predicate on the "extra" field.
func ExtraGTE(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldGTE(FieldExtra, v))
}

// ExtraLT applies the LT predicate on the "extra" field.
func ExtraLT(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLT(FieldExtra, v))
}

// ExtraLTE applies the LTE predicate on the "extra" field.
func ExtraLTE(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldLTE(FieldExtra, v))
}

// ExtraContains applies the Contains predicate on the "extra" field.
func ExtraContains(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldContains(FieldExtra, v))
}

// ExtraHasPrefix applies the HasPrefix predicate on the "extra" field.
func ExtraHasPrefix(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldHasPrefix(FieldExtra, v))
}

// ExtraHasSuffix applies the HasSuffix predicate on the "extra" field.
func ExtraHasSuffix(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldHasSuffix(FieldExtra, v))
}

// ExtraIsNil applies the IsNil predicate on the "extra" field.
func ExtraIsNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldIsNull(FieldExtra))
}

// ExtraNotNil applies the NotNil predicate on the "extra" field.
func ExtraNotNil() predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldNotNull(FieldExtra))
}

// ExtraEqualFold applies the EqualFold predicate on the "extra" field.
func ExtraEqualFold(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldEqualFold(FieldExtra, v))
}

// ExtraContainsFold applies the ContainsFold predicate on the "extra" field.
func ExtraContainsFold(v string) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.FieldContainsFold(FieldExtra, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CouponAllocated) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CouponAllocated) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CouponAllocated) predicate.CouponAllocated {
	return predicate.CouponAllocated(sql.NotPredicates(p))
}
