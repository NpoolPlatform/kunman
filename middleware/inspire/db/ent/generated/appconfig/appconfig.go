// Code generated by ent, DO NOT EDIT.

package appconfig

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the appconfig type in the database.
	Label = "app_config"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldSettleMode holds the string denoting the settle_mode field in the database.
	FieldSettleMode = "settle_mode"
	// FieldSettleAmountType holds the string denoting the settle_amount_type field in the database.
	FieldSettleAmountType = "settle_amount_type"
	// FieldSettleInterval holds the string denoting the settle_interval field in the database.
	FieldSettleInterval = "settle_interval"
	// FieldCommissionType holds the string denoting the commission_type field in the database.
	FieldCommissionType = "commission_type"
	// FieldSettleBenefit holds the string denoting the settle_benefit field in the database.
	FieldSettleBenefit = "settle_benefit"
	// FieldMaxLevel holds the string denoting the max_level field in the database.
	FieldMaxLevel = "max_level"
	// FieldStartAt holds the string denoting the start_at field in the database.
	FieldStartAt = "start_at"
	// FieldEndAt holds the string denoting the end_at field in the database.
	FieldEndAt = "end_at"
	// Table holds the table name of the appconfig in the database.
	Table = "app_configs"
)

// Columns holds all SQL columns for appconfig fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldEntID,
	FieldAppID,
	FieldSettleMode,
	FieldSettleAmountType,
	FieldSettleInterval,
	FieldCommissionType,
	FieldSettleBenefit,
	FieldMaxLevel,
	FieldStartAt,
	FieldEndAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultAppID holds the default value on creation for the "app_id" field.
	DefaultAppID func() uuid.UUID
	// DefaultSettleMode holds the default value on creation for the "settle_mode" field.
	DefaultSettleMode string
	// DefaultSettleAmountType holds the default value on creation for the "settle_amount_type" field.
	DefaultSettleAmountType string
	// DefaultSettleInterval holds the default value on creation for the "settle_interval" field.
	DefaultSettleInterval string
	// DefaultCommissionType holds the default value on creation for the "commission_type" field.
	DefaultCommissionType string
	// DefaultSettleBenefit holds the default value on creation for the "settle_benefit" field.
	DefaultSettleBenefit bool
	// DefaultMaxLevel holds the default value on creation for the "max_level" field.
	DefaultMaxLevel uint32
	// DefaultStartAt holds the default value on creation for the "start_at" field.
	DefaultStartAt uint32
	// DefaultEndAt holds the default value on creation for the "end_at" field.
	DefaultEndAt uint32
)

// OrderOption defines the ordering options for the AppConfig queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByEntID orders the results by the ent_id field.
func ByEntID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntID, opts...).ToFunc()
}

// ByAppID orders the results by the app_id field.
func ByAppID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAppID, opts...).ToFunc()
}

// BySettleMode orders the results by the settle_mode field.
func BySettleMode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSettleMode, opts...).ToFunc()
}

// BySettleAmountType orders the results by the settle_amount_type field.
func BySettleAmountType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSettleAmountType, opts...).ToFunc()
}

// BySettleInterval orders the results by the settle_interval field.
func BySettleInterval(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSettleInterval, opts...).ToFunc()
}

// ByCommissionType orders the results by the commission_type field.
func ByCommissionType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCommissionType, opts...).ToFunc()
}

// BySettleBenefit orders the results by the settle_benefit field.
func BySettleBenefit(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSettleBenefit, opts...).ToFunc()
}

// ByMaxLevel orders the results by the max_level field.
func ByMaxLevel(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMaxLevel, opts...).ToFunc()
}

// ByStartAt orders the results by the start_at field.
func ByStartAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStartAt, opts...).ToFunc()
}

// ByEndAt orders the results by the end_at field.
func ByEndAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEndAt, opts...).ToFunc()
}
