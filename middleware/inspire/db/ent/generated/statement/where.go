// Code generated by ent, DO NOT EDIT.

package statement

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/inspire/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldDeletedAt, v))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldEntID, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldAppID, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldUserID, v))
}

// DirectContributorID applies equality check predicate on the "direct_contributor_id" field. It's identical to DirectContributorIDEQ.
func DirectContributorID(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldDirectContributorID, v))
}

// GoodID applies equality check predicate on the "good_id" field. It's identical to GoodIDEQ.
func GoodID(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldGoodID, v))
}

// AppGoodID applies equality check predicate on the "app_good_id" field. It's identical to AppGoodIDEQ.
func AppGoodID(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldAppGoodID, v))
}

// OrderID applies equality check predicate on the "order_id" field. It's identical to OrderIDEQ.
func OrderID(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldOrderID, v))
}

// SelfOrder applies equality check predicate on the "self_order" field. It's identical to SelfOrderEQ.
func SelfOrder(v bool) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldSelfOrder, v))
}

// PaymentID applies equality check predicate on the "payment_id" field. It's identical to PaymentIDEQ.
func PaymentID(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldPaymentID, v))
}

// CoinTypeID applies equality check predicate on the "coin_type_id" field. It's identical to CoinTypeIDEQ.
func CoinTypeID(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldCoinTypeID, v))
}

// PaymentCoinTypeID applies equality check predicate on the "payment_coin_type_id" field. It's identical to PaymentCoinTypeIDEQ.
func PaymentCoinTypeID(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldPaymentCoinTypeID, v))
}

// PaymentCoinUsdCurrency applies equality check predicate on the "payment_coin_usd_currency" field. It's identical to PaymentCoinUsdCurrencyEQ.
func PaymentCoinUsdCurrency(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldPaymentCoinUsdCurrency, v))
}

// Units applies equality check predicate on the "units" field. It's identical to UnitsEQ.
func Units(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldUnits, v))
}

// UnitsV1 applies equality check predicate on the "units_v1" field. It's identical to UnitsV1EQ.
func UnitsV1(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldUnitsV1, v))
}

// Amount applies equality check predicate on the "amount" field. It's identical to AmountEQ.
func Amount(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldAmount, v))
}

// UsdAmount applies equality check predicate on the "usd_amount" field. It's identical to UsdAmountEQ.
func UsdAmount(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldUsdAmount, v))
}

// Commission applies equality check predicate on the "commission" field. It's identical to CommissionEQ.
func Commission(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldCommission, v))
}

// AppConfigID applies equality check predicate on the "app_config_id" field. It's identical to AppConfigIDEQ.
func AppConfigID(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldAppConfigID, v))
}

// CommissionConfigID applies equality check predicate on the "commission_config_id" field. It's identical to CommissionConfigIDEQ.
func CommissionConfigID(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldCommissionConfigID, v))
}

// CommissionConfigType applies equality check predicate on the "commission_config_type" field. It's identical to CommissionConfigTypeEQ.
func CommissionConfigType(v string) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldCommissionConfigType, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldDeletedAt, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldEntID, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldAppID, v))
}

// AppIDIsNil applies the IsNil predicate on the "app_id" field.
func AppIDIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldAppID))
}

// AppIDNotNil applies the NotNil predicate on the "app_id" field.
func AppIDNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldAppID))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldUserID, v))
}

// UserIDIsNil applies the IsNil predicate on the "user_id" field.
func UserIDIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldUserID))
}

// UserIDNotNil applies the NotNil predicate on the "user_id" field.
func UserIDNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldUserID))
}

// DirectContributorIDEQ applies the EQ predicate on the "direct_contributor_id" field.
func DirectContributorIDEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldDirectContributorID, v))
}

// DirectContributorIDNEQ applies the NEQ predicate on the "direct_contributor_id" field.
func DirectContributorIDNEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldDirectContributorID, v))
}

// DirectContributorIDIn applies the In predicate on the "direct_contributor_id" field.
func DirectContributorIDIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldDirectContributorID, vs...))
}

// DirectContributorIDNotIn applies the NotIn predicate on the "direct_contributor_id" field.
func DirectContributorIDNotIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldDirectContributorID, vs...))
}

// DirectContributorIDGT applies the GT predicate on the "direct_contributor_id" field.
func DirectContributorIDGT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldDirectContributorID, v))
}

// DirectContributorIDGTE applies the GTE predicate on the "direct_contributor_id" field.
func DirectContributorIDGTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldDirectContributorID, v))
}

// DirectContributorIDLT applies the LT predicate on the "direct_contributor_id" field.
func DirectContributorIDLT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldDirectContributorID, v))
}

// DirectContributorIDLTE applies the LTE predicate on the "direct_contributor_id" field.
func DirectContributorIDLTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldDirectContributorID, v))
}

// DirectContributorIDIsNil applies the IsNil predicate on the "direct_contributor_id" field.
func DirectContributorIDIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldDirectContributorID))
}

// DirectContributorIDNotNil applies the NotNil predicate on the "direct_contributor_id" field.
func DirectContributorIDNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldDirectContributorID))
}

// GoodIDEQ applies the EQ predicate on the "good_id" field.
func GoodIDEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldGoodID, v))
}

// GoodIDNEQ applies the NEQ predicate on the "good_id" field.
func GoodIDNEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldGoodID, v))
}

// GoodIDIn applies the In predicate on the "good_id" field.
func GoodIDIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldGoodID, vs...))
}

// GoodIDNotIn applies the NotIn predicate on the "good_id" field.
func GoodIDNotIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldGoodID, vs...))
}

// GoodIDGT applies the GT predicate on the "good_id" field.
func GoodIDGT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldGoodID, v))
}

// GoodIDGTE applies the GTE predicate on the "good_id" field.
func GoodIDGTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldGoodID, v))
}

// GoodIDLT applies the LT predicate on the "good_id" field.
func GoodIDLT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldGoodID, v))
}

// GoodIDLTE applies the LTE predicate on the "good_id" field.
func GoodIDLTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldGoodID, v))
}

// GoodIDIsNil applies the IsNil predicate on the "good_id" field.
func GoodIDIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldGoodID))
}

// GoodIDNotNil applies the NotNil predicate on the "good_id" field.
func GoodIDNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldGoodID))
}

// AppGoodIDEQ applies the EQ predicate on the "app_good_id" field.
func AppGoodIDEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldAppGoodID, v))
}

// AppGoodIDNEQ applies the NEQ predicate on the "app_good_id" field.
func AppGoodIDNEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldAppGoodID, v))
}

// AppGoodIDIn applies the In predicate on the "app_good_id" field.
func AppGoodIDIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldAppGoodID, vs...))
}

// AppGoodIDNotIn applies the NotIn predicate on the "app_good_id" field.
func AppGoodIDNotIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldAppGoodID, vs...))
}

// AppGoodIDGT applies the GT predicate on the "app_good_id" field.
func AppGoodIDGT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldAppGoodID, v))
}

// AppGoodIDGTE applies the GTE predicate on the "app_good_id" field.
func AppGoodIDGTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldAppGoodID, v))
}

// AppGoodIDLT applies the LT predicate on the "app_good_id" field.
func AppGoodIDLT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldAppGoodID, v))
}

// AppGoodIDLTE applies the LTE predicate on the "app_good_id" field.
func AppGoodIDLTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldAppGoodID, v))
}

// AppGoodIDIsNil applies the IsNil predicate on the "app_good_id" field.
func AppGoodIDIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldAppGoodID))
}

// AppGoodIDNotNil applies the NotNil predicate on the "app_good_id" field.
func AppGoodIDNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldAppGoodID))
}

// OrderIDEQ applies the EQ predicate on the "order_id" field.
func OrderIDEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldOrderID, v))
}

// OrderIDNEQ applies the NEQ predicate on the "order_id" field.
func OrderIDNEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldOrderID, v))
}

// OrderIDIn applies the In predicate on the "order_id" field.
func OrderIDIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldOrderID, vs...))
}

// OrderIDNotIn applies the NotIn predicate on the "order_id" field.
func OrderIDNotIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldOrderID, vs...))
}

// OrderIDGT applies the GT predicate on the "order_id" field.
func OrderIDGT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldOrderID, v))
}

// OrderIDGTE applies the GTE predicate on the "order_id" field.
func OrderIDGTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldOrderID, v))
}

// OrderIDLT applies the LT predicate on the "order_id" field.
func OrderIDLT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldOrderID, v))
}

// OrderIDLTE applies the LTE predicate on the "order_id" field.
func OrderIDLTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldOrderID, v))
}

// OrderIDIsNil applies the IsNil predicate on the "order_id" field.
func OrderIDIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldOrderID))
}

// OrderIDNotNil applies the NotNil predicate on the "order_id" field.
func OrderIDNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldOrderID))
}

// SelfOrderEQ applies the EQ predicate on the "self_order" field.
func SelfOrderEQ(v bool) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldSelfOrder, v))
}

// SelfOrderNEQ applies the NEQ predicate on the "self_order" field.
func SelfOrderNEQ(v bool) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldSelfOrder, v))
}

// SelfOrderIsNil applies the IsNil predicate on the "self_order" field.
func SelfOrderIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldSelfOrder))
}

// SelfOrderNotNil applies the NotNil predicate on the "self_order" field.
func SelfOrderNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldSelfOrder))
}

// PaymentIDEQ applies the EQ predicate on the "payment_id" field.
func PaymentIDEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldPaymentID, v))
}

// PaymentIDNEQ applies the NEQ predicate on the "payment_id" field.
func PaymentIDNEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldPaymentID, v))
}

// PaymentIDIn applies the In predicate on the "payment_id" field.
func PaymentIDIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldPaymentID, vs...))
}

// PaymentIDNotIn applies the NotIn predicate on the "payment_id" field.
func PaymentIDNotIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldPaymentID, vs...))
}

// PaymentIDGT applies the GT predicate on the "payment_id" field.
func PaymentIDGT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldPaymentID, v))
}

// PaymentIDGTE applies the GTE predicate on the "payment_id" field.
func PaymentIDGTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldPaymentID, v))
}

// PaymentIDLT applies the LT predicate on the "payment_id" field.
func PaymentIDLT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldPaymentID, v))
}

// PaymentIDLTE applies the LTE predicate on the "payment_id" field.
func PaymentIDLTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldPaymentID, v))
}

// PaymentIDIsNil applies the IsNil predicate on the "payment_id" field.
func PaymentIDIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldPaymentID))
}

// PaymentIDNotNil applies the NotNil predicate on the "payment_id" field.
func PaymentIDNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldPaymentID))
}

// CoinTypeIDEQ applies the EQ predicate on the "coin_type_id" field.
func CoinTypeIDEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldCoinTypeID, v))
}

// CoinTypeIDNEQ applies the NEQ predicate on the "coin_type_id" field.
func CoinTypeIDNEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldCoinTypeID, v))
}

// CoinTypeIDIn applies the In predicate on the "coin_type_id" field.
func CoinTypeIDIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldCoinTypeID, vs...))
}

// CoinTypeIDNotIn applies the NotIn predicate on the "coin_type_id" field.
func CoinTypeIDNotIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldCoinTypeID, vs...))
}

// CoinTypeIDGT applies the GT predicate on the "coin_type_id" field.
func CoinTypeIDGT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldCoinTypeID, v))
}

// CoinTypeIDGTE applies the GTE predicate on the "coin_type_id" field.
func CoinTypeIDGTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldCoinTypeID, v))
}

// CoinTypeIDLT applies the LT predicate on the "coin_type_id" field.
func CoinTypeIDLT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldCoinTypeID, v))
}

// CoinTypeIDLTE applies the LTE predicate on the "coin_type_id" field.
func CoinTypeIDLTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldCoinTypeID, v))
}

// CoinTypeIDIsNil applies the IsNil predicate on the "coin_type_id" field.
func CoinTypeIDIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldCoinTypeID))
}

// CoinTypeIDNotNil applies the NotNil predicate on the "coin_type_id" field.
func CoinTypeIDNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldCoinTypeID))
}

// PaymentCoinTypeIDEQ applies the EQ predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldPaymentCoinTypeID, v))
}

// PaymentCoinTypeIDNEQ applies the NEQ predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDNEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldPaymentCoinTypeID, v))
}

// PaymentCoinTypeIDIn applies the In predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldPaymentCoinTypeID, vs...))
}

// PaymentCoinTypeIDNotIn applies the NotIn predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDNotIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldPaymentCoinTypeID, vs...))
}

// PaymentCoinTypeIDGT applies the GT predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDGT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldPaymentCoinTypeID, v))
}

// PaymentCoinTypeIDGTE applies the GTE predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDGTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldPaymentCoinTypeID, v))
}

// PaymentCoinTypeIDLT applies the LT predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDLT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldPaymentCoinTypeID, v))
}

// PaymentCoinTypeIDLTE applies the LTE predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDLTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldPaymentCoinTypeID, v))
}

// PaymentCoinTypeIDIsNil applies the IsNil predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldPaymentCoinTypeID))
}

// PaymentCoinTypeIDNotNil applies the NotNil predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldPaymentCoinTypeID))
}

// PaymentCoinUsdCurrencyEQ applies the EQ predicate on the "payment_coin_usd_currency" field.
func PaymentCoinUsdCurrencyEQ(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldPaymentCoinUsdCurrency, v))
}

// PaymentCoinUsdCurrencyNEQ applies the NEQ predicate on the "payment_coin_usd_currency" field.
func PaymentCoinUsdCurrencyNEQ(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldPaymentCoinUsdCurrency, v))
}

// PaymentCoinUsdCurrencyIn applies the In predicate on the "payment_coin_usd_currency" field.
func PaymentCoinUsdCurrencyIn(vs ...decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldPaymentCoinUsdCurrency, vs...))
}

// PaymentCoinUsdCurrencyNotIn applies the NotIn predicate on the "payment_coin_usd_currency" field.
func PaymentCoinUsdCurrencyNotIn(vs ...decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldPaymentCoinUsdCurrency, vs...))
}

// PaymentCoinUsdCurrencyGT applies the GT predicate on the "payment_coin_usd_currency" field.
func PaymentCoinUsdCurrencyGT(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldPaymentCoinUsdCurrency, v))
}

// PaymentCoinUsdCurrencyGTE applies the GTE predicate on the "payment_coin_usd_currency" field.
func PaymentCoinUsdCurrencyGTE(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldPaymentCoinUsdCurrency, v))
}

// PaymentCoinUsdCurrencyLT applies the LT predicate on the "payment_coin_usd_currency" field.
func PaymentCoinUsdCurrencyLT(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldPaymentCoinUsdCurrency, v))
}

// PaymentCoinUsdCurrencyLTE applies the LTE predicate on the "payment_coin_usd_currency" field.
func PaymentCoinUsdCurrencyLTE(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldPaymentCoinUsdCurrency, v))
}

// PaymentCoinUsdCurrencyIsNil applies the IsNil predicate on the "payment_coin_usd_currency" field.
func PaymentCoinUsdCurrencyIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldPaymentCoinUsdCurrency))
}

// PaymentCoinUsdCurrencyNotNil applies the NotNil predicate on the "payment_coin_usd_currency" field.
func PaymentCoinUsdCurrencyNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldPaymentCoinUsdCurrency))
}

// UnitsEQ applies the EQ predicate on the "units" field.
func UnitsEQ(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldUnits, v))
}

// UnitsNEQ applies the NEQ predicate on the "units" field.
func UnitsNEQ(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldUnits, v))
}

// UnitsIn applies the In predicate on the "units" field.
func UnitsIn(vs ...uint32) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldUnits, vs...))
}

// UnitsNotIn applies the NotIn predicate on the "units" field.
func UnitsNotIn(vs ...uint32) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldUnits, vs...))
}

// UnitsGT applies the GT predicate on the "units" field.
func UnitsGT(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldUnits, v))
}

// UnitsGTE applies the GTE predicate on the "units" field.
func UnitsGTE(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldUnits, v))
}

// UnitsLT applies the LT predicate on the "units" field.
func UnitsLT(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldUnits, v))
}

// UnitsLTE applies the LTE predicate on the "units" field.
func UnitsLTE(v uint32) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldUnits, v))
}

// UnitsIsNil applies the IsNil predicate on the "units" field.
func UnitsIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldUnits))
}

// UnitsNotNil applies the NotNil predicate on the "units" field.
func UnitsNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldUnits))
}

// UnitsV1EQ applies the EQ predicate on the "units_v1" field.
func UnitsV1EQ(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldUnitsV1, v))
}

// UnitsV1NEQ applies the NEQ predicate on the "units_v1" field.
func UnitsV1NEQ(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldUnitsV1, v))
}

// UnitsV1In applies the In predicate on the "units_v1" field.
func UnitsV1In(vs ...decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldUnitsV1, vs...))
}

// UnitsV1NotIn applies the NotIn predicate on the "units_v1" field.
func UnitsV1NotIn(vs ...decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldUnitsV1, vs...))
}

// UnitsV1GT applies the GT predicate on the "units_v1" field.
func UnitsV1GT(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldUnitsV1, v))
}

// UnitsV1GTE applies the GTE predicate on the "units_v1" field.
func UnitsV1GTE(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldUnitsV1, v))
}

// UnitsV1LT applies the LT predicate on the "units_v1" field.
func UnitsV1LT(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldUnitsV1, v))
}

// UnitsV1LTE applies the LTE predicate on the "units_v1" field.
func UnitsV1LTE(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldUnitsV1, v))
}

// UnitsV1IsNil applies the IsNil predicate on the "units_v1" field.
func UnitsV1IsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldUnitsV1))
}

// UnitsV1NotNil applies the NotNil predicate on the "units_v1" field.
func UnitsV1NotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldUnitsV1))
}

// AmountEQ applies the EQ predicate on the "amount" field.
func AmountEQ(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldAmount, v))
}

// AmountNEQ applies the NEQ predicate on the "amount" field.
func AmountNEQ(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldAmount, v))
}

// AmountIn applies the In predicate on the "amount" field.
func AmountIn(vs ...decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldAmount, vs...))
}

// AmountNotIn applies the NotIn predicate on the "amount" field.
func AmountNotIn(vs ...decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldAmount, vs...))
}

// AmountGT applies the GT predicate on the "amount" field.
func AmountGT(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldAmount, v))
}

// AmountGTE applies the GTE predicate on the "amount" field.
func AmountGTE(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldAmount, v))
}

// AmountLT applies the LT predicate on the "amount" field.
func AmountLT(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldAmount, v))
}

// AmountLTE applies the LTE predicate on the "amount" field.
func AmountLTE(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldAmount, v))
}

// AmountIsNil applies the IsNil predicate on the "amount" field.
func AmountIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldAmount))
}

// AmountNotNil applies the NotNil predicate on the "amount" field.
func AmountNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldAmount))
}

// UsdAmountEQ applies the EQ predicate on the "usd_amount" field.
func UsdAmountEQ(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldUsdAmount, v))
}

// UsdAmountNEQ applies the NEQ predicate on the "usd_amount" field.
func UsdAmountNEQ(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldUsdAmount, v))
}

// UsdAmountIn applies the In predicate on the "usd_amount" field.
func UsdAmountIn(vs ...decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldUsdAmount, vs...))
}

// UsdAmountNotIn applies the NotIn predicate on the "usd_amount" field.
func UsdAmountNotIn(vs ...decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldUsdAmount, vs...))
}

// UsdAmountGT applies the GT predicate on the "usd_amount" field.
func UsdAmountGT(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldUsdAmount, v))
}

// UsdAmountGTE applies the GTE predicate on the "usd_amount" field.
func UsdAmountGTE(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldUsdAmount, v))
}

// UsdAmountLT applies the LT predicate on the "usd_amount" field.
func UsdAmountLT(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldUsdAmount, v))
}

// UsdAmountLTE applies the LTE predicate on the "usd_amount" field.
func UsdAmountLTE(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldUsdAmount, v))
}

// UsdAmountIsNil applies the IsNil predicate on the "usd_amount" field.
func UsdAmountIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldUsdAmount))
}

// UsdAmountNotNil applies the NotNil predicate on the "usd_amount" field.
func UsdAmountNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldUsdAmount))
}

// CommissionEQ applies the EQ predicate on the "commission" field.
func CommissionEQ(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldCommission, v))
}

// CommissionNEQ applies the NEQ predicate on the "commission" field.
func CommissionNEQ(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldCommission, v))
}

// CommissionIn applies the In predicate on the "commission" field.
func CommissionIn(vs ...decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldCommission, vs...))
}

// CommissionNotIn applies the NotIn predicate on the "commission" field.
func CommissionNotIn(vs ...decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldCommission, vs...))
}

// CommissionGT applies the GT predicate on the "commission" field.
func CommissionGT(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldCommission, v))
}

// CommissionGTE applies the GTE predicate on the "commission" field.
func CommissionGTE(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldCommission, v))
}

// CommissionLT applies the LT predicate on the "commission" field.
func CommissionLT(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldCommission, v))
}

// CommissionLTE applies the LTE predicate on the "commission" field.
func CommissionLTE(v decimal.Decimal) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldCommission, v))
}

// CommissionIsNil applies the IsNil predicate on the "commission" field.
func CommissionIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldCommission))
}

// CommissionNotNil applies the NotNil predicate on the "commission" field.
func CommissionNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldCommission))
}

// AppConfigIDEQ applies the EQ predicate on the "app_config_id" field.
func AppConfigIDEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldAppConfigID, v))
}

// AppConfigIDNEQ applies the NEQ predicate on the "app_config_id" field.
func AppConfigIDNEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldAppConfigID, v))
}

// AppConfigIDIn applies the In predicate on the "app_config_id" field.
func AppConfigIDIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldAppConfigID, vs...))
}

// AppConfigIDNotIn applies the NotIn predicate on the "app_config_id" field.
func AppConfigIDNotIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldAppConfigID, vs...))
}

// AppConfigIDGT applies the GT predicate on the "app_config_id" field.
func AppConfigIDGT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldAppConfigID, v))
}

// AppConfigIDGTE applies the GTE predicate on the "app_config_id" field.
func AppConfigIDGTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldAppConfigID, v))
}

// AppConfigIDLT applies the LT predicate on the "app_config_id" field.
func AppConfigIDLT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldAppConfigID, v))
}

// AppConfigIDLTE applies the LTE predicate on the "app_config_id" field.
func AppConfigIDLTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldAppConfigID, v))
}

// AppConfigIDIsNil applies the IsNil predicate on the "app_config_id" field.
func AppConfigIDIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldAppConfigID))
}

// AppConfigIDNotNil applies the NotNil predicate on the "app_config_id" field.
func AppConfigIDNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldAppConfigID))
}

// CommissionConfigIDEQ applies the EQ predicate on the "commission_config_id" field.
func CommissionConfigIDEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldCommissionConfigID, v))
}

// CommissionConfigIDNEQ applies the NEQ predicate on the "commission_config_id" field.
func CommissionConfigIDNEQ(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldCommissionConfigID, v))
}

// CommissionConfigIDIn applies the In predicate on the "commission_config_id" field.
func CommissionConfigIDIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldCommissionConfigID, vs...))
}

// CommissionConfigIDNotIn applies the NotIn predicate on the "commission_config_id" field.
func CommissionConfigIDNotIn(vs ...uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldCommissionConfigID, vs...))
}

// CommissionConfigIDGT applies the GT predicate on the "commission_config_id" field.
func CommissionConfigIDGT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldCommissionConfigID, v))
}

// CommissionConfigIDGTE applies the GTE predicate on the "commission_config_id" field.
func CommissionConfigIDGTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldCommissionConfigID, v))
}

// CommissionConfigIDLT applies the LT predicate on the "commission_config_id" field.
func CommissionConfigIDLT(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldCommissionConfigID, v))
}

// CommissionConfigIDLTE applies the LTE predicate on the "commission_config_id" field.
func CommissionConfigIDLTE(v uuid.UUID) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldCommissionConfigID, v))
}

// CommissionConfigIDIsNil applies the IsNil predicate on the "commission_config_id" field.
func CommissionConfigIDIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldCommissionConfigID))
}

// CommissionConfigIDNotNil applies the NotNil predicate on the "commission_config_id" field.
func CommissionConfigIDNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldCommissionConfigID))
}

// CommissionConfigTypeEQ applies the EQ predicate on the "commission_config_type" field.
func CommissionConfigTypeEQ(v string) predicate.Statement {
	return predicate.Statement(sql.FieldEQ(FieldCommissionConfigType, v))
}

// CommissionConfigTypeNEQ applies the NEQ predicate on the "commission_config_type" field.
func CommissionConfigTypeNEQ(v string) predicate.Statement {
	return predicate.Statement(sql.FieldNEQ(FieldCommissionConfigType, v))
}

// CommissionConfigTypeIn applies the In predicate on the "commission_config_type" field.
func CommissionConfigTypeIn(vs ...string) predicate.Statement {
	return predicate.Statement(sql.FieldIn(FieldCommissionConfigType, vs...))
}

// CommissionConfigTypeNotIn applies the NotIn predicate on the "commission_config_type" field.
func CommissionConfigTypeNotIn(vs ...string) predicate.Statement {
	return predicate.Statement(sql.FieldNotIn(FieldCommissionConfigType, vs...))
}

// CommissionConfigTypeGT applies the GT predicate on the "commission_config_type" field.
func CommissionConfigTypeGT(v string) predicate.Statement {
	return predicate.Statement(sql.FieldGT(FieldCommissionConfigType, v))
}

// CommissionConfigTypeGTE applies the GTE predicate on the "commission_config_type" field.
func CommissionConfigTypeGTE(v string) predicate.Statement {
	return predicate.Statement(sql.FieldGTE(FieldCommissionConfigType, v))
}

// CommissionConfigTypeLT applies the LT predicate on the "commission_config_type" field.
func CommissionConfigTypeLT(v string) predicate.Statement {
	return predicate.Statement(sql.FieldLT(FieldCommissionConfigType, v))
}

// CommissionConfigTypeLTE applies the LTE predicate on the "commission_config_type" field.
func CommissionConfigTypeLTE(v string) predicate.Statement {
	return predicate.Statement(sql.FieldLTE(FieldCommissionConfigType, v))
}

// CommissionConfigTypeContains applies the Contains predicate on the "commission_config_type" field.
func CommissionConfigTypeContains(v string) predicate.Statement {
	return predicate.Statement(sql.FieldContains(FieldCommissionConfigType, v))
}

// CommissionConfigTypeHasPrefix applies the HasPrefix predicate on the "commission_config_type" field.
func CommissionConfigTypeHasPrefix(v string) predicate.Statement {
	return predicate.Statement(sql.FieldHasPrefix(FieldCommissionConfigType, v))
}

// CommissionConfigTypeHasSuffix applies the HasSuffix predicate on the "commission_config_type" field.
func CommissionConfigTypeHasSuffix(v string) predicate.Statement {
	return predicate.Statement(sql.FieldHasSuffix(FieldCommissionConfigType, v))
}

// CommissionConfigTypeIsNil applies the IsNil predicate on the "commission_config_type" field.
func CommissionConfigTypeIsNil() predicate.Statement {
	return predicate.Statement(sql.FieldIsNull(FieldCommissionConfigType))
}

// CommissionConfigTypeNotNil applies the NotNil predicate on the "commission_config_type" field.
func CommissionConfigTypeNotNil() predicate.Statement {
	return predicate.Statement(sql.FieldNotNull(FieldCommissionConfigType))
}

// CommissionConfigTypeEqualFold applies the EqualFold predicate on the "commission_config_type" field.
func CommissionConfigTypeEqualFold(v string) predicate.Statement {
	return predicate.Statement(sql.FieldEqualFold(FieldCommissionConfigType, v))
}

// CommissionConfigTypeContainsFold applies the ContainsFold predicate on the "commission_config_type" field.
func CommissionConfigTypeContainsFold(v string) predicate.Statement {
	return predicate.Statement(sql.FieldContainsFold(FieldCommissionConfigType, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Statement) predicate.Statement {
	return predicate.Statement(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Statement) predicate.Statement {
	return predicate.Statement(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Statement) predicate.Statement {
	return predicate.Statement(sql.NotPredicates(p))
}
