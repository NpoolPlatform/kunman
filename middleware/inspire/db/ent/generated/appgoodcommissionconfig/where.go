// Code generated by ent, DO NOT EDIT.

package appgoodcommissionconfig

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/inspire/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldDeletedAt, v))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldEntID, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldAppID, v))
}

// GoodID applies equality check predicate on the "good_id" field. It's identical to GoodIDEQ.
func GoodID(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldGoodID, v))
}

// AppGoodID applies equality check predicate on the "app_good_id" field. It's identical to AppGoodIDEQ.
func AppGoodID(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldAppGoodID, v))
}

// Level applies equality check predicate on the "level" field. It's identical to LevelEQ.
func Level(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldLevel, v))
}

// ThresholdAmount applies equality check predicate on the "threshold_amount" field. It's identical to ThresholdAmountEQ.
func ThresholdAmount(v decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldThresholdAmount, v))
}

// AmountOrPercent applies equality check predicate on the "amount_or_percent" field. It's identical to AmountOrPercentEQ.
func AmountOrPercent(v decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldAmountOrPercent, v))
}

// StartAt applies equality check predicate on the "start_at" field. It's identical to StartAtEQ.
func StartAt(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldStartAt, v))
}

// EndAt applies equality check predicate on the "end_at" field. It's identical to EndAtEQ.
func EndAt(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldEndAt, v))
}

// Invites applies equality check predicate on the "invites" field. It's identical to InvitesEQ.
func Invites(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldInvites, v))
}

// SettleType applies equality check predicate on the "settle_type" field. It's identical to SettleTypeEQ.
func SettleType(v string) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldSettleType, v))
}

// Disabled applies equality check predicate on the "disabled" field. It's identical to DisabledEQ.
func Disabled(v bool) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldDisabled, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldDeletedAt, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldEntID, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldAppID, v))
}

// AppIDIsNil applies the IsNil predicate on the "app_id" field.
func AppIDIsNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIsNull(FieldAppID))
}

// AppIDNotNil applies the NotNil predicate on the "app_id" field.
func AppIDNotNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotNull(FieldAppID))
}

// GoodIDEQ applies the EQ predicate on the "good_id" field.
func GoodIDEQ(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldGoodID, v))
}

// GoodIDNEQ applies the NEQ predicate on the "good_id" field.
func GoodIDNEQ(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldGoodID, v))
}

// GoodIDIn applies the In predicate on the "good_id" field.
func GoodIDIn(vs ...uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldGoodID, vs...))
}

// GoodIDNotIn applies the NotIn predicate on the "good_id" field.
func GoodIDNotIn(vs ...uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldGoodID, vs...))
}

// GoodIDGT applies the GT predicate on the "good_id" field.
func GoodIDGT(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldGoodID, v))
}

// GoodIDGTE applies the GTE predicate on the "good_id" field.
func GoodIDGTE(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldGoodID, v))
}

// GoodIDLT applies the LT predicate on the "good_id" field.
func GoodIDLT(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldGoodID, v))
}

// GoodIDLTE applies the LTE predicate on the "good_id" field.
func GoodIDLTE(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldGoodID, v))
}

// GoodIDIsNil applies the IsNil predicate on the "good_id" field.
func GoodIDIsNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIsNull(FieldGoodID))
}

// GoodIDNotNil applies the NotNil predicate on the "good_id" field.
func GoodIDNotNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotNull(FieldGoodID))
}

// AppGoodIDEQ applies the EQ predicate on the "app_good_id" field.
func AppGoodIDEQ(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldAppGoodID, v))
}

// AppGoodIDNEQ applies the NEQ predicate on the "app_good_id" field.
func AppGoodIDNEQ(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldAppGoodID, v))
}

// AppGoodIDIn applies the In predicate on the "app_good_id" field.
func AppGoodIDIn(vs ...uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldAppGoodID, vs...))
}

// AppGoodIDNotIn applies the NotIn predicate on the "app_good_id" field.
func AppGoodIDNotIn(vs ...uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldAppGoodID, vs...))
}

// AppGoodIDGT applies the GT predicate on the "app_good_id" field.
func AppGoodIDGT(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldAppGoodID, v))
}

// AppGoodIDGTE applies the GTE predicate on the "app_good_id" field.
func AppGoodIDGTE(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldAppGoodID, v))
}

// AppGoodIDLT applies the LT predicate on the "app_good_id" field.
func AppGoodIDLT(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldAppGoodID, v))
}

// AppGoodIDLTE applies the LTE predicate on the "app_good_id" field.
func AppGoodIDLTE(v uuid.UUID) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldAppGoodID, v))
}

// AppGoodIDIsNil applies the IsNil predicate on the "app_good_id" field.
func AppGoodIDIsNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIsNull(FieldAppGoodID))
}

// AppGoodIDNotNil applies the NotNil predicate on the "app_good_id" field.
func AppGoodIDNotNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotNull(FieldAppGoodID))
}

// LevelEQ applies the EQ predicate on the "level" field.
func LevelEQ(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldLevel, v))
}

// LevelNEQ applies the NEQ predicate on the "level" field.
func LevelNEQ(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldLevel, v))
}

// LevelIn applies the In predicate on the "level" field.
func LevelIn(vs ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldLevel, vs...))
}

// LevelNotIn applies the NotIn predicate on the "level" field.
func LevelNotIn(vs ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldLevel, vs...))
}

// LevelGT applies the GT predicate on the "level" field.
func LevelGT(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldLevel, v))
}

// LevelGTE applies the GTE predicate on the "level" field.
func LevelGTE(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldLevel, v))
}

// LevelLT applies the LT predicate on the "level" field.
func LevelLT(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldLevel, v))
}

// LevelLTE applies the LTE predicate on the "level" field.
func LevelLTE(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldLevel, v))
}

// LevelIsNil applies the IsNil predicate on the "level" field.
func LevelIsNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIsNull(FieldLevel))
}

// LevelNotNil applies the NotNil predicate on the "level" field.
func LevelNotNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotNull(FieldLevel))
}

// ThresholdAmountEQ applies the EQ predicate on the "threshold_amount" field.
func ThresholdAmountEQ(v decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldThresholdAmount, v))
}

// ThresholdAmountNEQ applies the NEQ predicate on the "threshold_amount" field.
func ThresholdAmountNEQ(v decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldThresholdAmount, v))
}

// ThresholdAmountIn applies the In predicate on the "threshold_amount" field.
func ThresholdAmountIn(vs ...decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldThresholdAmount, vs...))
}

// ThresholdAmountNotIn applies the NotIn predicate on the "threshold_amount" field.
func ThresholdAmountNotIn(vs ...decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldThresholdAmount, vs...))
}

// ThresholdAmountGT applies the GT predicate on the "threshold_amount" field.
func ThresholdAmountGT(v decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldThresholdAmount, v))
}

// ThresholdAmountGTE applies the GTE predicate on the "threshold_amount" field.
func ThresholdAmountGTE(v decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldThresholdAmount, v))
}

// ThresholdAmountLT applies the LT predicate on the "threshold_amount" field.
func ThresholdAmountLT(v decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldThresholdAmount, v))
}

// ThresholdAmountLTE applies the LTE predicate on the "threshold_amount" field.
func ThresholdAmountLTE(v decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldThresholdAmount, v))
}

// ThresholdAmountIsNil applies the IsNil predicate on the "threshold_amount" field.
func ThresholdAmountIsNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIsNull(FieldThresholdAmount))
}

// ThresholdAmountNotNil applies the NotNil predicate on the "threshold_amount" field.
func ThresholdAmountNotNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotNull(FieldThresholdAmount))
}

// AmountOrPercentEQ applies the EQ predicate on the "amount_or_percent" field.
func AmountOrPercentEQ(v decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldAmountOrPercent, v))
}

// AmountOrPercentNEQ applies the NEQ predicate on the "amount_or_percent" field.
func AmountOrPercentNEQ(v decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldAmountOrPercent, v))
}

// AmountOrPercentIn applies the In predicate on the "amount_or_percent" field.
func AmountOrPercentIn(vs ...decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldAmountOrPercent, vs...))
}

// AmountOrPercentNotIn applies the NotIn predicate on the "amount_or_percent" field.
func AmountOrPercentNotIn(vs ...decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldAmountOrPercent, vs...))
}

// AmountOrPercentGT applies the GT predicate on the "amount_or_percent" field.
func AmountOrPercentGT(v decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldAmountOrPercent, v))
}

// AmountOrPercentGTE applies the GTE predicate on the "amount_or_percent" field.
func AmountOrPercentGTE(v decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldAmountOrPercent, v))
}

// AmountOrPercentLT applies the LT predicate on the "amount_or_percent" field.
func AmountOrPercentLT(v decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldAmountOrPercent, v))
}

// AmountOrPercentLTE applies the LTE predicate on the "amount_or_percent" field.
func AmountOrPercentLTE(v decimal.Decimal) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldAmountOrPercent, v))
}

// AmountOrPercentIsNil applies the IsNil predicate on the "amount_or_percent" field.
func AmountOrPercentIsNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIsNull(FieldAmountOrPercent))
}

// AmountOrPercentNotNil applies the NotNil predicate on the "amount_or_percent" field.
func AmountOrPercentNotNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotNull(FieldAmountOrPercent))
}

// StartAtEQ applies the EQ predicate on the "start_at" field.
func StartAtEQ(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldStartAt, v))
}

// StartAtNEQ applies the NEQ predicate on the "start_at" field.
func StartAtNEQ(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldStartAt, v))
}

// StartAtIn applies the In predicate on the "start_at" field.
func StartAtIn(vs ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldStartAt, vs...))
}

// StartAtNotIn applies the NotIn predicate on the "start_at" field.
func StartAtNotIn(vs ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldStartAt, vs...))
}

// StartAtGT applies the GT predicate on the "start_at" field.
func StartAtGT(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldStartAt, v))
}

// StartAtGTE applies the GTE predicate on the "start_at" field.
func StartAtGTE(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldStartAt, v))
}

// StartAtLT applies the LT predicate on the "start_at" field.
func StartAtLT(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldStartAt, v))
}

// StartAtLTE applies the LTE predicate on the "start_at" field.
func StartAtLTE(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldStartAt, v))
}

// StartAtIsNil applies the IsNil predicate on the "start_at" field.
func StartAtIsNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIsNull(FieldStartAt))
}

// StartAtNotNil applies the NotNil predicate on the "start_at" field.
func StartAtNotNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotNull(FieldStartAt))
}

// EndAtEQ applies the EQ predicate on the "end_at" field.
func EndAtEQ(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldEndAt, v))
}

// EndAtNEQ applies the NEQ predicate on the "end_at" field.
func EndAtNEQ(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldEndAt, v))
}

// EndAtIn applies the In predicate on the "end_at" field.
func EndAtIn(vs ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldEndAt, vs...))
}

// EndAtNotIn applies the NotIn predicate on the "end_at" field.
func EndAtNotIn(vs ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldEndAt, vs...))
}

// EndAtGT applies the GT predicate on the "end_at" field.
func EndAtGT(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldEndAt, v))
}

// EndAtGTE applies the GTE predicate on the "end_at" field.
func EndAtGTE(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldEndAt, v))
}

// EndAtLT applies the LT predicate on the "end_at" field.
func EndAtLT(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldEndAt, v))
}

// EndAtLTE applies the LTE predicate on the "end_at" field.
func EndAtLTE(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldEndAt, v))
}

// EndAtIsNil applies the IsNil predicate on the "end_at" field.
func EndAtIsNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIsNull(FieldEndAt))
}

// EndAtNotNil applies the NotNil predicate on the "end_at" field.
func EndAtNotNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotNull(FieldEndAt))
}

// InvitesEQ applies the EQ predicate on the "invites" field.
func InvitesEQ(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldInvites, v))
}

// InvitesNEQ applies the NEQ predicate on the "invites" field.
func InvitesNEQ(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldInvites, v))
}

// InvitesIn applies the In predicate on the "invites" field.
func InvitesIn(vs ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldInvites, vs...))
}

// InvitesNotIn applies the NotIn predicate on the "invites" field.
func InvitesNotIn(vs ...uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldInvites, vs...))
}

// InvitesGT applies the GT predicate on the "invites" field.
func InvitesGT(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldInvites, v))
}

// InvitesGTE applies the GTE predicate on the "invites" field.
func InvitesGTE(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldInvites, v))
}

// InvitesLT applies the LT predicate on the "invites" field.
func InvitesLT(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldInvites, v))
}

// InvitesLTE applies the LTE predicate on the "invites" field.
func InvitesLTE(v uint32) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldInvites, v))
}

// InvitesIsNil applies the IsNil predicate on the "invites" field.
func InvitesIsNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIsNull(FieldInvites))
}

// InvitesNotNil applies the NotNil predicate on the "invites" field.
func InvitesNotNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotNull(FieldInvites))
}

// SettleTypeEQ applies the EQ predicate on the "settle_type" field.
func SettleTypeEQ(v string) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldSettleType, v))
}

// SettleTypeNEQ applies the NEQ predicate on the "settle_type" field.
func SettleTypeNEQ(v string) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldSettleType, v))
}

// SettleTypeIn applies the In predicate on the "settle_type" field.
func SettleTypeIn(vs ...string) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIn(FieldSettleType, vs...))
}

// SettleTypeNotIn applies the NotIn predicate on the "settle_type" field.
func SettleTypeNotIn(vs ...string) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotIn(FieldSettleType, vs...))
}

// SettleTypeGT applies the GT predicate on the "settle_type" field.
func SettleTypeGT(v string) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGT(FieldSettleType, v))
}

// SettleTypeGTE applies the GTE predicate on the "settle_type" field.
func SettleTypeGTE(v string) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldGTE(FieldSettleType, v))
}

// SettleTypeLT applies the LT predicate on the "settle_type" field.
func SettleTypeLT(v string) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLT(FieldSettleType, v))
}

// SettleTypeLTE applies the LTE predicate on the "settle_type" field.
func SettleTypeLTE(v string) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldLTE(FieldSettleType, v))
}

// SettleTypeContains applies the Contains predicate on the "settle_type" field.
func SettleTypeContains(v string) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldContains(FieldSettleType, v))
}

// SettleTypeHasPrefix applies the HasPrefix predicate on the "settle_type" field.
func SettleTypeHasPrefix(v string) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldHasPrefix(FieldSettleType, v))
}

// SettleTypeHasSuffix applies the HasSuffix predicate on the "settle_type" field.
func SettleTypeHasSuffix(v string) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldHasSuffix(FieldSettleType, v))
}

// SettleTypeIsNil applies the IsNil predicate on the "settle_type" field.
func SettleTypeIsNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIsNull(FieldSettleType))
}

// SettleTypeNotNil applies the NotNil predicate on the "settle_type" field.
func SettleTypeNotNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotNull(FieldSettleType))
}

// SettleTypeEqualFold applies the EqualFold predicate on the "settle_type" field.
func SettleTypeEqualFold(v string) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEqualFold(FieldSettleType, v))
}

// SettleTypeContainsFold applies the ContainsFold predicate on the "settle_type" field.
func SettleTypeContainsFold(v string) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldContainsFold(FieldSettleType, v))
}

// DisabledEQ applies the EQ predicate on the "disabled" field.
func DisabledEQ(v bool) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldEQ(FieldDisabled, v))
}

// DisabledNEQ applies the NEQ predicate on the "disabled" field.
func DisabledNEQ(v bool) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNEQ(FieldDisabled, v))
}

// DisabledIsNil applies the IsNil predicate on the "disabled" field.
func DisabledIsNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldIsNull(FieldDisabled))
}

// DisabledNotNil applies the NotNil predicate on the "disabled" field.
func DisabledNotNil() predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.FieldNotNull(FieldDisabled))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AppGoodCommissionConfig) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AppGoodCommissionConfig) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AppGoodCommissionConfig) predicate.AppGoodCommissionConfig {
	return predicate.AppGoodCommissionConfig(sql.NotPredicates(p))
}
