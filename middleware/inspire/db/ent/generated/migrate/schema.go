// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ArchivementGeneralsColumns holds the columns for the "archivement_generals" table.
	ArchivementGeneralsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "app_good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coin_type_id", Type: field.TypeUUID, Nullable: true},
		{Name: "total_units_v1", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "self_units_v1", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "total_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "self_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "total_commission", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "self_commission", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
	}
	// ArchivementGeneralsTable holds the schema information for the "archivement_generals" table.
	ArchivementGeneralsTable = &schema.Table{
		Name:       "archivement_generals",
		Columns:    ArchivementGeneralsColumns,
		PrimaryKey: []*schema.Column{ArchivementGeneralsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "achievement_ent_id",
				Unique:  true,
				Columns: []*schema.Column{ArchivementGeneralsColumns[4]},
			},
		},
	}
	// AchievementUsersColumns holds the columns for the "achievement_users" table.
	AchievementUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "total_commission", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "self_commission", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "direct_consume_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "invitee_consume_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "direct_invitees", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "indirect_invitees", Type: field.TypeUint32, Nullable: true, Default: 0},
	}
	// AchievementUsersTable holds the schema information for the "achievement_users" table.
	AchievementUsersTable = &schema.Table{
		Name:       "achievement_users",
		Columns:    AchievementUsersColumns,
		PrimaryKey: []*schema.Column{AchievementUsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "achievementuser_ent_id",
				Unique:  true,
				Columns: []*schema.Column{AchievementUsersColumns[4]},
			},
		},
	}
	// AppCommissionConfigsColumns holds the columns for the "app_commission_configs" table.
	AppCommissionConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "level", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "threshold_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "amount_or_percent", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "start_at", Type: field.TypeUint32, Nullable: true, Default: 1750731786},
		{Name: "end_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "invites", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "settle_type", Type: field.TypeString, Nullable: true, Default: "DefaultSettleType"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Default: false},
	}
	// AppCommissionConfigsTable holds the schema information for the "app_commission_configs" table.
	AppCommissionConfigsTable = &schema.Table{
		Name:       "app_commission_configs",
		Columns:    AppCommissionConfigsColumns,
		PrimaryKey: []*schema.Column{AppCommissionConfigsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "appcommissionconfig_ent_id",
				Unique:  true,
				Columns: []*schema.Column{AppCommissionConfigsColumns[4]},
			},
		},
	}
	// AppConfigsColumns holds the columns for the "app_configs" table.
	AppConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "settle_mode", Type: field.TypeString, Nullable: true, Default: "DefaultSettleMode"},
		{Name: "settle_amount_type", Type: field.TypeString, Nullable: true, Default: "SettleByPercent"},
		{Name: "settle_interval", Type: field.TypeString, Nullable: true, Default: "DefaultSettleInterval"},
		{Name: "commission_type", Type: field.TypeString, Nullable: true, Default: "DefaultCommissionType"},
		{Name: "settle_benefit", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "max_level", Type: field.TypeUint32, Nullable: true, Default: 1},
		{Name: "start_at", Type: field.TypeUint32, Nullable: true, Default: 1750731786},
		{Name: "end_at", Type: field.TypeUint32, Nullable: true, Default: 0},
	}
	// AppConfigsTable holds the schema information for the "app_configs" table.
	AppConfigsTable = &schema.Table{
		Name:       "app_configs",
		Columns:    AppConfigsColumns,
		PrimaryKey: []*schema.Column{AppConfigsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "appconfig_ent_id",
				Unique:  true,
				Columns: []*schema.Column{AppConfigsColumns[4]},
			},
		},
	}
	// AppGoodCommissionConfigsColumns holds the columns for the "app_good_commission_configs" table.
	AppGoodCommissionConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "app_good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "level", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "threshold_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "amount_or_percent", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "start_at", Type: field.TypeUint32, Nullable: true, Default: 1750731786},
		{Name: "end_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "invites", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "settle_type", Type: field.TypeString, Nullable: true, Default: "DefaultSettleType"},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Default: false},
	}
	// AppGoodCommissionConfigsTable holds the schema information for the "app_good_commission_configs" table.
	AppGoodCommissionConfigsTable = &schema.Table{
		Name:       "app_good_commission_configs",
		Columns:    AppGoodCommissionConfigsColumns,
		PrimaryKey: []*schema.Column{AppGoodCommissionConfigsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "appgoodcommissionconfig_ent_id",
				Unique:  true,
				Columns: []*schema.Column{AppGoodCommissionConfigsColumns[4]},
			},
		},
	}
	// AppGoodScopesColumns holds the columns for the "app_good_scopes" table.
	AppGoodScopesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "app_good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coupon_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coupon_scope", Type: field.TypeString, Nullable: true, Default: "Whitelist"},
	}
	// AppGoodScopesTable holds the schema information for the "app_good_scopes" table.
	AppGoodScopesTable = &schema.Table{
		Name:       "app_good_scopes",
		Columns:    AppGoodScopesColumns,
		PrimaryKey: []*schema.Column{AppGoodScopesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "appgoodscope_ent_id",
				Unique:  true,
				Columns: []*schema.Column{AppGoodScopesColumns[4]},
			},
		},
	}
	// CashControlsColumns holds the columns for the "cash_controls" table.
	CashControlsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coupon_id", Type: field.TypeUUID, Nullable: true},
		{Name: "control_type", Type: field.TypeString, Nullable: true, Default: "DefaultControlType"},
		{Name: "value", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
	}
	// CashControlsTable holds the schema information for the "cash_controls" table.
	CashControlsTable = &schema.Table{
		Name:       "cash_controls",
		Columns:    CashControlsColumns,
		PrimaryKey: []*schema.Column{CashControlsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "cashcontrol_ent_id",
				Unique:  true,
				Columns: []*schema.Column{CashControlsColumns[4]},
			},
		},
	}
	// CoinAllocatedsColumns holds the columns for the "coin_allocateds" table.
	CoinAllocatedsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coin_config_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coin_type_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "value", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "extra", Type: field.TypeString, Nullable: true, Size: 512, Default: ""},
	}
	// CoinAllocatedsTable holds the schema information for the "coin_allocateds" table.
	CoinAllocatedsTable = &schema.Table{
		Name:       "coin_allocateds",
		Columns:    CoinAllocatedsColumns,
		PrimaryKey: []*schema.Column{CoinAllocatedsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "coinallocated_ent_id",
				Unique:  true,
				Columns: []*schema.Column{CoinAllocatedsColumns[4]},
			},
		},
	}
	// CoinConfigsColumns holds the columns for the "coin_configs" table.
	CoinConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coin_type_id", Type: field.TypeUUID, Nullable: true},
		{Name: "max_value", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "allocated", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
	}
	// CoinConfigsTable holds the schema information for the "coin_configs" table.
	CoinConfigsTable = &schema.Table{
		Name:       "coin_configs",
		Columns:    CoinConfigsColumns,
		PrimaryKey: []*schema.Column{CoinConfigsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "coinconfig_ent_id",
				Unique:  true,
				Columns: []*schema.Column{CoinConfigsColumns[4]},
			},
		},
	}
	// CommissionsColumns holds the columns for the "commissions" table.
	CommissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "app_good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "amount_or_percent", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "start_at", Type: field.TypeUint32, Nullable: true, Default: 1750731786},
		{Name: "end_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "settle_type", Type: field.TypeString, Nullable: true, Default: "DefaultSettleType"},
		{Name: "settle_mode", Type: field.TypeString, Nullable: true, Default: "DefaultSettleMode"},
		{Name: "settle_interval", Type: field.TypeString, Nullable: true, Default: "DefaultSettleInterval"},
		{Name: "settle_amount_type", Type: field.TypeString, Nullable: true, Default: "SettleByPercent"},
		{Name: "threshold", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "order_limit", Type: field.TypeUint32, Nullable: true, Default: 0},
	}
	// CommissionsTable holds the schema information for the "commissions" table.
	CommissionsTable = &schema.Table{
		Name:       "commissions",
		Columns:    CommissionsColumns,
		PrimaryKey: []*schema.Column{CommissionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "commission_ent_id",
				Unique:  true,
				Columns: []*schema.Column{CommissionsColumns[4]},
			},
		},
	}
	// CouponsColumns holds the columns for the "coupons" table.
	CouponsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "denomination", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "circulation", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "random", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "issued_by", Type: field.TypeUUID, Nullable: true},
		{Name: "start_at", Type: field.TypeUint32, Nullable: true, Default: 1750731786},
		{Name: "end_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "duration_days", Type: field.TypeUint32, Nullable: true, Default: 365},
		{Name: "message", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "name", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "allocated", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "coupon_type", Type: field.TypeString, Nullable: true, Default: "DefaultCouponType"},
		{Name: "threshold", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "coupon_constraint", Type: field.TypeString, Nullable: true, Default: "Normal"},
		{Name: "coupon_scope", Type: field.TypeString, Nullable: true, Default: "Whitelist"},
		{Name: "cashable_probability", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
	}
	// CouponsTable holds the schema information for the "coupons" table.
	CouponsTable = &schema.Table{
		Name:       "coupons",
		Columns:    CouponsColumns,
		PrimaryKey: []*schema.Column{CouponsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "coupon_ent_id",
				Unique:  true,
				Columns: []*schema.Column{CouponsColumns[4]},
			},
		},
	}
	// CouponAllocatedsColumns holds the columns for the "coupon_allocateds" table.
	CouponAllocatedsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coupon_id", Type: field.TypeUUID, Nullable: true},
		{Name: "denomination", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "used", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "used_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "used_by_order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "start_at", Type: field.TypeUint32, Nullable: true, Default: 1750731786},
		{Name: "coupon_scope", Type: field.TypeString, Nullable: true, Default: "Whitelist"},
		{Name: "cashable", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "extra", Type: field.TypeString, Nullable: true, Size: 512, Default: ""},
	}
	// CouponAllocatedsTable holds the schema information for the "coupon_allocateds" table.
	CouponAllocatedsTable = &schema.Table{
		Name:       "coupon_allocateds",
		Columns:    CouponAllocatedsColumns,
		PrimaryKey: []*schema.Column{CouponAllocatedsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "couponallocated_ent_id",
				Unique:  true,
				Columns: []*schema.Column{CouponAllocatedsColumns[4]},
			},
		},
	}
	// CouponScopesColumns holds the columns for the "coupon_scopes" table.
	CouponScopesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "coupon_id", Type: field.TypeUUID, Nullable: true},
		{Name: "good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coupon_scope", Type: field.TypeString, Nullable: true, Default: "Whitelist"},
	}
	// CouponScopesTable holds the schema information for the "coupon_scopes" table.
	CouponScopesTable = &schema.Table{
		Name:       "coupon_scopes",
		Columns:    CouponScopesColumns,
		PrimaryKey: []*schema.Column{CouponScopesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "couponscope_ent_id",
				Unique:  true,
				Columns: []*schema.Column{CouponScopesColumns[4]},
			},
		},
	}
	// CreditAllocatedsColumns holds the columns for the "credit_allocateds" table.
	CreditAllocatedsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "value", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "extra", Type: field.TypeString, Nullable: true, Size: 512, Default: ""},
	}
	// CreditAllocatedsTable holds the schema information for the "credit_allocateds" table.
	CreditAllocatedsTable = &schema.Table{
		Name:       "credit_allocateds",
		Columns:    CreditAllocatedsColumns,
		PrimaryKey: []*schema.Column{CreditAllocatedsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "creditallocated_ent_id",
				Unique:  true,
				Columns: []*schema.Column{CreditAllocatedsColumns[4]},
			},
		},
	}
	// EventsColumns holds the columns for the "events" table.
	EventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "event_type", Type: field.TypeString, Nullable: true, Default: "DefaultUsedFor"},
		{Name: "credits", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "credits_per_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "max_consecutive", Type: field.TypeUint32, Nullable: true, Default: 1},
		{Name: "good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "app_good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "inviter_layers", Type: field.TypeUint32, Nullable: true, Default: 1},
	}
	// EventsTable holds the schema information for the "events" table.
	EventsTable = &schema.Table{
		Name:       "events",
		Columns:    EventsColumns,
		PrimaryKey: []*schema.Column{EventsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "event_ent_id",
				Unique:  true,
				Columns: []*schema.Column{EventsColumns[4]},
			},
		},
	}
	// EventCoinsColumns holds the columns for the "event_coins" table.
	EventCoinsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "event_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coin_config_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coin_value", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "coin_per_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
	}
	// EventCoinsTable holds the schema information for the "event_coins" table.
	EventCoinsTable = &schema.Table{
		Name:       "event_coins",
		Columns:    EventCoinsColumns,
		PrimaryKey: []*schema.Column{EventCoinsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "eventcoin_ent_id",
				Unique:  true,
				Columns: []*schema.Column{EventCoinsColumns[4]},
			},
		},
	}
	// EventCouponsColumns holds the columns for the "event_coupons" table.
	EventCouponsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "event_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coupon_id", Type: field.TypeUUID, Nullable: true},
	}
	// EventCouponsTable holds the schema information for the "event_coupons" table.
	EventCouponsTable = &schema.Table{
		Name:       "event_coupons",
		Columns:    EventCouponsColumns,
		PrimaryKey: []*schema.Column{EventCouponsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "eventcoupon_ent_id",
				Unique:  true,
				Columns: []*schema.Column{EventCouponsColumns[4]},
			},
		},
	}
	// GoodAchievementsColumns holds the columns for the "good_achievements" table.
	GoodAchievementsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "app_good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "total_units", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "self_units", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "total_amount_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "self_amount_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "total_commission_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "self_commission_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
	}
	// GoodAchievementsTable holds the schema information for the "good_achievements" table.
	GoodAchievementsTable = &schema.Table{
		Name:       "good_achievements",
		Columns:    GoodAchievementsColumns,
		PrimaryKey: []*schema.Column{GoodAchievementsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "goodachievement_ent_id",
				Unique:  true,
				Columns: []*schema.Column{GoodAchievementsColumns[4]},
			},
		},
	}
	// GoodCoinAchievementsColumns holds the columns for the "good_coin_achievements" table.
	GoodCoinAchievementsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "good_coin_type_id", Type: field.TypeUUID, Nullable: true},
		{Name: "total_units", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "self_units", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "total_amount_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "self_amount_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "total_commission_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "self_commission_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
	}
	// GoodCoinAchievementsTable holds the schema information for the "good_coin_achievements" table.
	GoodCoinAchievementsTable = &schema.Table{
		Name:       "good_coin_achievements",
		Columns:    GoodCoinAchievementsColumns,
		PrimaryKey: []*schema.Column{GoodCoinAchievementsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "goodcoinachievement_ent_id",
				Unique:  true,
				Columns: []*schema.Column{GoodCoinAchievementsColumns[4]},
			},
		},
	}
	// InvitationCodesColumns holds the columns for the "invitation_codes" table.
	InvitationCodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "invitation_code", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "disabled", Type: field.TypeBool, Nullable: true, Default: false},
	}
	// InvitationCodesTable holds the schema information for the "invitation_codes" table.
	InvitationCodesTable = &schema.Table{
		Name:       "invitation_codes",
		Columns:    InvitationCodesColumns,
		PrimaryKey: []*schema.Column{InvitationCodesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "invitationcode_ent_id",
				Unique:  true,
				Columns: []*schema.Column{InvitationCodesColumns[4]},
			},
		},
	}
	// OrderPaymentStatementsColumns holds the columns for the "order_payment_statements" table.
	OrderPaymentStatementsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "statement_id", Type: field.TypeUUID, Nullable: true},
		{Name: "payment_coin_type_id", Type: field.TypeUUID, Nullable: true},
		{Name: "amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "commission_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
	}
	// OrderPaymentStatementsTable holds the schema information for the "order_payment_statements" table.
	OrderPaymentStatementsTable = &schema.Table{
		Name:       "order_payment_statements",
		Columns:    OrderPaymentStatementsColumns,
		PrimaryKey: []*schema.Column{OrderPaymentStatementsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "orderpaymentstatement_ent_id",
				Unique:  true,
				Columns: []*schema.Column{OrderPaymentStatementsColumns[4]},
			},
		},
	}
	// OrderStatementsColumns holds the columns for the "order_statements" table.
	OrderStatementsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "app_good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "direct_contributor_id", Type: field.TypeUUID, Nullable: true},
		{Name: "order_user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "good_coin_type_id", Type: field.TypeUUID, Nullable: true},
		{Name: "units", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "good_value_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "payment_amount_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "commission_amount_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "app_config_id", Type: field.TypeUUID, Nullable: true},
		{Name: "commission_config_id", Type: field.TypeUUID, Nullable: true},
		{Name: "commission_config_type", Type: field.TypeString, Nullable: true, Default: "DefaultCommissionConfigType"},
	}
	// OrderStatementsTable holds the schema information for the "order_statements" table.
	OrderStatementsTable = &schema.Table{
		Name:       "order_statements",
		Columns:    OrderStatementsColumns,
		PrimaryKey: []*schema.Column{OrderStatementsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "orderstatement_ent_id",
				Unique:  true,
				Columns: []*schema.Column{OrderStatementsColumns[4]},
			},
		},
	}
	// RegistrationsColumns holds the columns for the "registrations" table.
	RegistrationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "inviter_id", Type: field.TypeUUID, Nullable: true},
		{Name: "invitee_id", Type: field.TypeUUID, Nullable: true},
	}
	// RegistrationsTable holds the schema information for the "registrations" table.
	RegistrationsTable = &schema.Table{
		Name:       "registrations",
		Columns:    RegistrationsColumns,
		PrimaryKey: []*schema.Column{RegistrationsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "registration_ent_id",
				Unique:  true,
				Columns: []*schema.Column{RegistrationsColumns[4]},
			},
		},
	}
	// ArchivementDetailsColumns holds the columns for the "archivement_details" table.
	ArchivementDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "direct_contributor_id", Type: field.TypeUUID, Nullable: true},
		{Name: "good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "app_good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "self_order", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "payment_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coin_type_id", Type: field.TypeUUID, Nullable: true},
		{Name: "payment_coin_type_id", Type: field.TypeUUID, Nullable: true},
		{Name: "payment_coin_usd_currency", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "units", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "units_v1", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "usd_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "commission", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "app_config_id", Type: field.TypeUUID, Nullable: true},
		{Name: "commission_config_id", Type: field.TypeUUID, Nullable: true},
		{Name: "commission_config_type", Type: field.TypeString, Nullable: true, Default: "DefaultCommissionConfigType"},
	}
	// ArchivementDetailsTable holds the schema information for the "archivement_details" table.
	ArchivementDetailsTable = &schema.Table{
		Name:       "archivement_details",
		Columns:    ArchivementDetailsColumns,
		PrimaryKey: []*schema.Column{ArchivementDetailsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "statement_ent_id",
				Unique:  true,
				Columns: []*schema.Column{ArchivementDetailsColumns[4]},
			},
		},
	}
	// TaskConfigsColumns holds the columns for the "task_configs" table.
	TaskConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "event_id", Type: field.TypeUUID, Nullable: true},
		{Name: "task_type", Type: field.TypeString, Nullable: true, Default: "DefaultTaskType"},
		{Name: "name", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "task_desc", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "step_guide", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "recommend_message", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "index", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "last_task_id", Type: field.TypeUUID, Nullable: true},
		{Name: "max_reward_count", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "cooldown_second", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "interval_reset", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "interval_reset_second", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "max_interval_reward_count", Type: field.TypeUint32, Nullable: true, Default: 0},
	}
	// TaskConfigsTable holds the schema information for the "task_configs" table.
	TaskConfigsTable = &schema.Table{
		Name:       "task_configs",
		Columns:    TaskConfigsColumns,
		PrimaryKey: []*schema.Column{TaskConfigsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "taskconfig_ent_id",
				Unique:  true,
				Columns: []*schema.Column{TaskConfigsColumns[4]},
			},
		},
	}
	// TaskUsersColumns holds the columns for the "task_users" table.
	TaskUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "task_id", Type: field.TypeUUID, Nullable: true},
		{Name: "event_id", Type: field.TypeUUID, Nullable: true},
		{Name: "task_state", Type: field.TypeString, Nullable: true, Default: "DefaultTaskState"},
		{Name: "reward_state", Type: field.TypeString, Nullable: true, Default: "DefaultRewardState"},
	}
	// TaskUsersTable holds the schema information for the "task_users" table.
	TaskUsersTable = &schema.Table{
		Name:       "task_users",
		Columns:    TaskUsersColumns,
		PrimaryKey: []*schema.Column{TaskUsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "taskuser_ent_id",
				Unique:  true,
				Columns: []*schema.Column{TaskUsersColumns[4]},
			},
		},
	}
	// UserCoinRewardsColumns holds the columns for the "user_coin_rewards" table.
	UserCoinRewardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coin_type_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coin_rewards", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
	}
	// UserCoinRewardsTable holds the schema information for the "user_coin_rewards" table.
	UserCoinRewardsTable = &schema.Table{
		Name:       "user_coin_rewards",
		Columns:    UserCoinRewardsColumns,
		PrimaryKey: []*schema.Column{UserCoinRewardsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "usercoinreward_ent_id",
				Unique:  true,
				Columns: []*schema.Column{UserCoinRewardsColumns[4]},
			},
		},
	}
	// UserRewardsColumns holds the columns for the "user_rewards" table.
	UserRewardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "created_at", Type: field.TypeUint32},
		{Name: "updated_at", Type: field.TypeUint32},
		{Name: "deleted_at", Type: field.TypeUint32},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "action_credits", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "coupon_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "coupon_cashable_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
	}
	// UserRewardsTable holds the schema information for the "user_rewards" table.
	UserRewardsTable = &schema.Table{
		Name:       "user_rewards",
		Columns:    UserRewardsColumns,
		PrimaryKey: []*schema.Column{UserRewardsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userreward_ent_id",
				Unique:  true,
				Columns: []*schema.Column{UserRewardsColumns[4]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ArchivementGeneralsTable,
		AchievementUsersTable,
		AppCommissionConfigsTable,
		AppConfigsTable,
		AppGoodCommissionConfigsTable,
		AppGoodScopesTable,
		CashControlsTable,
		CoinAllocatedsTable,
		CoinConfigsTable,
		CommissionsTable,
		CouponsTable,
		CouponAllocatedsTable,
		CouponScopesTable,
		CreditAllocatedsTable,
		EventsTable,
		EventCoinsTable,
		EventCouponsTable,
		GoodAchievementsTable,
		GoodCoinAchievementsTable,
		InvitationCodesTable,
		OrderPaymentStatementsTable,
		OrderStatementsTable,
		RegistrationsTable,
		ArchivementDetailsTable,
		TaskConfigsTable,
		TaskUsersTable,
		UserCoinRewardsTable,
		UserRewardsTable,
	}
)

func init() {
	ArchivementGeneralsTable.Annotation = &entsql.Annotation{
		Table: "archivement_generals",
	}
	ArchivementDetailsTable.Annotation = &entsql.Annotation{
		Table: "archivement_details",
	}
}
