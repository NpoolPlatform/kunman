// Code generated by ent, DO NOT EDIT.

package quota

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the quota type in the database.
	Label = "quota"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldQuota holds the string denoting the quota field in the database.
	FieldQuota = "quota"
	// FieldConsumedQuota holds the string denoting the consumed_quota field in the database.
	FieldConsumedQuota = "consumed_quota"
	// FieldExpiredAt holds the string denoting the expired_at field in the database.
	FieldExpiredAt = "expired_at"
	// Table holds the table name of the quota in the database.
	Table = "quota"
)

// Columns holds all SQL columns for quota fields.
var Columns = []string{
	FieldID,
	FieldEntID,
	FieldAppID,
	FieldUserID,
	FieldQuota,
	FieldConsumedQuota,
	FieldExpiredAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultAppID holds the default value on creation for the "app_id" field.
	DefaultAppID func() uuid.UUID
	// DefaultUserID holds the default value on creation for the "user_id" field.
	DefaultUserID func() uuid.UUID
	// DefaultQuota holds the default value on creation for the "quota" field.
	DefaultQuota uint32
	// DefaultConsumedQuota holds the default value on creation for the "consumed_quota" field.
	DefaultConsumedQuota uint32
	// DefaultExpiredAt holds the default value on creation for the "expired_at" field.
	DefaultExpiredAt uint32
)

// OrderOption defines the ordering options for the Quota queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEntID orders the results by the ent_id field.
func ByEntID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntID, opts...).ToFunc()
}

// ByAppID orders the results by the app_id field.
func ByAppID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAppID, opts...).ToFunc()
}

// ByUserID orders the results by the user_id field.
func ByUserID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserID, opts...).ToFunc()
}

// ByQuota orders the results by the quota field.
func ByQuota(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldQuota, opts...).ToFunc()
}

// ByConsumedQuota orders the results by the consumed_quota field.
func ByConsumedQuota(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldConsumedQuota, opts...).ToFunc()
}

// ByExpiredAt orders the results by the expired_at field.
func ByExpiredAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldExpiredAt, opts...).ToFunc()
}
