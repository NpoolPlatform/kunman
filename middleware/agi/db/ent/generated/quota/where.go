// Code generated by ent, DO NOT EDIT.

package quota

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/agi/db/ent/generated/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.Quota {
	return predicate.Quota(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.Quota {
	return predicate.Quota(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.Quota {
	return predicate.Quota(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.Quota {
	return predicate.Quota(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.Quota {
	return predicate.Quota(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.Quota {
	return predicate.Quota(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.Quota {
	return predicate.Quota(sql.FieldLTE(FieldID, id))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldEntID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldDeletedAt, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldAppID, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldUserID, v))
}

// Quota applies equality check predicate on the "quota" field. It's identical to QuotaEQ.
func Quota(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldQuota, v))
}

// ConsumedQuota applies equality check predicate on the "consumed_quota" field. It's identical to ConsumedQuotaEQ.
func ConsumedQuota(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldConsumedQuota, v))
}

// ExpiredAt applies equality check predicate on the "expired_at" field. It's identical to ExpiredAtEQ.
func ExpiredAt(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldExpiredAt, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldLTE(FieldEntID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.Quota {
	return predicate.Quota(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.Quota {
	return predicate.Quota(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.Quota {
	return predicate.Quota(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.Quota {
	return predicate.Quota(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.Quota {
	return predicate.Quota(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.Quota {
	return predicate.Quota(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldLTE(FieldDeletedAt, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldLTE(FieldAppID, v))
}

// AppIDIsNil applies the IsNil predicate on the "app_id" field.
func AppIDIsNil() predicate.Quota {
	return predicate.Quota(sql.FieldIsNull(FieldAppID))
}

// AppIDNotNil applies the NotNil predicate on the "app_id" field.
func AppIDNotNil() predicate.Quota {
	return predicate.Quota(sql.FieldNotNull(FieldAppID))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v uuid.UUID) predicate.Quota {
	return predicate.Quota(sql.FieldLTE(FieldUserID, v))
}

// UserIDIsNil applies the IsNil predicate on the "user_id" field.
func UserIDIsNil() predicate.Quota {
	return predicate.Quota(sql.FieldIsNull(FieldUserID))
}

// UserIDNotNil applies the NotNil predicate on the "user_id" field.
func UserIDNotNil() predicate.Quota {
	return predicate.Quota(sql.FieldNotNull(FieldUserID))
}

// QuotaEQ applies the EQ predicate on the "quota" field.
func QuotaEQ(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldQuota, v))
}

// QuotaNEQ applies the NEQ predicate on the "quota" field.
func QuotaNEQ(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldNEQ(FieldQuota, v))
}

// QuotaIn applies the In predicate on the "quota" field.
func QuotaIn(vs ...uint32) predicate.Quota {
	return predicate.Quota(sql.FieldIn(FieldQuota, vs...))
}

// QuotaNotIn applies the NotIn predicate on the "quota" field.
func QuotaNotIn(vs ...uint32) predicate.Quota {
	return predicate.Quota(sql.FieldNotIn(FieldQuota, vs...))
}

// QuotaGT applies the GT predicate on the "quota" field.
func QuotaGT(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldGT(FieldQuota, v))
}

// QuotaGTE applies the GTE predicate on the "quota" field.
func QuotaGTE(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldGTE(FieldQuota, v))
}

// QuotaLT applies the LT predicate on the "quota" field.
func QuotaLT(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldLT(FieldQuota, v))
}

// QuotaLTE applies the LTE predicate on the "quota" field.
func QuotaLTE(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldLTE(FieldQuota, v))
}

// QuotaIsNil applies the IsNil predicate on the "quota" field.
func QuotaIsNil() predicate.Quota {
	return predicate.Quota(sql.FieldIsNull(FieldQuota))
}

// QuotaNotNil applies the NotNil predicate on the "quota" field.
func QuotaNotNil() predicate.Quota {
	return predicate.Quota(sql.FieldNotNull(FieldQuota))
}

// ConsumedQuotaEQ applies the EQ predicate on the "consumed_quota" field.
func ConsumedQuotaEQ(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldConsumedQuota, v))
}

// ConsumedQuotaNEQ applies the NEQ predicate on the "consumed_quota" field.
func ConsumedQuotaNEQ(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldNEQ(FieldConsumedQuota, v))
}

// ConsumedQuotaIn applies the In predicate on the "consumed_quota" field.
func ConsumedQuotaIn(vs ...uint32) predicate.Quota {
	return predicate.Quota(sql.FieldIn(FieldConsumedQuota, vs...))
}

// ConsumedQuotaNotIn applies the NotIn predicate on the "consumed_quota" field.
func ConsumedQuotaNotIn(vs ...uint32) predicate.Quota {
	return predicate.Quota(sql.FieldNotIn(FieldConsumedQuota, vs...))
}

// ConsumedQuotaGT applies the GT predicate on the "consumed_quota" field.
func ConsumedQuotaGT(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldGT(FieldConsumedQuota, v))
}

// ConsumedQuotaGTE applies the GTE predicate on the "consumed_quota" field.
func ConsumedQuotaGTE(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldGTE(FieldConsumedQuota, v))
}

// ConsumedQuotaLT applies the LT predicate on the "consumed_quota" field.
func ConsumedQuotaLT(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldLT(FieldConsumedQuota, v))
}

// ConsumedQuotaLTE applies the LTE predicate on the "consumed_quota" field.
func ConsumedQuotaLTE(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldLTE(FieldConsumedQuota, v))
}

// ConsumedQuotaIsNil applies the IsNil predicate on the "consumed_quota" field.
func ConsumedQuotaIsNil() predicate.Quota {
	return predicate.Quota(sql.FieldIsNull(FieldConsumedQuota))
}

// ConsumedQuotaNotNil applies the NotNil predicate on the "consumed_quota" field.
func ConsumedQuotaNotNil() predicate.Quota {
	return predicate.Quota(sql.FieldNotNull(FieldConsumedQuota))
}

// ExpiredAtEQ applies the EQ predicate on the "expired_at" field.
func ExpiredAtEQ(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldEQ(FieldExpiredAt, v))
}

// ExpiredAtNEQ applies the NEQ predicate on the "expired_at" field.
func ExpiredAtNEQ(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldNEQ(FieldExpiredAt, v))
}

// ExpiredAtIn applies the In predicate on the "expired_at" field.
func ExpiredAtIn(vs ...uint32) predicate.Quota {
	return predicate.Quota(sql.FieldIn(FieldExpiredAt, vs...))
}

// ExpiredAtNotIn applies the NotIn predicate on the "expired_at" field.
func ExpiredAtNotIn(vs ...uint32) predicate.Quota {
	return predicate.Quota(sql.FieldNotIn(FieldExpiredAt, vs...))
}

// ExpiredAtGT applies the GT predicate on the "expired_at" field.
func ExpiredAtGT(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldGT(FieldExpiredAt, v))
}

// ExpiredAtGTE applies the GTE predicate on the "expired_at" field.
func ExpiredAtGTE(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldGTE(FieldExpiredAt, v))
}

// ExpiredAtLT applies the LT predicate on the "expired_at" field.
func ExpiredAtLT(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldLT(FieldExpiredAt, v))
}

// ExpiredAtLTE applies the LTE predicate on the "expired_at" field.
func ExpiredAtLTE(v uint32) predicate.Quota {
	return predicate.Quota(sql.FieldLTE(FieldExpiredAt, v))
}

// ExpiredAtIsNil applies the IsNil predicate on the "expired_at" field.
func ExpiredAtIsNil() predicate.Quota {
	return predicate.Quota(sql.FieldIsNull(FieldExpiredAt))
}

// ExpiredAtNotNil applies the NotNil predicate on the "expired_at" field.
func ExpiredAtNotNil() predicate.Quota {
	return predicate.Quota(sql.FieldNotNull(FieldExpiredAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Quota) predicate.Quota {
	return predicate.Quota(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Quota) predicate.Quota {
	return predicate.Quota(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Quota) predicate.Quota {
	return predicate.Quota(sql.NotPredicates(p))
}
