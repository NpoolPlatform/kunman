// Code generated by ent, DO NOT EDIT.

package appcontrol

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/appuser/db/ent/generated/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldDeletedAt, v))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldEntID, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldAppID, v))
}

// RecaptchaMethod applies equality check predicate on the "recaptcha_method" field. It's identical to RecaptchaMethodEQ.
func RecaptchaMethod(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldRecaptchaMethod, v))
}

// KycEnable applies equality check predicate on the "kyc_enable" field. It's identical to KycEnableEQ.
func KycEnable(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldKycEnable, v))
}

// SigninVerifyEnable applies equality check predicate on the "signin_verify_enable" field. It's identical to SigninVerifyEnableEQ.
func SigninVerifyEnable(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldSigninVerifyEnable, v))
}

// InvitationCodeMust applies equality check predicate on the "invitation_code_must" field. It's identical to InvitationCodeMustEQ.
func InvitationCodeMust(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldInvitationCodeMust, v))
}

// CreateInvitationCodeWhen applies equality check predicate on the "create_invitation_code_when" field. It's identical to CreateInvitationCodeWhenEQ.
func CreateInvitationCodeWhen(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldCreateInvitationCodeWhen, v))
}

// MaxTypedCouponsPerOrder applies equality check predicate on the "max_typed_coupons_per_order" field. It's identical to MaxTypedCouponsPerOrderEQ.
func MaxTypedCouponsPerOrder(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldMaxTypedCouponsPerOrder, v))
}

// Maintaining applies equality check predicate on the "maintaining" field. It's identical to MaintainingEQ.
func Maintaining(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldMaintaining, v))
}

// CouponWithdrawEnable applies equality check predicate on the "coupon_withdraw_enable" field. It's identical to CouponWithdrawEnableEQ.
func CouponWithdrawEnable(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldCouponWithdrawEnable, v))
}

// ResetUserMethod applies equality check predicate on the "reset_user_method" field. It's identical to ResetUserMethodEQ.
func ResetUserMethod(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldResetUserMethod, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldLTE(FieldDeletedAt, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldLTE(FieldEntID, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v uuid.UUID) predicate.AppControl {
	return predicate.AppControl(sql.FieldLTE(FieldAppID, v))
}

// AppIDIsNil applies the IsNil predicate on the "app_id" field.
func AppIDIsNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldIsNull(FieldAppID))
}

// AppIDNotNil applies the NotNil predicate on the "app_id" field.
func AppIDNotNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldNotNull(FieldAppID))
}

// SignupMethodsIsNil applies the IsNil predicate on the "signup_methods" field.
func SignupMethodsIsNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldIsNull(FieldSignupMethods))
}

// SignupMethodsNotNil applies the NotNil predicate on the "signup_methods" field.
func SignupMethodsNotNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldNotNull(FieldSignupMethods))
}

// ExternSigninMethodsIsNil applies the IsNil predicate on the "extern_signin_methods" field.
func ExternSigninMethodsIsNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldIsNull(FieldExternSigninMethods))
}

// ExternSigninMethodsNotNil applies the NotNil predicate on the "extern_signin_methods" field.
func ExternSigninMethodsNotNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldNotNull(FieldExternSigninMethods))
}

// RecaptchaMethodEQ applies the EQ predicate on the "recaptcha_method" field.
func RecaptchaMethodEQ(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldRecaptchaMethod, v))
}

// RecaptchaMethodNEQ applies the NEQ predicate on the "recaptcha_method" field.
func RecaptchaMethodNEQ(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldRecaptchaMethod, v))
}

// RecaptchaMethodIn applies the In predicate on the "recaptcha_method" field.
func RecaptchaMethodIn(vs ...string) predicate.AppControl {
	return predicate.AppControl(sql.FieldIn(FieldRecaptchaMethod, vs...))
}

// RecaptchaMethodNotIn applies the NotIn predicate on the "recaptcha_method" field.
func RecaptchaMethodNotIn(vs ...string) predicate.AppControl {
	return predicate.AppControl(sql.FieldNotIn(FieldRecaptchaMethod, vs...))
}

// RecaptchaMethodGT applies the GT predicate on the "recaptcha_method" field.
func RecaptchaMethodGT(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldGT(FieldRecaptchaMethod, v))
}

// RecaptchaMethodGTE applies the GTE predicate on the "recaptcha_method" field.
func RecaptchaMethodGTE(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldGTE(FieldRecaptchaMethod, v))
}

// RecaptchaMethodLT applies the LT predicate on the "recaptcha_method" field.
func RecaptchaMethodLT(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldLT(FieldRecaptchaMethod, v))
}

// RecaptchaMethodLTE applies the LTE predicate on the "recaptcha_method" field.
func RecaptchaMethodLTE(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldLTE(FieldRecaptchaMethod, v))
}

// RecaptchaMethodContains applies the Contains predicate on the "recaptcha_method" field.
func RecaptchaMethodContains(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldContains(FieldRecaptchaMethod, v))
}

// RecaptchaMethodHasPrefix applies the HasPrefix predicate on the "recaptcha_method" field.
func RecaptchaMethodHasPrefix(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldHasPrefix(FieldRecaptchaMethod, v))
}

// RecaptchaMethodHasSuffix applies the HasSuffix predicate on the "recaptcha_method" field.
func RecaptchaMethodHasSuffix(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldHasSuffix(FieldRecaptchaMethod, v))
}

// RecaptchaMethodIsNil applies the IsNil predicate on the "recaptcha_method" field.
func RecaptchaMethodIsNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldIsNull(FieldRecaptchaMethod))
}

// RecaptchaMethodNotNil applies the NotNil predicate on the "recaptcha_method" field.
func RecaptchaMethodNotNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldNotNull(FieldRecaptchaMethod))
}

// RecaptchaMethodEqualFold applies the EqualFold predicate on the "recaptcha_method" field.
func RecaptchaMethodEqualFold(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldEqualFold(FieldRecaptchaMethod, v))
}

// RecaptchaMethodContainsFold applies the ContainsFold predicate on the "recaptcha_method" field.
func RecaptchaMethodContainsFold(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldContainsFold(FieldRecaptchaMethod, v))
}

// KycEnableEQ applies the EQ predicate on the "kyc_enable" field.
func KycEnableEQ(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldKycEnable, v))
}

// KycEnableNEQ applies the NEQ predicate on the "kyc_enable" field.
func KycEnableNEQ(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldKycEnable, v))
}

// KycEnableIsNil applies the IsNil predicate on the "kyc_enable" field.
func KycEnableIsNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldIsNull(FieldKycEnable))
}

// KycEnableNotNil applies the NotNil predicate on the "kyc_enable" field.
func KycEnableNotNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldNotNull(FieldKycEnable))
}

// SigninVerifyEnableEQ applies the EQ predicate on the "signin_verify_enable" field.
func SigninVerifyEnableEQ(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldSigninVerifyEnable, v))
}

// SigninVerifyEnableNEQ applies the NEQ predicate on the "signin_verify_enable" field.
func SigninVerifyEnableNEQ(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldSigninVerifyEnable, v))
}

// SigninVerifyEnableIsNil applies the IsNil predicate on the "signin_verify_enable" field.
func SigninVerifyEnableIsNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldIsNull(FieldSigninVerifyEnable))
}

// SigninVerifyEnableNotNil applies the NotNil predicate on the "signin_verify_enable" field.
func SigninVerifyEnableNotNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldNotNull(FieldSigninVerifyEnable))
}

// InvitationCodeMustEQ applies the EQ predicate on the "invitation_code_must" field.
func InvitationCodeMustEQ(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldInvitationCodeMust, v))
}

// InvitationCodeMustNEQ applies the NEQ predicate on the "invitation_code_must" field.
func InvitationCodeMustNEQ(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldInvitationCodeMust, v))
}

// InvitationCodeMustIsNil applies the IsNil predicate on the "invitation_code_must" field.
func InvitationCodeMustIsNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldIsNull(FieldInvitationCodeMust))
}

// InvitationCodeMustNotNil applies the NotNil predicate on the "invitation_code_must" field.
func InvitationCodeMustNotNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldNotNull(FieldInvitationCodeMust))
}

// CreateInvitationCodeWhenEQ applies the EQ predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenEQ(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldCreateInvitationCodeWhen, v))
}

// CreateInvitationCodeWhenNEQ applies the NEQ predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenNEQ(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldCreateInvitationCodeWhen, v))
}

// CreateInvitationCodeWhenIn applies the In predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenIn(vs ...string) predicate.AppControl {
	return predicate.AppControl(sql.FieldIn(FieldCreateInvitationCodeWhen, vs...))
}

// CreateInvitationCodeWhenNotIn applies the NotIn predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenNotIn(vs ...string) predicate.AppControl {
	return predicate.AppControl(sql.FieldNotIn(FieldCreateInvitationCodeWhen, vs...))
}

// CreateInvitationCodeWhenGT applies the GT predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenGT(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldGT(FieldCreateInvitationCodeWhen, v))
}

// CreateInvitationCodeWhenGTE applies the GTE predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenGTE(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldGTE(FieldCreateInvitationCodeWhen, v))
}

// CreateInvitationCodeWhenLT applies the LT predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenLT(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldLT(FieldCreateInvitationCodeWhen, v))
}

// CreateInvitationCodeWhenLTE applies the LTE predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenLTE(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldLTE(FieldCreateInvitationCodeWhen, v))
}

// CreateInvitationCodeWhenContains applies the Contains predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenContains(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldContains(FieldCreateInvitationCodeWhen, v))
}

// CreateInvitationCodeWhenHasPrefix applies the HasPrefix predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenHasPrefix(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldHasPrefix(FieldCreateInvitationCodeWhen, v))
}

// CreateInvitationCodeWhenHasSuffix applies the HasSuffix predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenHasSuffix(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldHasSuffix(FieldCreateInvitationCodeWhen, v))
}

// CreateInvitationCodeWhenIsNil applies the IsNil predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenIsNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldIsNull(FieldCreateInvitationCodeWhen))
}

// CreateInvitationCodeWhenNotNil applies the NotNil predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenNotNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldNotNull(FieldCreateInvitationCodeWhen))
}

// CreateInvitationCodeWhenEqualFold applies the EqualFold predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenEqualFold(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldEqualFold(FieldCreateInvitationCodeWhen, v))
}

// CreateInvitationCodeWhenContainsFold applies the ContainsFold predicate on the "create_invitation_code_when" field.
func CreateInvitationCodeWhenContainsFold(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldContainsFold(FieldCreateInvitationCodeWhen, v))
}

// MaxTypedCouponsPerOrderEQ applies the EQ predicate on the "max_typed_coupons_per_order" field.
func MaxTypedCouponsPerOrderEQ(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldMaxTypedCouponsPerOrder, v))
}

// MaxTypedCouponsPerOrderNEQ applies the NEQ predicate on the "max_typed_coupons_per_order" field.
func MaxTypedCouponsPerOrderNEQ(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldMaxTypedCouponsPerOrder, v))
}

// MaxTypedCouponsPerOrderIn applies the In predicate on the "max_typed_coupons_per_order" field.
func MaxTypedCouponsPerOrderIn(vs ...uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldIn(FieldMaxTypedCouponsPerOrder, vs...))
}

// MaxTypedCouponsPerOrderNotIn applies the NotIn predicate on the "max_typed_coupons_per_order" field.
func MaxTypedCouponsPerOrderNotIn(vs ...uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldNotIn(FieldMaxTypedCouponsPerOrder, vs...))
}

// MaxTypedCouponsPerOrderGT applies the GT predicate on the "max_typed_coupons_per_order" field.
func MaxTypedCouponsPerOrderGT(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldGT(FieldMaxTypedCouponsPerOrder, v))
}

// MaxTypedCouponsPerOrderGTE applies the GTE predicate on the "max_typed_coupons_per_order" field.
func MaxTypedCouponsPerOrderGTE(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldGTE(FieldMaxTypedCouponsPerOrder, v))
}

// MaxTypedCouponsPerOrderLT applies the LT predicate on the "max_typed_coupons_per_order" field.
func MaxTypedCouponsPerOrderLT(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldLT(FieldMaxTypedCouponsPerOrder, v))
}

// MaxTypedCouponsPerOrderLTE applies the LTE predicate on the "max_typed_coupons_per_order" field.
func MaxTypedCouponsPerOrderLTE(v uint32) predicate.AppControl {
	return predicate.AppControl(sql.FieldLTE(FieldMaxTypedCouponsPerOrder, v))
}

// MaxTypedCouponsPerOrderIsNil applies the IsNil predicate on the "max_typed_coupons_per_order" field.
func MaxTypedCouponsPerOrderIsNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldIsNull(FieldMaxTypedCouponsPerOrder))
}

// MaxTypedCouponsPerOrderNotNil applies the NotNil predicate on the "max_typed_coupons_per_order" field.
func MaxTypedCouponsPerOrderNotNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldNotNull(FieldMaxTypedCouponsPerOrder))
}

// MaintainingEQ applies the EQ predicate on the "maintaining" field.
func MaintainingEQ(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldMaintaining, v))
}

// MaintainingNEQ applies the NEQ predicate on the "maintaining" field.
func MaintainingNEQ(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldMaintaining, v))
}

// MaintainingIsNil applies the IsNil predicate on the "maintaining" field.
func MaintainingIsNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldIsNull(FieldMaintaining))
}

// MaintainingNotNil applies the NotNil predicate on the "maintaining" field.
func MaintainingNotNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldNotNull(FieldMaintaining))
}

// CouponWithdrawEnableEQ applies the EQ predicate on the "coupon_withdraw_enable" field.
func CouponWithdrawEnableEQ(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldCouponWithdrawEnable, v))
}

// CouponWithdrawEnableNEQ applies the NEQ predicate on the "coupon_withdraw_enable" field.
func CouponWithdrawEnableNEQ(v bool) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldCouponWithdrawEnable, v))
}

// CouponWithdrawEnableIsNil applies the IsNil predicate on the "coupon_withdraw_enable" field.
func CouponWithdrawEnableIsNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldIsNull(FieldCouponWithdrawEnable))
}

// CouponWithdrawEnableNotNil applies the NotNil predicate on the "coupon_withdraw_enable" field.
func CouponWithdrawEnableNotNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldNotNull(FieldCouponWithdrawEnable))
}

// CommitButtonTargetsIsNil applies the IsNil predicate on the "commit_button_targets" field.
func CommitButtonTargetsIsNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldIsNull(FieldCommitButtonTargets))
}

// CommitButtonTargetsNotNil applies the NotNil predicate on the "commit_button_targets" field.
func CommitButtonTargetsNotNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldNotNull(FieldCommitButtonTargets))
}

// ResetUserMethodEQ applies the EQ predicate on the "reset_user_method" field.
func ResetUserMethodEQ(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldEQ(FieldResetUserMethod, v))
}

// ResetUserMethodNEQ applies the NEQ predicate on the "reset_user_method" field.
func ResetUserMethodNEQ(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldNEQ(FieldResetUserMethod, v))
}

// ResetUserMethodIn applies the In predicate on the "reset_user_method" field.
func ResetUserMethodIn(vs ...string) predicate.AppControl {
	return predicate.AppControl(sql.FieldIn(FieldResetUserMethod, vs...))
}

// ResetUserMethodNotIn applies the NotIn predicate on the "reset_user_method" field.
func ResetUserMethodNotIn(vs ...string) predicate.AppControl {
	return predicate.AppControl(sql.FieldNotIn(FieldResetUserMethod, vs...))
}

// ResetUserMethodGT applies the GT predicate on the "reset_user_method" field.
func ResetUserMethodGT(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldGT(FieldResetUserMethod, v))
}

// ResetUserMethodGTE applies the GTE predicate on the "reset_user_method" field.
func ResetUserMethodGTE(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldGTE(FieldResetUserMethod, v))
}

// ResetUserMethodLT applies the LT predicate on the "reset_user_method" field.
func ResetUserMethodLT(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldLT(FieldResetUserMethod, v))
}

// ResetUserMethodLTE applies the LTE predicate on the "reset_user_method" field.
func ResetUserMethodLTE(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldLTE(FieldResetUserMethod, v))
}

// ResetUserMethodContains applies the Contains predicate on the "reset_user_method" field.
func ResetUserMethodContains(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldContains(FieldResetUserMethod, v))
}

// ResetUserMethodHasPrefix applies the HasPrefix predicate on the "reset_user_method" field.
func ResetUserMethodHasPrefix(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldHasPrefix(FieldResetUserMethod, v))
}

// ResetUserMethodHasSuffix applies the HasSuffix predicate on the "reset_user_method" field.
func ResetUserMethodHasSuffix(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldHasSuffix(FieldResetUserMethod, v))
}

// ResetUserMethodIsNil applies the IsNil predicate on the "reset_user_method" field.
func ResetUserMethodIsNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldIsNull(FieldResetUserMethod))
}

// ResetUserMethodNotNil applies the NotNil predicate on the "reset_user_method" field.
func ResetUserMethodNotNil() predicate.AppControl {
	return predicate.AppControl(sql.FieldNotNull(FieldResetUserMethod))
}

// ResetUserMethodEqualFold applies the EqualFold predicate on the "reset_user_method" field.
func ResetUserMethodEqualFold(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldEqualFold(FieldResetUserMethod, v))
}

// ResetUserMethodContainsFold applies the ContainsFold predicate on the "reset_user_method" field.
func ResetUserMethodContainsFold(v string) predicate.AppControl {
	return predicate.AppControl(sql.FieldContainsFold(FieldResetUserMethod, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AppControl) predicate.AppControl {
	return predicate.AppControl(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AppControl) predicate.AppControl {
	return predicate.AppControl(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AppControl) predicate.AppControl {
	return predicate.AppControl(sql.NotPredicates(p))
}
