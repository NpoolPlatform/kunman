// Code generated by ent, DO NOT EDIT.

package appcontrol

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the appcontrol type in the database.
	Label = "app_control"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldSignupMethods holds the string denoting the signup_methods field in the database.
	FieldSignupMethods = "signup_methods"
	// FieldExternSigninMethods holds the string denoting the extern_signin_methods field in the database.
	FieldExternSigninMethods = "extern_signin_methods"
	// FieldRecaptchaMethod holds the string denoting the recaptcha_method field in the database.
	FieldRecaptchaMethod = "recaptcha_method"
	// FieldKycEnable holds the string denoting the kyc_enable field in the database.
	FieldKycEnable = "kyc_enable"
	// FieldSigninVerifyEnable holds the string denoting the signin_verify_enable field in the database.
	FieldSigninVerifyEnable = "signin_verify_enable"
	// FieldInvitationCodeMust holds the string denoting the invitation_code_must field in the database.
	FieldInvitationCodeMust = "invitation_code_must"
	// FieldCreateInvitationCodeWhen holds the string denoting the create_invitation_code_when field in the database.
	FieldCreateInvitationCodeWhen = "create_invitation_code_when"
	// FieldMaxTypedCouponsPerOrder holds the string denoting the max_typed_coupons_per_order field in the database.
	FieldMaxTypedCouponsPerOrder = "max_typed_coupons_per_order"
	// FieldMaintaining holds the string denoting the maintaining field in the database.
	FieldMaintaining = "maintaining"
	// FieldCouponWithdrawEnable holds the string denoting the coupon_withdraw_enable field in the database.
	FieldCouponWithdrawEnable = "coupon_withdraw_enable"
	// FieldCommitButtonTargets holds the string denoting the commit_button_targets field in the database.
	FieldCommitButtonTargets = "commit_button_targets"
	// FieldResetUserMethod holds the string denoting the reset_user_method field in the database.
	FieldResetUserMethod = "reset_user_method"
	// Table holds the table name of the appcontrol in the database.
	Table = "app_controls"
)

// Columns holds all SQL columns for appcontrol fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldEntID,
	FieldAppID,
	FieldSignupMethods,
	FieldExternSigninMethods,
	FieldRecaptchaMethod,
	FieldKycEnable,
	FieldSigninVerifyEnable,
	FieldInvitationCodeMust,
	FieldCreateInvitationCodeWhen,
	FieldMaxTypedCouponsPerOrder,
	FieldMaintaining,
	FieldCouponWithdrawEnable,
	FieldCommitButtonTargets,
	FieldResetUserMethod,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultAppID holds the default value on creation for the "app_id" field.
	DefaultAppID func() uuid.UUID
	// DefaultSignupMethods holds the default value on creation for the "signup_methods" field.
	DefaultSignupMethods func() []string
	// DefaultExternSigninMethods holds the default value on creation for the "extern_signin_methods" field.
	DefaultExternSigninMethods func() []string
	// DefaultRecaptchaMethod holds the default value on creation for the "recaptcha_method" field.
	DefaultRecaptchaMethod string
	// DefaultKycEnable holds the default value on creation for the "kyc_enable" field.
	DefaultKycEnable bool
	// DefaultSigninVerifyEnable holds the default value on creation for the "signin_verify_enable" field.
	DefaultSigninVerifyEnable bool
	// DefaultInvitationCodeMust holds the default value on creation for the "invitation_code_must" field.
	DefaultInvitationCodeMust bool
	// DefaultCreateInvitationCodeWhen holds the default value on creation for the "create_invitation_code_when" field.
	DefaultCreateInvitationCodeWhen string
	// DefaultMaxTypedCouponsPerOrder holds the default value on creation for the "max_typed_coupons_per_order" field.
	DefaultMaxTypedCouponsPerOrder uint32
	// DefaultMaintaining holds the default value on creation for the "maintaining" field.
	DefaultMaintaining bool
	// DefaultCouponWithdrawEnable holds the default value on creation for the "coupon_withdraw_enable" field.
	DefaultCouponWithdrawEnable bool
	// DefaultCommitButtonTargets holds the default value on creation for the "commit_button_targets" field.
	DefaultCommitButtonTargets func() []string
	// DefaultResetUserMethod holds the default value on creation for the "reset_user_method" field.
	DefaultResetUserMethod string
)

// OrderOption defines the ordering options for the AppControl queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByEntID orders the results by the ent_id field.
func ByEntID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntID, opts...).ToFunc()
}

// ByAppID orders the results by the app_id field.
func ByAppID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAppID, opts...).ToFunc()
}

// ByRecaptchaMethod orders the results by the recaptcha_method field.
func ByRecaptchaMethod(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRecaptchaMethod, opts...).ToFunc()
}

// ByKycEnable orders the results by the kyc_enable field.
func ByKycEnable(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldKycEnable, opts...).ToFunc()
}

// BySigninVerifyEnable orders the results by the signin_verify_enable field.
func BySigninVerifyEnable(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSigninVerifyEnable, opts...).ToFunc()
}

// ByInvitationCodeMust orders the results by the invitation_code_must field.
func ByInvitationCodeMust(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldInvitationCodeMust, opts...).ToFunc()
}

// ByCreateInvitationCodeWhen orders the results by the create_invitation_code_when field.
func ByCreateInvitationCodeWhen(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreateInvitationCodeWhen, opts...).ToFunc()
}

// ByMaxTypedCouponsPerOrder orders the results by the max_typed_coupons_per_order field.
func ByMaxTypedCouponsPerOrder(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMaxTypedCouponsPerOrder, opts...).ToFunc()
}

// ByMaintaining orders the results by the maintaining field.
func ByMaintaining(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMaintaining, opts...).ToFunc()
}

// ByCouponWithdrawEnable orders the results by the coupon_withdraw_enable field.
func ByCouponWithdrawEnable(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCouponWithdrawEnable, opts...).ToFunc()
}

// ByResetUserMethod orders the results by the reset_user_method field.
func ByResetUserMethod(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldResetUserMethod, opts...).ToFunc()
}
