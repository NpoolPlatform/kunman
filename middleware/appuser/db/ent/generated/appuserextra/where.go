// Code generated by ent, DO NOT EDIT.

package appuserextra

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/appuser/db/ent/generated/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldDeletedAt, v))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldEntID, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldAppID, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldUserID, v))
}

// Username applies equality check predicate on the "username" field. It's identical to UsernameEQ.
func Username(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldUsername, v))
}

// FirstName applies equality check predicate on the "first_name" field. It's identical to FirstNameEQ.
func FirstName(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldFirstName, v))
}

// LastName applies equality check predicate on the "last_name" field. It's identical to LastNameEQ.
func LastName(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldLastName, v))
}

// Gender applies equality check predicate on the "gender" field. It's identical to GenderEQ.
func Gender(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldGender, v))
}

// PostalCode applies equality check predicate on the "postal_code" field. It's identical to PostalCodeEQ.
func PostalCode(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldPostalCode, v))
}

// Age applies equality check predicate on the "age" field. It's identical to AgeEQ.
func Age(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldAge, v))
}

// Birthday applies equality check predicate on the "birthday" field. It's identical to BirthdayEQ.
func Birthday(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldBirthday, v))
}

// Avatar applies equality check predicate on the "avatar" field. It's identical to AvatarEQ.
func Avatar(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldAvatar, v))
}

// Organization applies equality check predicate on the "organization" field. It's identical to OrganizationEQ.
func Organization(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldOrganization, v))
}

// IDNumber applies equality check predicate on the "id_number" field. It's identical to IDNumberEQ.
func IDNumber(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldIDNumber, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldDeletedAt, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldEntID, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldAppID, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v uuid.UUID) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldUserID, v))
}

// UsernameEQ applies the EQ predicate on the "username" field.
func UsernameEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldUsername, v))
}

// UsernameNEQ applies the NEQ predicate on the "username" field.
func UsernameNEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldUsername, v))
}

// UsernameIn applies the In predicate on the "username" field.
func UsernameIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldUsername, vs...))
}

// UsernameNotIn applies the NotIn predicate on the "username" field.
func UsernameNotIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldUsername, vs...))
}

// UsernameGT applies the GT predicate on the "username" field.
func UsernameGT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldUsername, v))
}

// UsernameGTE applies the GTE predicate on the "username" field.
func UsernameGTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldUsername, v))
}

// UsernameLT applies the LT predicate on the "username" field.
func UsernameLT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldUsername, v))
}

// UsernameLTE applies the LTE predicate on the "username" field.
func UsernameLTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldUsername, v))
}

// UsernameContains applies the Contains predicate on the "username" field.
func UsernameContains(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContains(FieldUsername, v))
}

// UsernameHasPrefix applies the HasPrefix predicate on the "username" field.
func UsernameHasPrefix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasPrefix(FieldUsername, v))
}

// UsernameHasSuffix applies the HasSuffix predicate on the "username" field.
func UsernameHasSuffix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasSuffix(FieldUsername, v))
}

// UsernameEqualFold applies the EqualFold predicate on the "username" field.
func UsernameEqualFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEqualFold(FieldUsername, v))
}

// UsernameContainsFold applies the ContainsFold predicate on the "username" field.
func UsernameContainsFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContainsFold(FieldUsername, v))
}

// FirstNameEQ applies the EQ predicate on the "first_name" field.
func FirstNameEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldFirstName, v))
}

// FirstNameNEQ applies the NEQ predicate on the "first_name" field.
func FirstNameNEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldFirstName, v))
}

// FirstNameIn applies the In predicate on the "first_name" field.
func FirstNameIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldFirstName, vs...))
}

// FirstNameNotIn applies the NotIn predicate on the "first_name" field.
func FirstNameNotIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldFirstName, vs...))
}

// FirstNameGT applies the GT predicate on the "first_name" field.
func FirstNameGT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldFirstName, v))
}

// FirstNameGTE applies the GTE predicate on the "first_name" field.
func FirstNameGTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldFirstName, v))
}

// FirstNameLT applies the LT predicate on the "first_name" field.
func FirstNameLT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldFirstName, v))
}

// FirstNameLTE applies the LTE predicate on the "first_name" field.
func FirstNameLTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldFirstName, v))
}

// FirstNameContains applies the Contains predicate on the "first_name" field.
func FirstNameContains(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContains(FieldFirstName, v))
}

// FirstNameHasPrefix applies the HasPrefix predicate on the "first_name" field.
func FirstNameHasPrefix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasPrefix(FieldFirstName, v))
}

// FirstNameHasSuffix applies the HasSuffix predicate on the "first_name" field.
func FirstNameHasSuffix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasSuffix(FieldFirstName, v))
}

// FirstNameEqualFold applies the EqualFold predicate on the "first_name" field.
func FirstNameEqualFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEqualFold(FieldFirstName, v))
}

// FirstNameContainsFold applies the ContainsFold predicate on the "first_name" field.
func FirstNameContainsFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContainsFold(FieldFirstName, v))
}

// LastNameEQ applies the EQ predicate on the "last_name" field.
func LastNameEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldLastName, v))
}

// LastNameNEQ applies the NEQ predicate on the "last_name" field.
func LastNameNEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldLastName, v))
}

// LastNameIn applies the In predicate on the "last_name" field.
func LastNameIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldLastName, vs...))
}

// LastNameNotIn applies the NotIn predicate on the "last_name" field.
func LastNameNotIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldLastName, vs...))
}

// LastNameGT applies the GT predicate on the "last_name" field.
func LastNameGT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldLastName, v))
}

// LastNameGTE applies the GTE predicate on the "last_name" field.
func LastNameGTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldLastName, v))
}

// LastNameLT applies the LT predicate on the "last_name" field.
func LastNameLT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldLastName, v))
}

// LastNameLTE applies the LTE predicate on the "last_name" field.
func LastNameLTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldLastName, v))
}

// LastNameContains applies the Contains predicate on the "last_name" field.
func LastNameContains(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContains(FieldLastName, v))
}

// LastNameHasPrefix applies the HasPrefix predicate on the "last_name" field.
func LastNameHasPrefix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasPrefix(FieldLastName, v))
}

// LastNameHasSuffix applies the HasSuffix predicate on the "last_name" field.
func LastNameHasSuffix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasSuffix(FieldLastName, v))
}

// LastNameEqualFold applies the EqualFold predicate on the "last_name" field.
func LastNameEqualFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEqualFold(FieldLastName, v))
}

// LastNameContainsFold applies the ContainsFold predicate on the "last_name" field.
func LastNameContainsFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContainsFold(FieldLastName, v))
}

// GenderEQ applies the EQ predicate on the "gender" field.
func GenderEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldGender, v))
}

// GenderNEQ applies the NEQ predicate on the "gender" field.
func GenderNEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldGender, v))
}

// GenderIn applies the In predicate on the "gender" field.
func GenderIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldGender, vs...))
}

// GenderNotIn applies the NotIn predicate on the "gender" field.
func GenderNotIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldGender, vs...))
}

// GenderGT applies the GT predicate on the "gender" field.
func GenderGT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldGender, v))
}

// GenderGTE applies the GTE predicate on the "gender" field.
func GenderGTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldGender, v))
}

// GenderLT applies the LT predicate on the "gender" field.
func GenderLT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldGender, v))
}

// GenderLTE applies the LTE predicate on the "gender" field.
func GenderLTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldGender, v))
}

// GenderContains applies the Contains predicate on the "gender" field.
func GenderContains(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContains(FieldGender, v))
}

// GenderHasPrefix applies the HasPrefix predicate on the "gender" field.
func GenderHasPrefix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasPrefix(FieldGender, v))
}

// GenderHasSuffix applies the HasSuffix predicate on the "gender" field.
func GenderHasSuffix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasSuffix(FieldGender, v))
}

// GenderEqualFold applies the EqualFold predicate on the "gender" field.
func GenderEqualFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEqualFold(FieldGender, v))
}

// GenderContainsFold applies the ContainsFold predicate on the "gender" field.
func GenderContainsFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContainsFold(FieldGender, v))
}

// PostalCodeEQ applies the EQ predicate on the "postal_code" field.
func PostalCodeEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldPostalCode, v))
}

// PostalCodeNEQ applies the NEQ predicate on the "postal_code" field.
func PostalCodeNEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldPostalCode, v))
}

// PostalCodeIn applies the In predicate on the "postal_code" field.
func PostalCodeIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldPostalCode, vs...))
}

// PostalCodeNotIn applies the NotIn predicate on the "postal_code" field.
func PostalCodeNotIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldPostalCode, vs...))
}

// PostalCodeGT applies the GT predicate on the "postal_code" field.
func PostalCodeGT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldPostalCode, v))
}

// PostalCodeGTE applies the GTE predicate on the "postal_code" field.
func PostalCodeGTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldPostalCode, v))
}

// PostalCodeLT applies the LT predicate on the "postal_code" field.
func PostalCodeLT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldPostalCode, v))
}

// PostalCodeLTE applies the LTE predicate on the "postal_code" field.
func PostalCodeLTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldPostalCode, v))
}

// PostalCodeContains applies the Contains predicate on the "postal_code" field.
func PostalCodeContains(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContains(FieldPostalCode, v))
}

// PostalCodeHasPrefix applies the HasPrefix predicate on the "postal_code" field.
func PostalCodeHasPrefix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasPrefix(FieldPostalCode, v))
}

// PostalCodeHasSuffix applies the HasSuffix predicate on the "postal_code" field.
func PostalCodeHasSuffix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasSuffix(FieldPostalCode, v))
}

// PostalCodeEqualFold applies the EqualFold predicate on the "postal_code" field.
func PostalCodeEqualFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEqualFold(FieldPostalCode, v))
}

// PostalCodeContainsFold applies the ContainsFold predicate on the "postal_code" field.
func PostalCodeContainsFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContainsFold(FieldPostalCode, v))
}

// AgeEQ applies the EQ predicate on the "age" field.
func AgeEQ(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldAge, v))
}

// AgeNEQ applies the NEQ predicate on the "age" field.
func AgeNEQ(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldAge, v))
}

// AgeIn applies the In predicate on the "age" field.
func AgeIn(vs ...uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldAge, vs...))
}

// AgeNotIn applies the NotIn predicate on the "age" field.
func AgeNotIn(vs ...uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldAge, vs...))
}

// AgeGT applies the GT predicate on the "age" field.
func AgeGT(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldAge, v))
}

// AgeGTE applies the GTE predicate on the "age" field.
func AgeGTE(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldAge, v))
}

// AgeLT applies the LT predicate on the "age" field.
func AgeLT(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldAge, v))
}

// AgeLTE applies the LTE predicate on the "age" field.
func AgeLTE(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldAge, v))
}

// BirthdayEQ applies the EQ predicate on the "birthday" field.
func BirthdayEQ(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldBirthday, v))
}

// BirthdayNEQ applies the NEQ predicate on the "birthday" field.
func BirthdayNEQ(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldBirthday, v))
}

// BirthdayIn applies the In predicate on the "birthday" field.
func BirthdayIn(vs ...uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldBirthday, vs...))
}

// BirthdayNotIn applies the NotIn predicate on the "birthday" field.
func BirthdayNotIn(vs ...uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldBirthday, vs...))
}

// BirthdayGT applies the GT predicate on the "birthday" field.
func BirthdayGT(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldBirthday, v))
}

// BirthdayGTE applies the GTE predicate on the "birthday" field.
func BirthdayGTE(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldBirthday, v))
}

// BirthdayLT applies the LT predicate on the "birthday" field.
func BirthdayLT(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldBirthday, v))
}

// BirthdayLTE applies the LTE predicate on the "birthday" field.
func BirthdayLTE(v uint32) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldBirthday, v))
}

// AvatarEQ applies the EQ predicate on the "avatar" field.
func AvatarEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldAvatar, v))
}

// AvatarNEQ applies the NEQ predicate on the "avatar" field.
func AvatarNEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldAvatar, v))
}

// AvatarIn applies the In predicate on the "avatar" field.
func AvatarIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldAvatar, vs...))
}

// AvatarNotIn applies the NotIn predicate on the "avatar" field.
func AvatarNotIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldAvatar, vs...))
}

// AvatarGT applies the GT predicate on the "avatar" field.
func AvatarGT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldAvatar, v))
}

// AvatarGTE applies the GTE predicate on the "avatar" field.
func AvatarGTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldAvatar, v))
}

// AvatarLT applies the LT predicate on the "avatar" field.
func AvatarLT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldAvatar, v))
}

// AvatarLTE applies the LTE predicate on the "avatar" field.
func AvatarLTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldAvatar, v))
}

// AvatarContains applies the Contains predicate on the "avatar" field.
func AvatarContains(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContains(FieldAvatar, v))
}

// AvatarHasPrefix applies the HasPrefix predicate on the "avatar" field.
func AvatarHasPrefix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasPrefix(FieldAvatar, v))
}

// AvatarHasSuffix applies the HasSuffix predicate on the "avatar" field.
func AvatarHasSuffix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasSuffix(FieldAvatar, v))
}

// AvatarEqualFold applies the EqualFold predicate on the "avatar" field.
func AvatarEqualFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEqualFold(FieldAvatar, v))
}

// AvatarContainsFold applies the ContainsFold predicate on the "avatar" field.
func AvatarContainsFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContainsFold(FieldAvatar, v))
}

// OrganizationEQ applies the EQ predicate on the "organization" field.
func OrganizationEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldOrganization, v))
}

// OrganizationNEQ applies the NEQ predicate on the "organization" field.
func OrganizationNEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldOrganization, v))
}

// OrganizationIn applies the In predicate on the "organization" field.
func OrganizationIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldOrganization, vs...))
}

// OrganizationNotIn applies the NotIn predicate on the "organization" field.
func OrganizationNotIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldOrganization, vs...))
}

// OrganizationGT applies the GT predicate on the "organization" field.
func OrganizationGT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldOrganization, v))
}

// OrganizationGTE applies the GTE predicate on the "organization" field.
func OrganizationGTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldOrganization, v))
}

// OrganizationLT applies the LT predicate on the "organization" field.
func OrganizationLT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldOrganization, v))
}

// OrganizationLTE applies the LTE predicate on the "organization" field.
func OrganizationLTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldOrganization, v))
}

// OrganizationContains applies the Contains predicate on the "organization" field.
func OrganizationContains(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContains(FieldOrganization, v))
}

// OrganizationHasPrefix applies the HasPrefix predicate on the "organization" field.
func OrganizationHasPrefix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasPrefix(FieldOrganization, v))
}

// OrganizationHasSuffix applies the HasSuffix predicate on the "organization" field.
func OrganizationHasSuffix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasSuffix(FieldOrganization, v))
}

// OrganizationEqualFold applies the EqualFold predicate on the "organization" field.
func OrganizationEqualFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEqualFold(FieldOrganization, v))
}

// OrganizationContainsFold applies the ContainsFold predicate on the "organization" field.
func OrganizationContainsFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContainsFold(FieldOrganization, v))
}

// IDNumberEQ applies the EQ predicate on the "id_number" field.
func IDNumberEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEQ(FieldIDNumber, v))
}

// IDNumberNEQ applies the NEQ predicate on the "id_number" field.
func IDNumberNEQ(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNEQ(FieldIDNumber, v))
}

// IDNumberIn applies the In predicate on the "id_number" field.
func IDNumberIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldIn(FieldIDNumber, vs...))
}

// IDNumberNotIn applies the NotIn predicate on the "id_number" field.
func IDNumberNotIn(vs ...string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldNotIn(FieldIDNumber, vs...))
}

// IDNumberGT applies the GT predicate on the "id_number" field.
func IDNumberGT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGT(FieldIDNumber, v))
}

// IDNumberGTE applies the GTE predicate on the "id_number" field.
func IDNumberGTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldGTE(FieldIDNumber, v))
}

// IDNumberLT applies the LT predicate on the "id_number" field.
func IDNumberLT(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLT(FieldIDNumber, v))
}

// IDNumberLTE applies the LTE predicate on the "id_number" field.
func IDNumberLTE(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldLTE(FieldIDNumber, v))
}

// IDNumberContains applies the Contains predicate on the "id_number" field.
func IDNumberContains(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContains(FieldIDNumber, v))
}

// IDNumberHasPrefix applies the HasPrefix predicate on the "id_number" field.
func IDNumberHasPrefix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasPrefix(FieldIDNumber, v))
}

// IDNumberHasSuffix applies the HasSuffix predicate on the "id_number" field.
func IDNumberHasSuffix(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldHasSuffix(FieldIDNumber, v))
}

// IDNumberEqualFold applies the EqualFold predicate on the "id_number" field.
func IDNumberEqualFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldEqualFold(FieldIDNumber, v))
}

// IDNumberContainsFold applies the ContainsFold predicate on the "id_number" field.
func IDNumberContainsFold(v string) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.FieldContainsFold(FieldIDNumber, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AppUserExtra) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AppUserExtra) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AppUserExtra) predicate.AppUserExtra {
	return predicate.AppUserExtra(sql.NotPredicates(p))
}
