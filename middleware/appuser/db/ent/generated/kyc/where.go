// Code generated by ent, DO NOT EDIT.

package kyc

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/appuser/db/ent/generated/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldDeletedAt, v))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldEntID, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldAppID, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldUserID, v))
}

// DocumentType applies equality check predicate on the "document_type" field. It's identical to DocumentTypeEQ.
func DocumentType(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldDocumentType, v))
}

// IDNumber applies equality check predicate on the "id_number" field. It's identical to IDNumberEQ.
func IDNumber(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldIDNumber, v))
}

// FrontImg applies equality check predicate on the "front_img" field. It's identical to FrontImgEQ.
func FrontImg(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldFrontImg, v))
}

// BackImg applies equality check predicate on the "back_img" field. It's identical to BackImgEQ.
func BackImg(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldBackImg, v))
}

// SelfieImg applies equality check predicate on the "selfie_img" field. It's identical to SelfieImgEQ.
func SelfieImg(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldSelfieImg, v))
}

// EntityType applies equality check predicate on the "entity_type" field. It's identical to EntityTypeEQ.
func EntityType(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldEntityType, v))
}

// ReviewID applies equality check predicate on the "review_id" field. It's identical to ReviewIDEQ.
func ReviewID(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldReviewID, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldState, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldDeletedAt, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldEntID, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldAppID, v))
}

// AppIDIsNil applies the IsNil predicate on the "app_id" field.
func AppIDIsNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldIsNull(FieldAppID))
}

// AppIDNotNil applies the NotNil predicate on the "app_id" field.
func AppIDNotNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldNotNull(FieldAppID))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldUserID, v))
}

// UserIDIsNil applies the IsNil predicate on the "user_id" field.
func UserIDIsNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldIsNull(FieldUserID))
}

// UserIDNotNil applies the NotNil predicate on the "user_id" field.
func UserIDNotNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldNotNull(FieldUserID))
}

// DocumentTypeEQ applies the EQ predicate on the "document_type" field.
func DocumentTypeEQ(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldDocumentType, v))
}

// DocumentTypeNEQ applies the NEQ predicate on the "document_type" field.
func DocumentTypeNEQ(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldDocumentType, v))
}

// DocumentTypeIn applies the In predicate on the "document_type" field.
func DocumentTypeIn(vs ...string) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldDocumentType, vs...))
}

// DocumentTypeNotIn applies the NotIn predicate on the "document_type" field.
func DocumentTypeNotIn(vs ...string) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldDocumentType, vs...))
}

// DocumentTypeGT applies the GT predicate on the "document_type" field.
func DocumentTypeGT(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldDocumentType, v))
}

// DocumentTypeGTE applies the GTE predicate on the "document_type" field.
func DocumentTypeGTE(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldDocumentType, v))
}

// DocumentTypeLT applies the LT predicate on the "document_type" field.
func DocumentTypeLT(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldDocumentType, v))
}

// DocumentTypeLTE applies the LTE predicate on the "document_type" field.
func DocumentTypeLTE(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldDocumentType, v))
}

// DocumentTypeContains applies the Contains predicate on the "document_type" field.
func DocumentTypeContains(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldContains(FieldDocumentType, v))
}

// DocumentTypeHasPrefix applies the HasPrefix predicate on the "document_type" field.
func DocumentTypeHasPrefix(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldHasPrefix(FieldDocumentType, v))
}

// DocumentTypeHasSuffix applies the HasSuffix predicate on the "document_type" field.
func DocumentTypeHasSuffix(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldHasSuffix(FieldDocumentType, v))
}

// DocumentTypeIsNil applies the IsNil predicate on the "document_type" field.
func DocumentTypeIsNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldIsNull(FieldDocumentType))
}

// DocumentTypeNotNil applies the NotNil predicate on the "document_type" field.
func DocumentTypeNotNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldNotNull(FieldDocumentType))
}

// DocumentTypeEqualFold applies the EqualFold predicate on the "document_type" field.
func DocumentTypeEqualFold(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEqualFold(FieldDocumentType, v))
}

// DocumentTypeContainsFold applies the ContainsFold predicate on the "document_type" field.
func DocumentTypeContainsFold(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldContainsFold(FieldDocumentType, v))
}

// IDNumberEQ applies the EQ predicate on the "id_number" field.
func IDNumberEQ(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldIDNumber, v))
}

// IDNumberNEQ applies the NEQ predicate on the "id_number" field.
func IDNumberNEQ(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldIDNumber, v))
}

// IDNumberIn applies the In predicate on the "id_number" field.
func IDNumberIn(vs ...string) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldIDNumber, vs...))
}

// IDNumberNotIn applies the NotIn predicate on the "id_number" field.
func IDNumberNotIn(vs ...string) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldIDNumber, vs...))
}

// IDNumberGT applies the GT predicate on the "id_number" field.
func IDNumberGT(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldIDNumber, v))
}

// IDNumberGTE applies the GTE predicate on the "id_number" field.
func IDNumberGTE(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldIDNumber, v))
}

// IDNumberLT applies the LT predicate on the "id_number" field.
func IDNumberLT(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldIDNumber, v))
}

// IDNumberLTE applies the LTE predicate on the "id_number" field.
func IDNumberLTE(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldIDNumber, v))
}

// IDNumberContains applies the Contains predicate on the "id_number" field.
func IDNumberContains(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldContains(FieldIDNumber, v))
}

// IDNumberHasPrefix applies the HasPrefix predicate on the "id_number" field.
func IDNumberHasPrefix(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldHasPrefix(FieldIDNumber, v))
}

// IDNumberHasSuffix applies the HasSuffix predicate on the "id_number" field.
func IDNumberHasSuffix(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldHasSuffix(FieldIDNumber, v))
}

// IDNumberIsNil applies the IsNil predicate on the "id_number" field.
func IDNumberIsNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldIsNull(FieldIDNumber))
}

// IDNumberNotNil applies the NotNil predicate on the "id_number" field.
func IDNumberNotNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldNotNull(FieldIDNumber))
}

// IDNumberEqualFold applies the EqualFold predicate on the "id_number" field.
func IDNumberEqualFold(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEqualFold(FieldIDNumber, v))
}

// IDNumberContainsFold applies the ContainsFold predicate on the "id_number" field.
func IDNumberContainsFold(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldContainsFold(FieldIDNumber, v))
}

// FrontImgEQ applies the EQ predicate on the "front_img" field.
func FrontImgEQ(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldFrontImg, v))
}

// FrontImgNEQ applies the NEQ predicate on the "front_img" field.
func FrontImgNEQ(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldFrontImg, v))
}

// FrontImgIn applies the In predicate on the "front_img" field.
func FrontImgIn(vs ...string) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldFrontImg, vs...))
}

// FrontImgNotIn applies the NotIn predicate on the "front_img" field.
func FrontImgNotIn(vs ...string) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldFrontImg, vs...))
}

// FrontImgGT applies the GT predicate on the "front_img" field.
func FrontImgGT(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldFrontImg, v))
}

// FrontImgGTE applies the GTE predicate on the "front_img" field.
func FrontImgGTE(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldFrontImg, v))
}

// FrontImgLT applies the LT predicate on the "front_img" field.
func FrontImgLT(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldFrontImg, v))
}

// FrontImgLTE applies the LTE predicate on the "front_img" field.
func FrontImgLTE(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldFrontImg, v))
}

// FrontImgContains applies the Contains predicate on the "front_img" field.
func FrontImgContains(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldContains(FieldFrontImg, v))
}

// FrontImgHasPrefix applies the HasPrefix predicate on the "front_img" field.
func FrontImgHasPrefix(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldHasPrefix(FieldFrontImg, v))
}

// FrontImgHasSuffix applies the HasSuffix predicate on the "front_img" field.
func FrontImgHasSuffix(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldHasSuffix(FieldFrontImg, v))
}

// FrontImgIsNil applies the IsNil predicate on the "front_img" field.
func FrontImgIsNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldIsNull(FieldFrontImg))
}

// FrontImgNotNil applies the NotNil predicate on the "front_img" field.
func FrontImgNotNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldNotNull(FieldFrontImg))
}

// FrontImgEqualFold applies the EqualFold predicate on the "front_img" field.
func FrontImgEqualFold(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEqualFold(FieldFrontImg, v))
}

// FrontImgContainsFold applies the ContainsFold predicate on the "front_img" field.
func FrontImgContainsFold(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldContainsFold(FieldFrontImg, v))
}

// BackImgEQ applies the EQ predicate on the "back_img" field.
func BackImgEQ(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldBackImg, v))
}

// BackImgNEQ applies the NEQ predicate on the "back_img" field.
func BackImgNEQ(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldBackImg, v))
}

// BackImgIn applies the In predicate on the "back_img" field.
func BackImgIn(vs ...string) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldBackImg, vs...))
}

// BackImgNotIn applies the NotIn predicate on the "back_img" field.
func BackImgNotIn(vs ...string) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldBackImg, vs...))
}

// BackImgGT applies the GT predicate on the "back_img" field.
func BackImgGT(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldBackImg, v))
}

// BackImgGTE applies the GTE predicate on the "back_img" field.
func BackImgGTE(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldBackImg, v))
}

// BackImgLT applies the LT predicate on the "back_img" field.
func BackImgLT(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldBackImg, v))
}

// BackImgLTE applies the LTE predicate on the "back_img" field.
func BackImgLTE(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldBackImg, v))
}

// BackImgContains applies the Contains predicate on the "back_img" field.
func BackImgContains(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldContains(FieldBackImg, v))
}

// BackImgHasPrefix applies the HasPrefix predicate on the "back_img" field.
func BackImgHasPrefix(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldHasPrefix(FieldBackImg, v))
}

// BackImgHasSuffix applies the HasSuffix predicate on the "back_img" field.
func BackImgHasSuffix(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldHasSuffix(FieldBackImg, v))
}

// BackImgIsNil applies the IsNil predicate on the "back_img" field.
func BackImgIsNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldIsNull(FieldBackImg))
}

// BackImgNotNil applies the NotNil predicate on the "back_img" field.
func BackImgNotNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldNotNull(FieldBackImg))
}

// BackImgEqualFold applies the EqualFold predicate on the "back_img" field.
func BackImgEqualFold(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEqualFold(FieldBackImg, v))
}

// BackImgContainsFold applies the ContainsFold predicate on the "back_img" field.
func BackImgContainsFold(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldContainsFold(FieldBackImg, v))
}

// SelfieImgEQ applies the EQ predicate on the "selfie_img" field.
func SelfieImgEQ(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldSelfieImg, v))
}

// SelfieImgNEQ applies the NEQ predicate on the "selfie_img" field.
func SelfieImgNEQ(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldSelfieImg, v))
}

// SelfieImgIn applies the In predicate on the "selfie_img" field.
func SelfieImgIn(vs ...string) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldSelfieImg, vs...))
}

// SelfieImgNotIn applies the NotIn predicate on the "selfie_img" field.
func SelfieImgNotIn(vs ...string) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldSelfieImg, vs...))
}

// SelfieImgGT applies the GT predicate on the "selfie_img" field.
func SelfieImgGT(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldSelfieImg, v))
}

// SelfieImgGTE applies the GTE predicate on the "selfie_img" field.
func SelfieImgGTE(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldSelfieImg, v))
}

// SelfieImgLT applies the LT predicate on the "selfie_img" field.
func SelfieImgLT(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldSelfieImg, v))
}

// SelfieImgLTE applies the LTE predicate on the "selfie_img" field.
func SelfieImgLTE(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldSelfieImg, v))
}

// SelfieImgContains applies the Contains predicate on the "selfie_img" field.
func SelfieImgContains(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldContains(FieldSelfieImg, v))
}

// SelfieImgHasPrefix applies the HasPrefix predicate on the "selfie_img" field.
func SelfieImgHasPrefix(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldHasPrefix(FieldSelfieImg, v))
}

// SelfieImgHasSuffix applies the HasSuffix predicate on the "selfie_img" field.
func SelfieImgHasSuffix(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldHasSuffix(FieldSelfieImg, v))
}

// SelfieImgIsNil applies the IsNil predicate on the "selfie_img" field.
func SelfieImgIsNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldIsNull(FieldSelfieImg))
}

// SelfieImgNotNil applies the NotNil predicate on the "selfie_img" field.
func SelfieImgNotNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldNotNull(FieldSelfieImg))
}

// SelfieImgEqualFold applies the EqualFold predicate on the "selfie_img" field.
func SelfieImgEqualFold(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEqualFold(FieldSelfieImg, v))
}

// SelfieImgContainsFold applies the ContainsFold predicate on the "selfie_img" field.
func SelfieImgContainsFold(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldContainsFold(FieldSelfieImg, v))
}

// EntityTypeEQ applies the EQ predicate on the "entity_type" field.
func EntityTypeEQ(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldEntityType, v))
}

// EntityTypeNEQ applies the NEQ predicate on the "entity_type" field.
func EntityTypeNEQ(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldEntityType, v))
}

// EntityTypeIn applies the In predicate on the "entity_type" field.
func EntityTypeIn(vs ...string) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldEntityType, vs...))
}

// EntityTypeNotIn applies the NotIn predicate on the "entity_type" field.
func EntityTypeNotIn(vs ...string) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldEntityType, vs...))
}

// EntityTypeGT applies the GT predicate on the "entity_type" field.
func EntityTypeGT(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldEntityType, v))
}

// EntityTypeGTE applies the GTE predicate on the "entity_type" field.
func EntityTypeGTE(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldEntityType, v))
}

// EntityTypeLT applies the LT predicate on the "entity_type" field.
func EntityTypeLT(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldEntityType, v))
}

// EntityTypeLTE applies the LTE predicate on the "entity_type" field.
func EntityTypeLTE(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldEntityType, v))
}

// EntityTypeContains applies the Contains predicate on the "entity_type" field.
func EntityTypeContains(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldContains(FieldEntityType, v))
}

// EntityTypeHasPrefix applies the HasPrefix predicate on the "entity_type" field.
func EntityTypeHasPrefix(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldHasPrefix(FieldEntityType, v))
}

// EntityTypeHasSuffix applies the HasSuffix predicate on the "entity_type" field.
func EntityTypeHasSuffix(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldHasSuffix(FieldEntityType, v))
}

// EntityTypeIsNil applies the IsNil predicate on the "entity_type" field.
func EntityTypeIsNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldIsNull(FieldEntityType))
}

// EntityTypeNotNil applies the NotNil predicate on the "entity_type" field.
func EntityTypeNotNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldNotNull(FieldEntityType))
}

// EntityTypeEqualFold applies the EqualFold predicate on the "entity_type" field.
func EntityTypeEqualFold(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEqualFold(FieldEntityType, v))
}

// EntityTypeContainsFold applies the ContainsFold predicate on the "entity_type" field.
func EntityTypeContainsFold(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldContainsFold(FieldEntityType, v))
}

// ReviewIDEQ applies the EQ predicate on the "review_id" field.
func ReviewIDEQ(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldReviewID, v))
}

// ReviewIDNEQ applies the NEQ predicate on the "review_id" field.
func ReviewIDNEQ(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldReviewID, v))
}

// ReviewIDIn applies the In predicate on the "review_id" field.
func ReviewIDIn(vs ...uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldReviewID, vs...))
}

// ReviewIDNotIn applies the NotIn predicate on the "review_id" field.
func ReviewIDNotIn(vs ...uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldReviewID, vs...))
}

// ReviewIDGT applies the GT predicate on the "review_id" field.
func ReviewIDGT(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldReviewID, v))
}

// ReviewIDGTE applies the GTE predicate on the "review_id" field.
func ReviewIDGTE(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldReviewID, v))
}

// ReviewIDLT applies the LT predicate on the "review_id" field.
func ReviewIDLT(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldReviewID, v))
}

// ReviewIDLTE applies the LTE predicate on the "review_id" field.
func ReviewIDLTE(v uuid.UUID) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldReviewID, v))
}

// ReviewIDIsNil applies the IsNil predicate on the "review_id" field.
func ReviewIDIsNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldIsNull(FieldReviewID))
}

// ReviewIDNotNil applies the NotNil predicate on the "review_id" field.
func ReviewIDNotNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldNotNull(FieldReviewID))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...string) predicate.Kyc {
	return predicate.Kyc(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...string) predicate.Kyc {
	return predicate.Kyc(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldLTE(FieldState, v))
}

// StateContains applies the Contains predicate on the "state" field.
func StateContains(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldContains(FieldState, v))
}

// StateHasPrefix applies the HasPrefix predicate on the "state" field.
func StateHasPrefix(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldHasPrefix(FieldState, v))
}

// StateHasSuffix applies the HasSuffix predicate on the "state" field.
func StateHasSuffix(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldHasSuffix(FieldState, v))
}

// StateIsNil applies the IsNil predicate on the "state" field.
func StateIsNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldIsNull(FieldState))
}

// StateNotNil applies the NotNil predicate on the "state" field.
func StateNotNil() predicate.Kyc {
	return predicate.Kyc(sql.FieldNotNull(FieldState))
}

// StateEqualFold applies the EqualFold predicate on the "state" field.
func StateEqualFold(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldEqualFold(FieldState, v))
}

// StateContainsFold applies the ContainsFold predicate on the "state" field.
func StateContainsFold(v string) predicate.Kyc {
	return predicate.Kyc(sql.FieldContainsFold(FieldState, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Kyc) predicate.Kyc {
	return predicate.Kyc(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Kyc) predicate.Kyc {
	return predicate.Kyc(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Kyc) predicate.Kyc {
	return predicate.Kyc(sql.NotPredicates(p))
}
