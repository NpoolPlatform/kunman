// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AppConfigsColumns holds the columns for the "app_configs" table.
	AppConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "enable_simulate_order", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "simulate_order_coupon_mode", Type: field.TypeString, Nullable: true, Default: "WithoutCoupon"},
		{Name: "simulate_order_coupon_probability", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "simulate_order_cashable_profit_probability", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "max_unpaid_orders", Type: field.TypeUint32, Nullable: true, Default: 5},
		{Name: "max_typed_coupons_per_order", Type: field.TypeUint32, Nullable: true, Default: 1},
	}
	// AppConfigsTable holds the schema information for the "app_configs" table.
	AppConfigsTable = &schema.Table{
		Name:       "app_configs",
		Columns:    AppConfigsColumns,
		PrimaryKey: []*schema.Column{AppConfigsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "appconfig_ent_id",
				Unique:  true,
				Columns: []*schema.Column{AppConfigsColumns[1]},
			},
		},
	}
	// CompensatesColumns holds the columns for the "compensates" table.
	CompensatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "compensate_from_id", Type: field.TypeUUID, Nullable: true},
		{Name: "compensate_type", Type: field.TypeString, Nullable: true, Default: "DefaultCompensateType"},
		{Name: "compensate_seconds", Type: field.TypeUint32, Nullable: true, Default: 0},
	}
	// CompensatesTable holds the schema information for the "compensates" table.
	CompensatesTable = &schema.Table{
		Name:       "compensates",
		Columns:    CompensatesColumns,
		PrimaryKey: []*schema.Column{CompensatesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "compensate_ent_id",
				Unique:  true,
				Columns: []*schema.Column{CompensatesColumns[1]},
			},
			{
				Name:    "compensate_order_id",
				Unique:  false,
				Columns: []*schema.Column{CompensatesColumns[2]},
			},
		},
	}
	// FeeOrdersColumns holds the columns for the "fee_orders" table.
	FeeOrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "good_value_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "payment_amount_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "discount_amount_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "promotion_id", Type: field.TypeUUID, Nullable: true},
		{Name: "duration_seconds", Type: field.TypeUint32, Nullable: true, Default: 0},
	}
	// FeeOrdersTable holds the schema information for the "fee_orders" table.
	FeeOrdersTable = &schema.Table{
		Name:       "fee_orders",
		Columns:    FeeOrdersColumns,
		PrimaryKey: []*schema.Column{FeeOrdersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "feeorder_ent_id",
				Unique:  true,
				Columns: []*schema.Column{FeeOrdersColumns[1]},
			},
			{
				Name:    "feeorder_order_id",
				Unique:  false,
				Columns: []*schema.Column{FeeOrdersColumns[2]},
			},
		},
	}
	// FeeOrderStatesColumns holds the columns for the "fee_order_states" table.
	FeeOrderStatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "payment_id", Type: field.TypeUUID, Nullable: true},
		{Name: "paid_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "user_set_paid", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "user_set_canceled", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "admin_set_canceled", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "payment_state", Type: field.TypeString, Nullable: true, Default: "PaymentStateWait"},
		{Name: "cancel_state", Type: field.TypeString, Nullable: true, Default: "DefaultOrderState"},
		{Name: "canceled_at", Type: field.TypeUint32, Nullable: true, Default: 0},
	}
	// FeeOrderStatesTable holds the schema information for the "fee_order_states" table.
	FeeOrderStatesTable = &schema.Table{
		Name:       "fee_order_states",
		Columns:    FeeOrderStatesColumns,
		PrimaryKey: []*schema.Column{FeeOrderStatesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "feeorderstate_ent_id",
				Unique:  true,
				Columns: []*schema.Column{FeeOrderStatesColumns[1]},
			},
			{
				Name:    "feeorderstate_order_id",
				Unique:  false,
				Columns: []*schema.Column{FeeOrderStatesColumns[2]},
			},
		},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "good_id", Type: field.TypeUUID},
		{Name: "app_good_id", Type: field.TypeUUID},
		{Name: "payment_id", Type: field.TypeUUID, Nullable: true},
		{Name: "parent_order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "units_v1", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "good_value", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "good_value_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "payment_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "discount_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "promotion_id", Type: field.TypeUUID, Nullable: true},
		{Name: "duration", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "order_type", Type: field.TypeString, Nullable: true, Default: "Normal"},
		{Name: "investment_type", Type: field.TypeString, Nullable: true, Default: "FullPayment"},
		{Name: "coupon_ids", Type: field.TypeJSON, Nullable: true},
		{Name: "payment_type", Type: field.TypeString, Nullable: true, Default: "PayWithBalanceOnly"},
		{Name: "coin_type_id", Type: field.TypeUUID},
		{Name: "payment_coin_type_id", Type: field.TypeUUID, Nullable: true},
		{Name: "transfer_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "balance_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37, 18)"}},
		{Name: "coin_usd_currency", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37, 18)"}},
		{Name: "local_coin_usd_currency", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37, 18)"}},
		{Name: "live_coin_usd_currency", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37, 18)"}},
		{Name: "simulate", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "create_method", Type: field.TypeString, Nullable: true, Default: "OrderCreatedByPurchase"},
		{Name: "multi_payment_coins", Type: field.TypeBool, Nullable: true, Default: false},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "order_ent_id",
				Unique:  true,
				Columns: []*schema.Column{OrdersColumns[1]},
			},
			{
				Name:    "order_app_id_user_id_good_id_app_good_id",
				Unique:  false,
				Columns: []*schema.Column{OrdersColumns[2], OrdersColumns[3], OrdersColumns[4], OrdersColumns[5]},
			},
		},
	}
	// OrderBasesColumns holds the columns for the "order_bases" table.
	OrderBasesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "app_good_id", Type: field.TypeUUID, Nullable: true},
		{Name: "good_type", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "parent_order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "order_type", Type: field.TypeString, Nullable: true, Default: "Normal"},
		{Name: "create_method", Type: field.TypeString, Nullable: true, Default: "OrderCreatedByPurchase"},
		{Name: "simulate", Type: field.TypeBool, Nullable: true, Default: false},
	}
	// OrderBasesTable holds the schema information for the "order_bases" table.
	OrderBasesTable = &schema.Table{
		Name:       "order_bases",
		Columns:    OrderBasesColumns,
		PrimaryKey: []*schema.Column{OrderBasesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "orderbase_ent_id",
				Unique:  true,
				Columns: []*schema.Column{OrderBasesColumns[1]},
			},
			{
				Name:    "orderbase_user_id_app_good_id",
				Unique:  false,
				Columns: []*schema.Column{OrderBasesColumns[3], OrderBasesColumns[5]},
			},
		},
	}
	// OrderCouponsColumns holds the columns for the "order_coupons" table.
	OrderCouponsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coupon_id", Type: field.TypeUUID, Nullable: true},
	}
	// OrderCouponsTable holds the schema information for the "order_coupons" table.
	OrderCouponsTable = &schema.Table{
		Name:       "order_coupons",
		Columns:    OrderCouponsColumns,
		PrimaryKey: []*schema.Column{OrderCouponsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "ordercoupon_ent_id",
				Unique:  true,
				Columns: []*schema.Column{OrderCouponsColumns[1]},
			},
			{
				Name:    "ordercoupon_order_id",
				Unique:  false,
				Columns: []*schema.Column{OrderCouponsColumns[2]},
			},
		},
	}
	// OrderLocksColumns holds the columns for the "order_locks" table.
	OrderLocksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "lock_type", Type: field.TypeString, Nullable: true, Default: "DefaultOrderLockType"},
	}
	// OrderLocksTable holds the schema information for the "order_locks" table.
	OrderLocksTable = &schema.Table{
		Name:       "order_locks",
		Columns:    OrderLocksColumns,
		PrimaryKey: []*schema.Column{OrderLocksColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "orderlock_ent_id",
				Unique:  true,
				Columns: []*schema.Column{OrderLocksColumns[1]},
			},
			{
				Name:    "orderlock_order_id",
				Unique:  false,
				Columns: []*schema.Column{OrderLocksColumns[2]},
			},
		},
	}
	// OrderStatesColumns holds the columns for the "order_states" table.
	OrderStatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID},
		{Name: "order_state", Type: field.TypeString, Nullable: true, Default: "OrderStateCreated"},
		{Name: "cancel_state", Type: field.TypeString, Nullable: true, Default: "DefaultOrderState"},
		{Name: "start_mode", Type: field.TypeString, Nullable: true, Default: "OrderStartConfirmed"},
		{Name: "start_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "end_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "paid_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "last_benefit_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "benefit_state", Type: field.TypeString, Nullable: true, Default: "BenefitWait"},
		{Name: "user_set_paid", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "user_set_canceled", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "admin_set_canceled", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "payment_transaction_id", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "payment_finish_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "payment_state", Type: field.TypeString, Nullable: true, Default: "PaymentStateWait"},
		{Name: "outofgas_hours", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "compensate_hours", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "renew_state", Type: field.TypeString, Nullable: true, Default: "OrderRenewWait"},
		{Name: "renew_notify_at", Type: field.TypeUint32, Nullable: true, Default: 0},
	}
	// OrderStatesTable holds the schema information for the "order_states" table.
	OrderStatesTable = &schema.Table{
		Name:       "order_states",
		Columns:    OrderStatesColumns,
		PrimaryKey: []*schema.Column{OrderStatesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "orderstate_ent_id",
				Unique:  true,
				Columns: []*schema.Column{OrderStatesColumns[1]},
			},
			{
				Name:    "orderstate_order_id",
				Unique:  false,
				Columns: []*schema.Column{OrderStatesColumns[2]},
			},
		},
	}
	// OrderStateBasesColumns holds the columns for the "order_state_bases" table.
	OrderStateBasesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "order_state", Type: field.TypeString, Nullable: true, Default: "OrderStateCreated"},
		{Name: "start_mode", Type: field.TypeString, Nullable: true, Default: "OrderStartConfirmed"},
		{Name: "start_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "last_benefit_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "benefit_state", Type: field.TypeString, Nullable: true, Default: "BenefitWait"},
		{Name: "payment_type", Type: field.TypeString, Nullable: true, Default: "PayWithBalanceOnly"},
	}
	// OrderStateBasesTable holds the schema information for the "order_state_bases" table.
	OrderStateBasesTable = &schema.Table{
		Name:       "order_state_bases",
		Columns:    OrderStateBasesColumns,
		PrimaryKey: []*schema.Column{OrderStateBasesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "orderstatebase_ent_id",
				Unique:  true,
				Columns: []*schema.Column{OrderStateBasesColumns[1]},
			},
			{
				Name:    "orderstatebase_order_id",
				Unique:  false,
				Columns: []*schema.Column{OrderStateBasesColumns[2]},
			},
		},
	}
	// OutOfGasColumns holds the columns for the "out_of_gas" table.
	OutOfGasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "start_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "end_at", Type: field.TypeUint32, Nullable: true, Default: 0},
	}
	// OutOfGasTable holds the schema information for the "out_of_gas" table.
	OutOfGasTable = &schema.Table{
		Name:       "out_of_gas",
		Columns:    OutOfGasColumns,
		PrimaryKey: []*schema.Column{OutOfGasColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "outofgas_ent_id",
				Unique:  true,
				Columns: []*schema.Column{OutOfGasColumns[1]},
			},
			{
				Name:    "outofgas_order_id",
				Unique:  false,
				Columns: []*schema.Column{OutOfGasColumns[2]},
			},
		},
	}
	// PaymentsColumns holds the columns for the "payments" table.
	PaymentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "app_id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "good_id", Type: field.TypeUUID},
		{Name: "order_id", Type: field.TypeUUID},
		{Name: "account_id", Type: field.TypeUUID},
		{Name: "coin_type_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coin_info_id", Type: field.TypeUUID, Nullable: true},
		{Name: "start_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
	}
	// PaymentsTable holds the schema information for the "payments" table.
	PaymentsTable = &schema.Table{
		Name:       "payments",
		Columns:    PaymentsColumns,
		PrimaryKey: []*schema.Column{PaymentsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "payment_ent_id",
				Unique:  true,
				Columns: []*schema.Column{PaymentsColumns[1]},
			},
			{
				Name:    "payment_order_id",
				Unique:  false,
				Columns: []*schema.Column{PaymentsColumns[5]},
			},
		},
	}
	// PaymentBalancesColumns holds the columns for the "payment_balances" table.
	PaymentBalancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "payment_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coin_type_id", Type: field.TypeUUID, Nullable: true},
		{Name: "amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "coin_usd_currency", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37, 18)"}},
		{Name: "local_coin_usd_currency", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37, 18)"}},
		{Name: "live_coin_usd_currency", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37, 18)"}},
	}
	// PaymentBalancesTable holds the schema information for the "payment_balances" table.
	PaymentBalancesTable = &schema.Table{
		Name:       "payment_balances",
		Columns:    PaymentBalancesColumns,
		PrimaryKey: []*schema.Column{PaymentBalancesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "paymentbalance_ent_id",
				Unique:  true,
				Columns: []*schema.Column{PaymentBalancesColumns[1]},
			},
			{
				Name:    "paymentbalance_payment_id",
				Unique:  false,
				Columns: []*schema.Column{PaymentBalancesColumns[2]},
			},
		},
	}
	// PaymentBalanceLocksColumns holds the columns for the "payment_balance_locks" table.
	PaymentBalanceLocksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "payment_id", Type: field.TypeUUID, Nullable: true},
		{Name: "ledger_lock_id", Type: field.TypeUUID, Nullable: true},
	}
	// PaymentBalanceLocksTable holds the schema information for the "payment_balance_locks" table.
	PaymentBalanceLocksTable = &schema.Table{
		Name:       "payment_balance_locks",
		Columns:    PaymentBalanceLocksColumns,
		PrimaryKey: []*schema.Column{PaymentBalanceLocksColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "paymentbalancelock_ent_id",
				Unique:  true,
				Columns: []*schema.Column{PaymentBalanceLocksColumns[1]},
			},
			{
				Name:    "paymentbalancelock_payment_id",
				Unique:  false,
				Columns: []*schema.Column{PaymentBalanceLocksColumns[2]},
			},
		},
	}
	// PaymentBasesColumns holds the columns for the "payment_bases" table.
	PaymentBasesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "obselete_state", Type: field.TypeString, Nullable: true, Default: "PaymentObseleteNone"},
	}
	// PaymentBasesTable holds the schema information for the "payment_bases" table.
	PaymentBasesTable = &schema.Table{
		Name:       "payment_bases",
		Columns:    PaymentBasesColumns,
		PrimaryKey: []*schema.Column{PaymentBasesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "paymentbase_ent_id",
				Unique:  true,
				Columns: []*schema.Column{PaymentBasesColumns[1]},
			},
			{
				Name:    "paymentbase_order_id",
				Unique:  false,
				Columns: []*schema.Column{PaymentBasesColumns[2]},
			},
		},
	}
	// PaymentContractsColumns holds the columns for the "payment_contracts" table.
	PaymentContractsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coin_type_id", Type: field.TypeUUID, Nullable: true},
		{Name: "amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
	}
	// PaymentContractsTable holds the schema information for the "payment_contracts" table.
	PaymentContractsTable = &schema.Table{
		Name:       "payment_contracts",
		Columns:    PaymentContractsColumns,
		PrimaryKey: []*schema.Column{PaymentContractsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "paymentcontract_ent_id",
				Unique:  true,
				Columns: []*schema.Column{PaymentContractsColumns[1]},
			},
			{
				Name:    "paymentcontract_order_id",
				Unique:  false,
				Columns: []*schema.Column{PaymentContractsColumns[2]},
			},
		},
	}
	// PaymentTransfersColumns holds the columns for the "payment_transfers" table.
	PaymentTransfersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "payment_id", Type: field.TypeUUID, Nullable: true},
		{Name: "coin_type_id", Type: field.TypeUUID, Nullable: true},
		{Name: "account_id", Type: field.TypeUUID, Nullable: true},
		{Name: "amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "start_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "finish_amount", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "coin_usd_currency", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37, 18)"}},
		{Name: "local_coin_usd_currency", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37, 18)"}},
		{Name: "live_coin_usd_currency", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37, 18)"}},
	}
	// PaymentTransfersTable holds the schema information for the "payment_transfers" table.
	PaymentTransfersTable = &schema.Table{
		Name:       "payment_transfers",
		Columns:    PaymentTransfersColumns,
		PrimaryKey: []*schema.Column{PaymentTransfersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "paymenttransfer_ent_id",
				Unique:  true,
				Columns: []*schema.Column{PaymentTransfersColumns[1]},
			},
			{
				Name:    "paymenttransfer_payment_id",
				Unique:  false,
				Columns: []*schema.Column{PaymentTransfersColumns[2]},
			},
		},
	}
	// PoolOrderUsersColumns holds the columns for the "pool_order_users" table.
	PoolOrderUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID},
		{Name: "pool_order_user_id", Type: field.TypeUUID},
	}
	// PoolOrderUsersTable holds the schema information for the "pool_order_users" table.
	PoolOrderUsersTable = &schema.Table{
		Name:       "pool_order_users",
		Columns:    PoolOrderUsersColumns,
		PrimaryKey: []*schema.Column{PoolOrderUsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "poolorderuser_ent_id",
				Unique:  true,
				Columns: []*schema.Column{PoolOrderUsersColumns[1]},
			},
			{
				Name:    "poolorderuser_order_id",
				Unique:  false,
				Columns: []*schema.Column{PoolOrderUsersColumns[2]},
			},
		},
	}
	// PowerRentalsColumns holds the columns for the "power_rentals" table.
	PowerRentalsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "app_good_stock_id", Type: field.TypeUUID, Nullable: true},
		{Name: "units", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "good_value_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "payment_amount_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "discount_amount_usd", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"mysql": "decimal(37,18)"}},
		{Name: "promotion_id", Type: field.TypeUUID, Nullable: true},
		{Name: "investment_type", Type: field.TypeString, Nullable: true, Default: "FullPayment"},
		{Name: "good_stock_mode", Type: field.TypeString, Nullable: true, Default: "DefaultGoodStockMode"},
		{Name: "duration_seconds", Type: field.TypeUint32, Nullable: true, Default: 0},
	}
	// PowerRentalsTable holds the schema information for the "power_rentals" table.
	PowerRentalsTable = &schema.Table{
		Name:       "power_rentals",
		Columns:    PowerRentalsColumns,
		PrimaryKey: []*schema.Column{PowerRentalsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "powerrental_ent_id",
				Unique:  true,
				Columns: []*schema.Column{PowerRentalsColumns[1]},
			},
			{
				Name:    "powerrental_order_id",
				Unique:  false,
				Columns: []*schema.Column{PowerRentalsColumns[2]},
			},
		},
	}
	// PowerRentalStatesColumns holds the columns for the "power_rental_states" table.
	PowerRentalStatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true},
		{Name: "ent_id", Type: field.TypeUUID, Unique: true},
		{Name: "order_id", Type: field.TypeUUID, Nullable: true},
		{Name: "cancel_state", Type: field.TypeString, Nullable: true, Default: "DefaultOrderState"},
		{Name: "canceled_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "payment_id", Type: field.TypeUUID, Nullable: true},
		{Name: "paid_at", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "user_set_paid", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "user_set_canceled", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "admin_set_canceled", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "payment_state", Type: field.TypeString, Nullable: true, Default: "PaymentStateWait"},
		{Name: "outofgas_seconds", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "compensate_seconds", Type: field.TypeUint32, Nullable: true, Default: 0},
		{Name: "renew_state", Type: field.TypeString, Nullable: true, Default: "OrderRenewWait"},
		{Name: "renew_notify_at", Type: field.TypeUint32, Nullable: true, Default: 0},
	}
	// PowerRentalStatesTable holds the schema information for the "power_rental_states" table.
	PowerRentalStatesTable = &schema.Table{
		Name:       "power_rental_states",
		Columns:    PowerRentalStatesColumns,
		PrimaryKey: []*schema.Column{PowerRentalStatesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "powerrentalstate_ent_id",
				Unique:  true,
				Columns: []*schema.Column{PowerRentalStatesColumns[1]},
			},
			{
				Name:    "powerrentalstate_order_id",
				Unique:  false,
				Columns: []*schema.Column{PowerRentalStatesColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AppConfigsTable,
		CompensatesTable,
		FeeOrdersTable,
		FeeOrderStatesTable,
		OrdersTable,
		OrderBasesTable,
		OrderCouponsTable,
		OrderLocksTable,
		OrderStatesTable,
		OrderStateBasesTable,
		OutOfGasTable,
		PaymentsTable,
		PaymentBalancesTable,
		PaymentBalanceLocksTable,
		PaymentBasesTable,
		PaymentContractsTable,
		PaymentTransfersTable,
		PoolOrderUsersTable,
		PowerRentalsTable,
		PowerRentalStatesTable,
	}
)

func init() {
}
