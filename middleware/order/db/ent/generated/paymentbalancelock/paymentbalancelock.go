// Code generated by ent, DO NOT EDIT.

package paymentbalancelock

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the paymentbalancelock type in the database.
	Label = "payment_balance_lock"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldPaymentID holds the string denoting the payment_id field in the database.
	FieldPaymentID = "payment_id"
	// FieldLedgerLockID holds the string denoting the ledger_lock_id field in the database.
	FieldLedgerLockID = "ledger_lock_id"
	// Table holds the table name of the paymentbalancelock in the database.
	Table = "payment_balance_locks"
)

// Columns holds all SQL columns for paymentbalancelock fields.
var Columns = []string{
	FieldID,
	FieldEntID,
	FieldPaymentID,
	FieldLedgerLockID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultPaymentID holds the default value on creation for the "payment_id" field.
	DefaultPaymentID func() uuid.UUID
	// DefaultLedgerLockID holds the default value on creation for the "ledger_lock_id" field.
	DefaultLedgerLockID func() uuid.UUID
)

// OrderOption defines the ordering options for the PaymentBalanceLock queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEntID orders the results by the ent_id field.
func ByEntID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntID, opts...).ToFunc()
}

// ByPaymentID orders the results by the payment_id field.
func ByPaymentID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPaymentID, opts...).ToFunc()
}

// ByLedgerLockID orders the results by the ledger_lock_id field.
func ByLedgerLockID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLedgerLockID, opts...).ToFunc()
}
