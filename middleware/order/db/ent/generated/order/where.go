// Code generated by ent, DO NOT EDIT.

package order

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/order/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldID, id))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldEntID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDeletedAt, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldAppID, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUserID, v))
}

// GoodID applies equality check predicate on the "good_id" field. It's identical to GoodIDEQ.
func GoodID(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldGoodID, v))
}

// AppGoodID applies equality check predicate on the "app_good_id" field. It's identical to AppGoodIDEQ.
func AppGoodID(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldAppGoodID, v))
}

// PaymentID applies equality check predicate on the "payment_id" field. It's identical to PaymentIDEQ.
func PaymentID(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPaymentID, v))
}

// ParentOrderID applies equality check predicate on the "parent_order_id" field. It's identical to ParentOrderIDEQ.
func ParentOrderID(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldParentOrderID, v))
}

// UnitsV1 applies equality check predicate on the "units_v1" field. It's identical to UnitsV1EQ.
func UnitsV1(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUnitsV1, v))
}

// GoodValue applies equality check predicate on the "good_value" field. It's identical to GoodValueEQ.
func GoodValue(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldGoodValue, v))
}

// GoodValueUsd applies equality check predicate on the "good_value_usd" field. It's identical to GoodValueUsdEQ.
func GoodValueUsd(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldGoodValueUsd, v))
}

// PaymentAmount applies equality check predicate on the "payment_amount" field. It's identical to PaymentAmountEQ.
func PaymentAmount(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPaymentAmount, v))
}

// DiscountAmount applies equality check predicate on the "discount_amount" field. It's identical to DiscountAmountEQ.
func DiscountAmount(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDiscountAmount, v))
}

// PromotionID applies equality check predicate on the "promotion_id" field. It's identical to PromotionIDEQ.
func PromotionID(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPromotionID, v))
}

// Duration applies equality check predicate on the "duration" field. It's identical to DurationEQ.
func Duration(v uint32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDuration, v))
}

// OrderType applies equality check predicate on the "order_type" field. It's identical to OrderTypeEQ.
func OrderType(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldOrderType, v))
}

// InvestmentType applies equality check predicate on the "investment_type" field. It's identical to InvestmentTypeEQ.
func InvestmentType(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldInvestmentType, v))
}

// PaymentType applies equality check predicate on the "payment_type" field. It's identical to PaymentTypeEQ.
func PaymentType(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPaymentType, v))
}

// CoinTypeID applies equality check predicate on the "coin_type_id" field. It's identical to CoinTypeIDEQ.
func CoinTypeID(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCoinTypeID, v))
}

// PaymentCoinTypeID applies equality check predicate on the "payment_coin_type_id" field. It's identical to PaymentCoinTypeIDEQ.
func PaymentCoinTypeID(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPaymentCoinTypeID, v))
}

// TransferAmount applies equality check predicate on the "transfer_amount" field. It's identical to TransferAmountEQ.
func TransferAmount(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldTransferAmount, v))
}

// BalanceAmount applies equality check predicate on the "balance_amount" field. It's identical to BalanceAmountEQ.
func BalanceAmount(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldBalanceAmount, v))
}

// CoinUsdCurrency applies equality check predicate on the "coin_usd_currency" field. It's identical to CoinUsdCurrencyEQ.
func CoinUsdCurrency(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCoinUsdCurrency, v))
}

// LocalCoinUsdCurrency applies equality check predicate on the "local_coin_usd_currency" field. It's identical to LocalCoinUsdCurrencyEQ.
func LocalCoinUsdCurrency(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldLocalCoinUsdCurrency, v))
}

// LiveCoinUsdCurrency applies equality check predicate on the "live_coin_usd_currency" field. It's identical to LiveCoinUsdCurrencyEQ.
func LiveCoinUsdCurrency(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldLiveCoinUsdCurrency, v))
}

// Simulate applies equality check predicate on the "simulate" field. It's identical to SimulateEQ.
func Simulate(v bool) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldSimulate, v))
}

// CreateMethod applies equality check predicate on the "create_method" field. It's identical to CreateMethodEQ.
func CreateMethod(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCreateMethod, v))
}

// MultiPaymentCoins applies equality check predicate on the "multi_payment_coins" field. It's identical to MultiPaymentCoinsEQ.
func MultiPaymentCoins(v bool) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldMultiPaymentCoins, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldEntID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldDeletedAt, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldAppID, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldUserID, v))
}

// GoodIDEQ applies the EQ predicate on the "good_id" field.
func GoodIDEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldGoodID, v))
}

// GoodIDNEQ applies the NEQ predicate on the "good_id" field.
func GoodIDNEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldGoodID, v))
}

// GoodIDIn applies the In predicate on the "good_id" field.
func GoodIDIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldGoodID, vs...))
}

// GoodIDNotIn applies the NotIn predicate on the "good_id" field.
func GoodIDNotIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldGoodID, vs...))
}

// GoodIDGT applies the GT predicate on the "good_id" field.
func GoodIDGT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldGoodID, v))
}

// GoodIDGTE applies the GTE predicate on the "good_id" field.
func GoodIDGTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldGoodID, v))
}

// GoodIDLT applies the LT predicate on the "good_id" field.
func GoodIDLT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldGoodID, v))
}

// GoodIDLTE applies the LTE predicate on the "good_id" field.
func GoodIDLTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldGoodID, v))
}

// AppGoodIDEQ applies the EQ predicate on the "app_good_id" field.
func AppGoodIDEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldAppGoodID, v))
}

// AppGoodIDNEQ applies the NEQ predicate on the "app_good_id" field.
func AppGoodIDNEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldAppGoodID, v))
}

// AppGoodIDIn applies the In predicate on the "app_good_id" field.
func AppGoodIDIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldAppGoodID, vs...))
}

// AppGoodIDNotIn applies the NotIn predicate on the "app_good_id" field.
func AppGoodIDNotIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldAppGoodID, vs...))
}

// AppGoodIDGT applies the GT predicate on the "app_good_id" field.
func AppGoodIDGT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldAppGoodID, v))
}

// AppGoodIDGTE applies the GTE predicate on the "app_good_id" field.
func AppGoodIDGTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldAppGoodID, v))
}

// AppGoodIDLT applies the LT predicate on the "app_good_id" field.
func AppGoodIDLT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldAppGoodID, v))
}

// AppGoodIDLTE applies the LTE predicate on the "app_good_id" field.
func AppGoodIDLTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldAppGoodID, v))
}

// PaymentIDEQ applies the EQ predicate on the "payment_id" field.
func PaymentIDEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPaymentID, v))
}

// PaymentIDNEQ applies the NEQ predicate on the "payment_id" field.
func PaymentIDNEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldPaymentID, v))
}

// PaymentIDIn applies the In predicate on the "payment_id" field.
func PaymentIDIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldPaymentID, vs...))
}

// PaymentIDNotIn applies the NotIn predicate on the "payment_id" field.
func PaymentIDNotIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldPaymentID, vs...))
}

// PaymentIDGT applies the GT predicate on the "payment_id" field.
func PaymentIDGT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldPaymentID, v))
}

// PaymentIDGTE applies the GTE predicate on the "payment_id" field.
func PaymentIDGTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldPaymentID, v))
}

// PaymentIDLT applies the LT predicate on the "payment_id" field.
func PaymentIDLT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldPaymentID, v))
}

// PaymentIDLTE applies the LTE predicate on the "payment_id" field.
func PaymentIDLTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldPaymentID, v))
}

// PaymentIDIsNil applies the IsNil predicate on the "payment_id" field.
func PaymentIDIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldPaymentID))
}

// PaymentIDNotNil applies the NotNil predicate on the "payment_id" field.
func PaymentIDNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldPaymentID))
}

// ParentOrderIDEQ applies the EQ predicate on the "parent_order_id" field.
func ParentOrderIDEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldParentOrderID, v))
}

// ParentOrderIDNEQ applies the NEQ predicate on the "parent_order_id" field.
func ParentOrderIDNEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldParentOrderID, v))
}

// ParentOrderIDIn applies the In predicate on the "parent_order_id" field.
func ParentOrderIDIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldParentOrderID, vs...))
}

// ParentOrderIDNotIn applies the NotIn predicate on the "parent_order_id" field.
func ParentOrderIDNotIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldParentOrderID, vs...))
}

// ParentOrderIDGT applies the GT predicate on the "parent_order_id" field.
func ParentOrderIDGT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldParentOrderID, v))
}

// ParentOrderIDGTE applies the GTE predicate on the "parent_order_id" field.
func ParentOrderIDGTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldParentOrderID, v))
}

// ParentOrderIDLT applies the LT predicate on the "parent_order_id" field.
func ParentOrderIDLT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldParentOrderID, v))
}

// ParentOrderIDLTE applies the LTE predicate on the "parent_order_id" field.
func ParentOrderIDLTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldParentOrderID, v))
}

// ParentOrderIDIsNil applies the IsNil predicate on the "parent_order_id" field.
func ParentOrderIDIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldParentOrderID))
}

// ParentOrderIDNotNil applies the NotNil predicate on the "parent_order_id" field.
func ParentOrderIDNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldParentOrderID))
}

// UnitsV1EQ applies the EQ predicate on the "units_v1" field.
func UnitsV1EQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUnitsV1, v))
}

// UnitsV1NEQ applies the NEQ predicate on the "units_v1" field.
func UnitsV1NEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldUnitsV1, v))
}

// UnitsV1In applies the In predicate on the "units_v1" field.
func UnitsV1In(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldUnitsV1, vs...))
}

// UnitsV1NotIn applies the NotIn predicate on the "units_v1" field.
func UnitsV1NotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldUnitsV1, vs...))
}

// UnitsV1GT applies the GT predicate on the "units_v1" field.
func UnitsV1GT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldUnitsV1, v))
}

// UnitsV1GTE applies the GTE predicate on the "units_v1" field.
func UnitsV1GTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldUnitsV1, v))
}

// UnitsV1LT applies the LT predicate on the "units_v1" field.
func UnitsV1LT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldUnitsV1, v))
}

// UnitsV1LTE applies the LTE predicate on the "units_v1" field.
func UnitsV1LTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldUnitsV1, v))
}

// UnitsV1IsNil applies the IsNil predicate on the "units_v1" field.
func UnitsV1IsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldUnitsV1))
}

// UnitsV1NotNil applies the NotNil predicate on the "units_v1" field.
func UnitsV1NotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldUnitsV1))
}

// GoodValueEQ applies the EQ predicate on the "good_value" field.
func GoodValueEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldGoodValue, v))
}

// GoodValueNEQ applies the NEQ predicate on the "good_value" field.
func GoodValueNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldGoodValue, v))
}

// GoodValueIn applies the In predicate on the "good_value" field.
func GoodValueIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldGoodValue, vs...))
}

// GoodValueNotIn applies the NotIn predicate on the "good_value" field.
func GoodValueNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldGoodValue, vs...))
}

// GoodValueGT applies the GT predicate on the "good_value" field.
func GoodValueGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldGoodValue, v))
}

// GoodValueGTE applies the GTE predicate on the "good_value" field.
func GoodValueGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldGoodValue, v))
}

// GoodValueLT applies the LT predicate on the "good_value" field.
func GoodValueLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldGoodValue, v))
}

// GoodValueLTE applies the LTE predicate on the "good_value" field.
func GoodValueLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldGoodValue, v))
}

// GoodValueIsNil applies the IsNil predicate on the "good_value" field.
func GoodValueIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldGoodValue))
}

// GoodValueNotNil applies the NotNil predicate on the "good_value" field.
func GoodValueNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldGoodValue))
}

// GoodValueUsdEQ applies the EQ predicate on the "good_value_usd" field.
func GoodValueUsdEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldGoodValueUsd, v))
}

// GoodValueUsdNEQ applies the NEQ predicate on the "good_value_usd" field.
func GoodValueUsdNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldGoodValueUsd, v))
}

// GoodValueUsdIn applies the In predicate on the "good_value_usd" field.
func GoodValueUsdIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldGoodValueUsd, vs...))
}

// GoodValueUsdNotIn applies the NotIn predicate on the "good_value_usd" field.
func GoodValueUsdNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldGoodValueUsd, vs...))
}

// GoodValueUsdGT applies the GT predicate on the "good_value_usd" field.
func GoodValueUsdGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldGoodValueUsd, v))
}

// GoodValueUsdGTE applies the GTE predicate on the "good_value_usd" field.
func GoodValueUsdGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldGoodValueUsd, v))
}

// GoodValueUsdLT applies the LT predicate on the "good_value_usd" field.
func GoodValueUsdLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldGoodValueUsd, v))
}

// GoodValueUsdLTE applies the LTE predicate on the "good_value_usd" field.
func GoodValueUsdLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldGoodValueUsd, v))
}

// GoodValueUsdIsNil applies the IsNil predicate on the "good_value_usd" field.
func GoodValueUsdIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldGoodValueUsd))
}

// GoodValueUsdNotNil applies the NotNil predicate on the "good_value_usd" field.
func GoodValueUsdNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldGoodValueUsd))
}

// PaymentAmountEQ applies the EQ predicate on the "payment_amount" field.
func PaymentAmountEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPaymentAmount, v))
}

// PaymentAmountNEQ applies the NEQ predicate on the "payment_amount" field.
func PaymentAmountNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldPaymentAmount, v))
}

// PaymentAmountIn applies the In predicate on the "payment_amount" field.
func PaymentAmountIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldPaymentAmount, vs...))
}

// PaymentAmountNotIn applies the NotIn predicate on the "payment_amount" field.
func PaymentAmountNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldPaymentAmount, vs...))
}

// PaymentAmountGT applies the GT predicate on the "payment_amount" field.
func PaymentAmountGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldPaymentAmount, v))
}

// PaymentAmountGTE applies the GTE predicate on the "payment_amount" field.
func PaymentAmountGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldPaymentAmount, v))
}

// PaymentAmountLT applies the LT predicate on the "payment_amount" field.
func PaymentAmountLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldPaymentAmount, v))
}

// PaymentAmountLTE applies the LTE predicate on the "payment_amount" field.
func PaymentAmountLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldPaymentAmount, v))
}

// PaymentAmountIsNil applies the IsNil predicate on the "payment_amount" field.
func PaymentAmountIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldPaymentAmount))
}

// PaymentAmountNotNil applies the NotNil predicate on the "payment_amount" field.
func PaymentAmountNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldPaymentAmount))
}

// DiscountAmountEQ applies the EQ predicate on the "discount_amount" field.
func DiscountAmountEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDiscountAmount, v))
}

// DiscountAmountNEQ applies the NEQ predicate on the "discount_amount" field.
func DiscountAmountNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldDiscountAmount, v))
}

// DiscountAmountIn applies the In predicate on the "discount_amount" field.
func DiscountAmountIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldDiscountAmount, vs...))
}

// DiscountAmountNotIn applies the NotIn predicate on the "discount_amount" field.
func DiscountAmountNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldDiscountAmount, vs...))
}

// DiscountAmountGT applies the GT predicate on the "discount_amount" field.
func DiscountAmountGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldDiscountAmount, v))
}

// DiscountAmountGTE applies the GTE predicate on the "discount_amount" field.
func DiscountAmountGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldDiscountAmount, v))
}

// DiscountAmountLT applies the LT predicate on the "discount_amount" field.
func DiscountAmountLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldDiscountAmount, v))
}

// DiscountAmountLTE applies the LTE predicate on the "discount_amount" field.
func DiscountAmountLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldDiscountAmount, v))
}

// DiscountAmountIsNil applies the IsNil predicate on the "discount_amount" field.
func DiscountAmountIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldDiscountAmount))
}

// DiscountAmountNotNil applies the NotNil predicate on the "discount_amount" field.
func DiscountAmountNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldDiscountAmount))
}

// PromotionIDEQ applies the EQ predicate on the "promotion_id" field.
func PromotionIDEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPromotionID, v))
}

// PromotionIDNEQ applies the NEQ predicate on the "promotion_id" field.
func PromotionIDNEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldPromotionID, v))
}

// PromotionIDIn applies the In predicate on the "promotion_id" field.
func PromotionIDIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldPromotionID, vs...))
}

// PromotionIDNotIn applies the NotIn predicate on the "promotion_id" field.
func PromotionIDNotIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldPromotionID, vs...))
}

// PromotionIDGT applies the GT predicate on the "promotion_id" field.
func PromotionIDGT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldPromotionID, v))
}

// PromotionIDGTE applies the GTE predicate on the "promotion_id" field.
func PromotionIDGTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldPromotionID, v))
}

// PromotionIDLT applies the LT predicate on the "promotion_id" field.
func PromotionIDLT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldPromotionID, v))
}

// PromotionIDLTE applies the LTE predicate on the "promotion_id" field.
func PromotionIDLTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldPromotionID, v))
}

// PromotionIDIsNil applies the IsNil predicate on the "promotion_id" field.
func PromotionIDIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldPromotionID))
}

// PromotionIDNotNil applies the NotNil predicate on the "promotion_id" field.
func PromotionIDNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldPromotionID))
}

// DurationEQ applies the EQ predicate on the "duration" field.
func DurationEQ(v uint32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDuration, v))
}

// DurationNEQ applies the NEQ predicate on the "duration" field.
func DurationNEQ(v uint32) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldDuration, v))
}

// DurationIn applies the In predicate on the "duration" field.
func DurationIn(vs ...uint32) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldDuration, vs...))
}

// DurationNotIn applies the NotIn predicate on the "duration" field.
func DurationNotIn(vs ...uint32) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldDuration, vs...))
}

// DurationGT applies the GT predicate on the "duration" field.
func DurationGT(v uint32) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldDuration, v))
}

// DurationGTE applies the GTE predicate on the "duration" field.
func DurationGTE(v uint32) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldDuration, v))
}

// DurationLT applies the LT predicate on the "duration" field.
func DurationLT(v uint32) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldDuration, v))
}

// DurationLTE applies the LTE predicate on the "duration" field.
func DurationLTE(v uint32) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldDuration, v))
}

// DurationIsNil applies the IsNil predicate on the "duration" field.
func DurationIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldDuration))
}

// DurationNotNil applies the NotNil predicate on the "duration" field.
func DurationNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldDuration))
}

// OrderTypeEQ applies the EQ predicate on the "order_type" field.
func OrderTypeEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldOrderType, v))
}

// OrderTypeNEQ applies the NEQ predicate on the "order_type" field.
func OrderTypeNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldOrderType, v))
}

// OrderTypeIn applies the In predicate on the "order_type" field.
func OrderTypeIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldOrderType, vs...))
}

// OrderTypeNotIn applies the NotIn predicate on the "order_type" field.
func OrderTypeNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldOrderType, vs...))
}

// OrderTypeGT applies the GT predicate on the "order_type" field.
func OrderTypeGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldOrderType, v))
}

// OrderTypeGTE applies the GTE predicate on the "order_type" field.
func OrderTypeGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldOrderType, v))
}

// OrderTypeLT applies the LT predicate on the "order_type" field.
func OrderTypeLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldOrderType, v))
}

// OrderTypeLTE applies the LTE predicate on the "order_type" field.
func OrderTypeLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldOrderType, v))
}

// OrderTypeContains applies the Contains predicate on the "order_type" field.
func OrderTypeContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldOrderType, v))
}

// OrderTypeHasPrefix applies the HasPrefix predicate on the "order_type" field.
func OrderTypeHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldOrderType, v))
}

// OrderTypeHasSuffix applies the HasSuffix predicate on the "order_type" field.
func OrderTypeHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldOrderType, v))
}

// OrderTypeIsNil applies the IsNil predicate on the "order_type" field.
func OrderTypeIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldOrderType))
}

// OrderTypeNotNil applies the NotNil predicate on the "order_type" field.
func OrderTypeNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldOrderType))
}

// OrderTypeEqualFold applies the EqualFold predicate on the "order_type" field.
func OrderTypeEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldOrderType, v))
}

// OrderTypeContainsFold applies the ContainsFold predicate on the "order_type" field.
func OrderTypeContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldOrderType, v))
}

// InvestmentTypeEQ applies the EQ predicate on the "investment_type" field.
func InvestmentTypeEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldInvestmentType, v))
}

// InvestmentTypeNEQ applies the NEQ predicate on the "investment_type" field.
func InvestmentTypeNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldInvestmentType, v))
}

// InvestmentTypeIn applies the In predicate on the "investment_type" field.
func InvestmentTypeIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldInvestmentType, vs...))
}

// InvestmentTypeNotIn applies the NotIn predicate on the "investment_type" field.
func InvestmentTypeNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldInvestmentType, vs...))
}

// InvestmentTypeGT applies the GT predicate on the "investment_type" field.
func InvestmentTypeGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldInvestmentType, v))
}

// InvestmentTypeGTE applies the GTE predicate on the "investment_type" field.
func InvestmentTypeGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldInvestmentType, v))
}

// InvestmentTypeLT applies the LT predicate on the "investment_type" field.
func InvestmentTypeLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldInvestmentType, v))
}

// InvestmentTypeLTE applies the LTE predicate on the "investment_type" field.
func InvestmentTypeLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldInvestmentType, v))
}

// InvestmentTypeContains applies the Contains predicate on the "investment_type" field.
func InvestmentTypeContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldInvestmentType, v))
}

// InvestmentTypeHasPrefix applies the HasPrefix predicate on the "investment_type" field.
func InvestmentTypeHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldInvestmentType, v))
}

// InvestmentTypeHasSuffix applies the HasSuffix predicate on the "investment_type" field.
func InvestmentTypeHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldInvestmentType, v))
}

// InvestmentTypeIsNil applies the IsNil predicate on the "investment_type" field.
func InvestmentTypeIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldInvestmentType))
}

// InvestmentTypeNotNil applies the NotNil predicate on the "investment_type" field.
func InvestmentTypeNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldInvestmentType))
}

// InvestmentTypeEqualFold applies the EqualFold predicate on the "investment_type" field.
func InvestmentTypeEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldInvestmentType, v))
}

// InvestmentTypeContainsFold applies the ContainsFold predicate on the "investment_type" field.
func InvestmentTypeContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldInvestmentType, v))
}

// CouponIdsIsNil applies the IsNil predicate on the "coupon_ids" field.
func CouponIdsIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldCouponIds))
}

// CouponIdsNotNil applies the NotNil predicate on the "coupon_ids" field.
func CouponIdsNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldCouponIds))
}

// PaymentTypeEQ applies the EQ predicate on the "payment_type" field.
func PaymentTypeEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPaymentType, v))
}

// PaymentTypeNEQ applies the NEQ predicate on the "payment_type" field.
func PaymentTypeNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldPaymentType, v))
}

// PaymentTypeIn applies the In predicate on the "payment_type" field.
func PaymentTypeIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldPaymentType, vs...))
}

// PaymentTypeNotIn applies the NotIn predicate on the "payment_type" field.
func PaymentTypeNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldPaymentType, vs...))
}

// PaymentTypeGT applies the GT predicate on the "payment_type" field.
func PaymentTypeGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldPaymentType, v))
}

// PaymentTypeGTE applies the GTE predicate on the "payment_type" field.
func PaymentTypeGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldPaymentType, v))
}

// PaymentTypeLT applies the LT predicate on the "payment_type" field.
func PaymentTypeLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldPaymentType, v))
}

// PaymentTypeLTE applies the LTE predicate on the "payment_type" field.
func PaymentTypeLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldPaymentType, v))
}

// PaymentTypeContains applies the Contains predicate on the "payment_type" field.
func PaymentTypeContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldPaymentType, v))
}

// PaymentTypeHasPrefix applies the HasPrefix predicate on the "payment_type" field.
func PaymentTypeHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldPaymentType, v))
}

// PaymentTypeHasSuffix applies the HasSuffix predicate on the "payment_type" field.
func PaymentTypeHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldPaymentType, v))
}

// PaymentTypeIsNil applies the IsNil predicate on the "payment_type" field.
func PaymentTypeIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldPaymentType))
}

// PaymentTypeNotNil applies the NotNil predicate on the "payment_type" field.
func PaymentTypeNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldPaymentType))
}

// PaymentTypeEqualFold applies the EqualFold predicate on the "payment_type" field.
func PaymentTypeEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldPaymentType, v))
}

// PaymentTypeContainsFold applies the ContainsFold predicate on the "payment_type" field.
func PaymentTypeContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldPaymentType, v))
}

// CoinTypeIDEQ applies the EQ predicate on the "coin_type_id" field.
func CoinTypeIDEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCoinTypeID, v))
}

// CoinTypeIDNEQ applies the NEQ predicate on the "coin_type_id" field.
func CoinTypeIDNEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldCoinTypeID, v))
}

// CoinTypeIDIn applies the In predicate on the "coin_type_id" field.
func CoinTypeIDIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldCoinTypeID, vs...))
}

// CoinTypeIDNotIn applies the NotIn predicate on the "coin_type_id" field.
func CoinTypeIDNotIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldCoinTypeID, vs...))
}

// CoinTypeIDGT applies the GT predicate on the "coin_type_id" field.
func CoinTypeIDGT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldCoinTypeID, v))
}

// CoinTypeIDGTE applies the GTE predicate on the "coin_type_id" field.
func CoinTypeIDGTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldCoinTypeID, v))
}

// CoinTypeIDLT applies the LT predicate on the "coin_type_id" field.
func CoinTypeIDLT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldCoinTypeID, v))
}

// CoinTypeIDLTE applies the LTE predicate on the "coin_type_id" field.
func CoinTypeIDLTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldCoinTypeID, v))
}

// PaymentCoinTypeIDEQ applies the EQ predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPaymentCoinTypeID, v))
}

// PaymentCoinTypeIDNEQ applies the NEQ predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDNEQ(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldPaymentCoinTypeID, v))
}

// PaymentCoinTypeIDIn applies the In predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldPaymentCoinTypeID, vs...))
}

// PaymentCoinTypeIDNotIn applies the NotIn predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDNotIn(vs ...uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldPaymentCoinTypeID, vs...))
}

// PaymentCoinTypeIDGT applies the GT predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDGT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldPaymentCoinTypeID, v))
}

// PaymentCoinTypeIDGTE applies the GTE predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDGTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldPaymentCoinTypeID, v))
}

// PaymentCoinTypeIDLT applies the LT predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDLT(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldPaymentCoinTypeID, v))
}

// PaymentCoinTypeIDLTE applies the LTE predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDLTE(v uuid.UUID) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldPaymentCoinTypeID, v))
}

// PaymentCoinTypeIDIsNil applies the IsNil predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldPaymentCoinTypeID))
}

// PaymentCoinTypeIDNotNil applies the NotNil predicate on the "payment_coin_type_id" field.
func PaymentCoinTypeIDNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldPaymentCoinTypeID))
}

// TransferAmountEQ applies the EQ predicate on the "transfer_amount" field.
func TransferAmountEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldTransferAmount, v))
}

// TransferAmountNEQ applies the NEQ predicate on the "transfer_amount" field.
func TransferAmountNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldTransferAmount, v))
}

// TransferAmountIn applies the In predicate on the "transfer_amount" field.
func TransferAmountIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldTransferAmount, vs...))
}

// TransferAmountNotIn applies the NotIn predicate on the "transfer_amount" field.
func TransferAmountNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldTransferAmount, vs...))
}

// TransferAmountGT applies the GT predicate on the "transfer_amount" field.
func TransferAmountGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldTransferAmount, v))
}

// TransferAmountGTE applies the GTE predicate on the "transfer_amount" field.
func TransferAmountGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldTransferAmount, v))
}

// TransferAmountLT applies the LT predicate on the "transfer_amount" field.
func TransferAmountLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldTransferAmount, v))
}

// TransferAmountLTE applies the LTE predicate on the "transfer_amount" field.
func TransferAmountLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldTransferAmount, v))
}

// TransferAmountIsNil applies the IsNil predicate on the "transfer_amount" field.
func TransferAmountIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldTransferAmount))
}

// TransferAmountNotNil applies the NotNil predicate on the "transfer_amount" field.
func TransferAmountNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldTransferAmount))
}

// BalanceAmountEQ applies the EQ predicate on the "balance_amount" field.
func BalanceAmountEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldBalanceAmount, v))
}

// BalanceAmountNEQ applies the NEQ predicate on the "balance_amount" field.
func BalanceAmountNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldBalanceAmount, v))
}

// BalanceAmountIn applies the In predicate on the "balance_amount" field.
func BalanceAmountIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldBalanceAmount, vs...))
}

// BalanceAmountNotIn applies the NotIn predicate on the "balance_amount" field.
func BalanceAmountNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldBalanceAmount, vs...))
}

// BalanceAmountGT applies the GT predicate on the "balance_amount" field.
func BalanceAmountGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldBalanceAmount, v))
}

// BalanceAmountGTE applies the GTE predicate on the "balance_amount" field.
func BalanceAmountGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldBalanceAmount, v))
}

// BalanceAmountLT applies the LT predicate on the "balance_amount" field.
func BalanceAmountLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldBalanceAmount, v))
}

// BalanceAmountLTE applies the LTE predicate on the "balance_amount" field.
func BalanceAmountLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldBalanceAmount, v))
}

// BalanceAmountIsNil applies the IsNil predicate on the "balance_amount" field.
func BalanceAmountIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldBalanceAmount))
}

// BalanceAmountNotNil applies the NotNil predicate on the "balance_amount" field.
func BalanceAmountNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldBalanceAmount))
}

// CoinUsdCurrencyEQ applies the EQ predicate on the "coin_usd_currency" field.
func CoinUsdCurrencyEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCoinUsdCurrency, v))
}

// CoinUsdCurrencyNEQ applies the NEQ predicate on the "coin_usd_currency" field.
func CoinUsdCurrencyNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldCoinUsdCurrency, v))
}

// CoinUsdCurrencyIn applies the In predicate on the "coin_usd_currency" field.
func CoinUsdCurrencyIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldCoinUsdCurrency, vs...))
}

// CoinUsdCurrencyNotIn applies the NotIn predicate on the "coin_usd_currency" field.
func CoinUsdCurrencyNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldCoinUsdCurrency, vs...))
}

// CoinUsdCurrencyGT applies the GT predicate on the "coin_usd_currency" field.
func CoinUsdCurrencyGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldCoinUsdCurrency, v))
}

// CoinUsdCurrencyGTE applies the GTE predicate on the "coin_usd_currency" field.
func CoinUsdCurrencyGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldCoinUsdCurrency, v))
}

// CoinUsdCurrencyLT applies the LT predicate on the "coin_usd_currency" field.
func CoinUsdCurrencyLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldCoinUsdCurrency, v))
}

// CoinUsdCurrencyLTE applies the LTE predicate on the "coin_usd_currency" field.
func CoinUsdCurrencyLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldCoinUsdCurrency, v))
}

// CoinUsdCurrencyIsNil applies the IsNil predicate on the "coin_usd_currency" field.
func CoinUsdCurrencyIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldCoinUsdCurrency))
}

// CoinUsdCurrencyNotNil applies the NotNil predicate on the "coin_usd_currency" field.
func CoinUsdCurrencyNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldCoinUsdCurrency))
}

// LocalCoinUsdCurrencyEQ applies the EQ predicate on the "local_coin_usd_currency" field.
func LocalCoinUsdCurrencyEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldLocalCoinUsdCurrency, v))
}

// LocalCoinUsdCurrencyNEQ applies the NEQ predicate on the "local_coin_usd_currency" field.
func LocalCoinUsdCurrencyNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldLocalCoinUsdCurrency, v))
}

// LocalCoinUsdCurrencyIn applies the In predicate on the "local_coin_usd_currency" field.
func LocalCoinUsdCurrencyIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldLocalCoinUsdCurrency, vs...))
}

// LocalCoinUsdCurrencyNotIn applies the NotIn predicate on the "local_coin_usd_currency" field.
func LocalCoinUsdCurrencyNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldLocalCoinUsdCurrency, vs...))
}

// LocalCoinUsdCurrencyGT applies the GT predicate on the "local_coin_usd_currency" field.
func LocalCoinUsdCurrencyGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldLocalCoinUsdCurrency, v))
}

// LocalCoinUsdCurrencyGTE applies the GTE predicate on the "local_coin_usd_currency" field.
func LocalCoinUsdCurrencyGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldLocalCoinUsdCurrency, v))
}

// LocalCoinUsdCurrencyLT applies the LT predicate on the "local_coin_usd_currency" field.
func LocalCoinUsdCurrencyLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldLocalCoinUsdCurrency, v))
}

// LocalCoinUsdCurrencyLTE applies the LTE predicate on the "local_coin_usd_currency" field.
func LocalCoinUsdCurrencyLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldLocalCoinUsdCurrency, v))
}

// LocalCoinUsdCurrencyIsNil applies the IsNil predicate on the "local_coin_usd_currency" field.
func LocalCoinUsdCurrencyIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldLocalCoinUsdCurrency))
}

// LocalCoinUsdCurrencyNotNil applies the NotNil predicate on the "local_coin_usd_currency" field.
func LocalCoinUsdCurrencyNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldLocalCoinUsdCurrency))
}

// LiveCoinUsdCurrencyEQ applies the EQ predicate on the "live_coin_usd_currency" field.
func LiveCoinUsdCurrencyEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldLiveCoinUsdCurrency, v))
}

// LiveCoinUsdCurrencyNEQ applies the NEQ predicate on the "live_coin_usd_currency" field.
func LiveCoinUsdCurrencyNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldLiveCoinUsdCurrency, v))
}

// LiveCoinUsdCurrencyIn applies the In predicate on the "live_coin_usd_currency" field.
func LiveCoinUsdCurrencyIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldLiveCoinUsdCurrency, vs...))
}

// LiveCoinUsdCurrencyNotIn applies the NotIn predicate on the "live_coin_usd_currency" field.
func LiveCoinUsdCurrencyNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldLiveCoinUsdCurrency, vs...))
}

// LiveCoinUsdCurrencyGT applies the GT predicate on the "live_coin_usd_currency" field.
func LiveCoinUsdCurrencyGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldLiveCoinUsdCurrency, v))
}

// LiveCoinUsdCurrencyGTE applies the GTE predicate on the "live_coin_usd_currency" field.
func LiveCoinUsdCurrencyGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldLiveCoinUsdCurrency, v))
}

// LiveCoinUsdCurrencyLT applies the LT predicate on the "live_coin_usd_currency" field.
func LiveCoinUsdCurrencyLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldLiveCoinUsdCurrency, v))
}

// LiveCoinUsdCurrencyLTE applies the LTE predicate on the "live_coin_usd_currency" field.
func LiveCoinUsdCurrencyLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldLiveCoinUsdCurrency, v))
}

// LiveCoinUsdCurrencyIsNil applies the IsNil predicate on the "live_coin_usd_currency" field.
func LiveCoinUsdCurrencyIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldLiveCoinUsdCurrency))
}

// LiveCoinUsdCurrencyNotNil applies the NotNil predicate on the "live_coin_usd_currency" field.
func LiveCoinUsdCurrencyNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldLiveCoinUsdCurrency))
}

// SimulateEQ applies the EQ predicate on the "simulate" field.
func SimulateEQ(v bool) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldSimulate, v))
}

// SimulateNEQ applies the NEQ predicate on the "simulate" field.
func SimulateNEQ(v bool) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldSimulate, v))
}

// SimulateIsNil applies the IsNil predicate on the "simulate" field.
func SimulateIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldSimulate))
}

// SimulateNotNil applies the NotNil predicate on the "simulate" field.
func SimulateNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldSimulate))
}

// CreateMethodEQ applies the EQ predicate on the "create_method" field.
func CreateMethodEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCreateMethod, v))
}

// CreateMethodNEQ applies the NEQ predicate on the "create_method" field.
func CreateMethodNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldCreateMethod, v))
}

// CreateMethodIn applies the In predicate on the "create_method" field.
func CreateMethodIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldCreateMethod, vs...))
}

// CreateMethodNotIn applies the NotIn predicate on the "create_method" field.
func CreateMethodNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldCreateMethod, vs...))
}

// CreateMethodGT applies the GT predicate on the "create_method" field.
func CreateMethodGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldCreateMethod, v))
}

// CreateMethodGTE applies the GTE predicate on the "create_method" field.
func CreateMethodGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldCreateMethod, v))
}

// CreateMethodLT applies the LT predicate on the "create_method" field.
func CreateMethodLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldCreateMethod, v))
}

// CreateMethodLTE applies the LTE predicate on the "create_method" field.
func CreateMethodLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldCreateMethod, v))
}

// CreateMethodContains applies the Contains predicate on the "create_method" field.
func CreateMethodContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldCreateMethod, v))
}

// CreateMethodHasPrefix applies the HasPrefix predicate on the "create_method" field.
func CreateMethodHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldCreateMethod, v))
}

// CreateMethodHasSuffix applies the HasSuffix predicate on the "create_method" field.
func CreateMethodHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldCreateMethod, v))
}

// CreateMethodIsNil applies the IsNil predicate on the "create_method" field.
func CreateMethodIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldCreateMethod))
}

// CreateMethodNotNil applies the NotNil predicate on the "create_method" field.
func CreateMethodNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldCreateMethod))
}

// CreateMethodEqualFold applies the EqualFold predicate on the "create_method" field.
func CreateMethodEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldCreateMethod, v))
}

// CreateMethodContainsFold applies the ContainsFold predicate on the "create_method" field.
func CreateMethodContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldCreateMethod, v))
}

// MultiPaymentCoinsEQ applies the EQ predicate on the "multi_payment_coins" field.
func MultiPaymentCoinsEQ(v bool) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldMultiPaymentCoins, v))
}

// MultiPaymentCoinsNEQ applies the NEQ predicate on the "multi_payment_coins" field.
func MultiPaymentCoinsNEQ(v bool) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldMultiPaymentCoins, v))
}

// MultiPaymentCoinsIsNil applies the IsNil predicate on the "multi_payment_coins" field.
func MultiPaymentCoinsIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldMultiPaymentCoins))
}

// MultiPaymentCoinsNotNil applies the NotNil predicate on the "multi_payment_coins" field.
func MultiPaymentCoinsNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldMultiPaymentCoins))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Order) predicate.Order {
	return predicate.Order(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Order) predicate.Order {
	return predicate.Order(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Order) predicate.Order {
	return predicate.Order(sql.NotPredicates(p))
}
