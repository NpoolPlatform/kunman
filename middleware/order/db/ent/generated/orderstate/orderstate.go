// Code generated by ent, DO NOT EDIT.

package orderstate

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const (
	// Label holds the string label denoting the orderstate type in the database.
	Label = "order_state"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldOrderID holds the string denoting the order_id field in the database.
	FieldOrderID = "order_id"
	// FieldOrderState holds the string denoting the order_state field in the database.
	FieldOrderState = "order_state"
	// FieldCancelState holds the string denoting the cancel_state field in the database.
	FieldCancelState = "cancel_state"
	// FieldStartMode holds the string denoting the start_mode field in the database.
	FieldStartMode = "start_mode"
	// FieldStartAt holds the string denoting the start_at field in the database.
	FieldStartAt = "start_at"
	// FieldEndAt holds the string denoting the end_at field in the database.
	FieldEndAt = "end_at"
	// FieldPaidAt holds the string denoting the paid_at field in the database.
	FieldPaidAt = "paid_at"
	// FieldLastBenefitAt holds the string denoting the last_benefit_at field in the database.
	FieldLastBenefitAt = "last_benefit_at"
	// FieldBenefitState holds the string denoting the benefit_state field in the database.
	FieldBenefitState = "benefit_state"
	// FieldUserSetPaid holds the string denoting the user_set_paid field in the database.
	FieldUserSetPaid = "user_set_paid"
	// FieldUserSetCanceled holds the string denoting the user_set_canceled field in the database.
	FieldUserSetCanceled = "user_set_canceled"
	// FieldAdminSetCanceled holds the string denoting the admin_set_canceled field in the database.
	FieldAdminSetCanceled = "admin_set_canceled"
	// FieldPaymentTransactionID holds the string denoting the payment_transaction_id field in the database.
	FieldPaymentTransactionID = "payment_transaction_id"
	// FieldPaymentFinishAmount holds the string denoting the payment_finish_amount field in the database.
	FieldPaymentFinishAmount = "payment_finish_amount"
	// FieldPaymentState holds the string denoting the payment_state field in the database.
	FieldPaymentState = "payment_state"
	// FieldOutofgasHours holds the string denoting the outofgas_hours field in the database.
	FieldOutofgasHours = "outofgas_hours"
	// FieldCompensateHours holds the string denoting the compensate_hours field in the database.
	FieldCompensateHours = "compensate_hours"
	// FieldRenewState holds the string denoting the renew_state field in the database.
	FieldRenewState = "renew_state"
	// FieldRenewNotifyAt holds the string denoting the renew_notify_at field in the database.
	FieldRenewNotifyAt = "renew_notify_at"
	// Table holds the table name of the orderstate in the database.
	Table = "order_states"
)

// Columns holds all SQL columns for orderstate fields.
var Columns = []string{
	FieldID,
	FieldEntID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldOrderID,
	FieldOrderState,
	FieldCancelState,
	FieldStartMode,
	FieldStartAt,
	FieldEndAt,
	FieldPaidAt,
	FieldLastBenefitAt,
	FieldBenefitState,
	FieldUserSetPaid,
	FieldUserSetCanceled,
	FieldAdminSetCanceled,
	FieldPaymentTransactionID,
	FieldPaymentFinishAmount,
	FieldPaymentState,
	FieldOutofgasHours,
	FieldCompensateHours,
	FieldRenewState,
	FieldRenewNotifyAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultOrderState holds the default value on creation for the "order_state" field.
	DefaultOrderState string
	// DefaultCancelState holds the default value on creation for the "cancel_state" field.
	DefaultCancelState string
	// DefaultStartMode holds the default value on creation for the "start_mode" field.
	DefaultStartMode string
	// DefaultStartAt holds the default value on creation for the "start_at" field.
	DefaultStartAt uint32
	// DefaultEndAt holds the default value on creation for the "end_at" field.
	DefaultEndAt uint32
	// DefaultPaidAt holds the default value on creation for the "paid_at" field.
	DefaultPaidAt uint32
	// DefaultLastBenefitAt holds the default value on creation for the "last_benefit_at" field.
	DefaultLastBenefitAt uint32
	// DefaultBenefitState holds the default value on creation for the "benefit_state" field.
	DefaultBenefitState string
	// DefaultUserSetPaid holds the default value on creation for the "user_set_paid" field.
	DefaultUserSetPaid bool
	// DefaultUserSetCanceled holds the default value on creation for the "user_set_canceled" field.
	DefaultUserSetCanceled bool
	// DefaultAdminSetCanceled holds the default value on creation for the "admin_set_canceled" field.
	DefaultAdminSetCanceled bool
	// DefaultPaymentTransactionID holds the default value on creation for the "payment_transaction_id" field.
	DefaultPaymentTransactionID string
	// DefaultPaymentFinishAmount holds the default value on creation for the "payment_finish_amount" field.
	DefaultPaymentFinishAmount decimal.Decimal
	// DefaultPaymentState holds the default value on creation for the "payment_state" field.
	DefaultPaymentState string
	// DefaultOutofgasHours holds the default value on creation for the "outofgas_hours" field.
	DefaultOutofgasHours uint32
	// DefaultCompensateHours holds the default value on creation for the "compensate_hours" field.
	DefaultCompensateHours uint32
	// DefaultRenewState holds the default value on creation for the "renew_state" field.
	DefaultRenewState string
	// DefaultRenewNotifyAt holds the default value on creation for the "renew_notify_at" field.
	DefaultRenewNotifyAt uint32
)

// OrderOption defines the ordering options for the OrderState queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEntID orders the results by the ent_id field.
func ByEntID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByOrderID orders the results by the order_id field.
func ByOrderID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrderID, opts...).ToFunc()
}

// ByOrderState orders the results by the order_state field.
func ByOrderState(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrderState, opts...).ToFunc()
}

// ByCancelState orders the results by the cancel_state field.
func ByCancelState(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCancelState, opts...).ToFunc()
}

// ByStartMode orders the results by the start_mode field.
func ByStartMode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStartMode, opts...).ToFunc()
}

// ByStartAt orders the results by the start_at field.
func ByStartAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStartAt, opts...).ToFunc()
}

// ByEndAt orders the results by the end_at field.
func ByEndAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEndAt, opts...).ToFunc()
}

// ByPaidAt orders the results by the paid_at field.
func ByPaidAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPaidAt, opts...).ToFunc()
}

// ByLastBenefitAt orders the results by the last_benefit_at field.
func ByLastBenefitAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLastBenefitAt, opts...).ToFunc()
}

// ByBenefitState orders the results by the benefit_state field.
func ByBenefitState(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBenefitState, opts...).ToFunc()
}

// ByUserSetPaid orders the results by the user_set_paid field.
func ByUserSetPaid(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserSetPaid, opts...).ToFunc()
}

// ByUserSetCanceled orders the results by the user_set_canceled field.
func ByUserSetCanceled(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserSetCanceled, opts...).ToFunc()
}

// ByAdminSetCanceled orders the results by the admin_set_canceled field.
func ByAdminSetCanceled(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAdminSetCanceled, opts...).ToFunc()
}

// ByPaymentTransactionID orders the results by the payment_transaction_id field.
func ByPaymentTransactionID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPaymentTransactionID, opts...).ToFunc()
}

// ByPaymentFinishAmount orders the results by the payment_finish_amount field.
func ByPaymentFinishAmount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPaymentFinishAmount, opts...).ToFunc()
}

// ByPaymentState orders the results by the payment_state field.
func ByPaymentState(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPaymentState, opts...).ToFunc()
}

// ByOutofgasHours orders the results by the outofgas_hours field.
func ByOutofgasHours(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOutofgasHours, opts...).ToFunc()
}

// ByCompensateHours orders the results by the compensate_hours field.
func ByCompensateHours(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCompensateHours, opts...).ToFunc()
}

// ByRenewState orders the results by the renew_state field.
func ByRenewState(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRenewState, opts...).ToFunc()
}

// ByRenewNotifyAt orders the results by the renew_notify_at field.
func ByRenewNotifyAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRenewNotifyAt, opts...).ToFunc()
}
