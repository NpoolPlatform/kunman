// Code generated by ent, DO NOT EDIT.

package ordercoupon

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/order/db/ent/generated/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldLTE(FieldID, id))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldEQ(FieldEntID, v))
}

// OrderID applies equality check predicate on the "order_id" field. It's identical to OrderIDEQ.
func OrderID(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldEQ(FieldOrderID, v))
}

// CouponID applies equality check predicate on the "coupon_id" field. It's identical to CouponIDEQ.
func CouponID(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldEQ(FieldCouponID, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldLTE(FieldEntID, v))
}

// OrderIDEQ applies the EQ predicate on the "order_id" field.
func OrderIDEQ(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldEQ(FieldOrderID, v))
}

// OrderIDNEQ applies the NEQ predicate on the "order_id" field.
func OrderIDNEQ(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldNEQ(FieldOrderID, v))
}

// OrderIDIn applies the In predicate on the "order_id" field.
func OrderIDIn(vs ...uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldIn(FieldOrderID, vs...))
}

// OrderIDNotIn applies the NotIn predicate on the "order_id" field.
func OrderIDNotIn(vs ...uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldNotIn(FieldOrderID, vs...))
}

// OrderIDGT applies the GT predicate on the "order_id" field.
func OrderIDGT(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldGT(FieldOrderID, v))
}

// OrderIDGTE applies the GTE predicate on the "order_id" field.
func OrderIDGTE(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldGTE(FieldOrderID, v))
}

// OrderIDLT applies the LT predicate on the "order_id" field.
func OrderIDLT(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldLT(FieldOrderID, v))
}

// OrderIDLTE applies the LTE predicate on the "order_id" field.
func OrderIDLTE(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldLTE(FieldOrderID, v))
}

// OrderIDIsNil applies the IsNil predicate on the "order_id" field.
func OrderIDIsNil() predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldIsNull(FieldOrderID))
}

// OrderIDNotNil applies the NotNil predicate on the "order_id" field.
func OrderIDNotNil() predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldNotNull(FieldOrderID))
}

// CouponIDEQ applies the EQ predicate on the "coupon_id" field.
func CouponIDEQ(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldEQ(FieldCouponID, v))
}

// CouponIDNEQ applies the NEQ predicate on the "coupon_id" field.
func CouponIDNEQ(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldNEQ(FieldCouponID, v))
}

// CouponIDIn applies the In predicate on the "coupon_id" field.
func CouponIDIn(vs ...uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldIn(FieldCouponID, vs...))
}

// CouponIDNotIn applies the NotIn predicate on the "coupon_id" field.
func CouponIDNotIn(vs ...uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldNotIn(FieldCouponID, vs...))
}

// CouponIDGT applies the GT predicate on the "coupon_id" field.
func CouponIDGT(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldGT(FieldCouponID, v))
}

// CouponIDGTE applies the GTE predicate on the "coupon_id" field.
func CouponIDGTE(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldGTE(FieldCouponID, v))
}

// CouponIDLT applies the LT predicate on the "coupon_id" field.
func CouponIDLT(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldLT(FieldCouponID, v))
}

// CouponIDLTE applies the LTE predicate on the "coupon_id" field.
func CouponIDLTE(v uuid.UUID) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldLTE(FieldCouponID, v))
}

// CouponIDIsNil applies the IsNil predicate on the "coupon_id" field.
func CouponIDIsNil() predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldIsNull(FieldCouponID))
}

// CouponIDNotNil applies the NotNil predicate on the "coupon_id" field.
func CouponIDNotNil() predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.FieldNotNull(FieldCouponID))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrderCoupon) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrderCoupon) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrderCoupon) predicate.OrderCoupon {
	return predicate.OrderCoupon(sql.NotPredicates(p))
}
