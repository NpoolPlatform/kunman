// Code generated by ent, DO NOT EDIT.

package paymentfiat

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

const (
	// Label holds the string label denoting the paymentfiat type in the database.
	Label = "payment_fiat"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldPaymentID holds the string denoting the payment_id field in the database.
	FieldPaymentID = "payment_id"
	// FieldFiatID holds the string denoting the fiat_id field in the database.
	FieldFiatID = "fiat_id"
	// FieldPaymentChannel holds the string denoting the payment_channel field in the database.
	FieldPaymentChannel = "payment_channel"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldUsdCurrency holds the string denoting the usd_currency field in the database.
	FieldUsdCurrency = "usd_currency"
	// Table holds the table name of the paymentfiat in the database.
	Table = "payment_fiats"
)

// Columns holds all SQL columns for paymentfiat fields.
var Columns = []string{
	FieldID,
	FieldEntID,
	FieldPaymentID,
	FieldFiatID,
	FieldPaymentChannel,
	FieldAmount,
	FieldUsdCurrency,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultPaymentID holds the default value on creation for the "payment_id" field.
	DefaultPaymentID func() uuid.UUID
	// DefaultFiatID holds the default value on creation for the "fiat_id" field.
	DefaultFiatID func() uuid.UUID
	// DefaultPaymentChannel holds the default value on creation for the "payment_channel" field.
	DefaultPaymentChannel string
	// DefaultAmount holds the default value on creation for the "amount" field.
	DefaultAmount decimal.Decimal
	// DefaultUsdCurrency holds the default value on creation for the "usd_currency" field.
	DefaultUsdCurrency decimal.Decimal
)

// OrderOption defines the ordering options for the PaymentFiat queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEntID orders the results by the ent_id field.
func ByEntID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntID, opts...).ToFunc()
}

// ByPaymentID orders the results by the payment_id field.
func ByPaymentID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPaymentID, opts...).ToFunc()
}

// ByFiatID orders the results by the fiat_id field.
func ByFiatID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFiatID, opts...).ToFunc()
}

// ByPaymentChannel orders the results by the payment_channel field.
func ByPaymentChannel(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPaymentChannel, opts...).ToFunc()
}

// ByAmount orders the results by the amount field.
func ByAmount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAmount, opts...).ToFunc()
}

// ByUsdCurrency orders the results by the usd_currency field.
func ByUsdCurrency(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUsdCurrency, opts...).ToFunc()
}
