// Code generated by ent, DO NOT EDIT.

package paymentfiat

import (
	"entgo.io/ent/dialect/sql"
	"github.com/NpoolPlatform/kunman/middleware/order/db/ent/generated/predicate"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLTE(FieldID, id))
}

// EntID applies equality check predicate on the "ent_id" field. It's identical to EntIDEQ.
func EntID(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldEntID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldDeletedAt, v))
}

// PaymentID applies equality check predicate on the "payment_id" field. It's identical to PaymentIDEQ.
func PaymentID(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldPaymentID, v))
}

// FiatID applies equality check predicate on the "fiat_id" field. It's identical to FiatIDEQ.
func FiatID(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldFiatID, v))
}

// PaymentChannel applies equality check predicate on the "payment_channel" field. It's identical to PaymentChannelEQ.
func PaymentChannel(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldPaymentChannel, v))
}

// Amount applies equality check predicate on the "amount" field. It's identical to AmountEQ.
func Amount(v decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldAmount, v))
}

// ChannelPaymentID applies equality check predicate on the "channel_payment_id" field. It's identical to ChannelPaymentIDEQ.
func ChannelPaymentID(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldChannelPaymentID, v))
}

// UsdCurrency applies equality check predicate on the "usd_currency" field. It's identical to UsdCurrencyEQ.
func UsdCurrency(v decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldUsdCurrency, v))
}

// EntIDEQ applies the EQ predicate on the "ent_id" field.
func EntIDEQ(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldEntID, v))
}

// EntIDNEQ applies the NEQ predicate on the "ent_id" field.
func EntIDNEQ(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNEQ(FieldEntID, v))
}

// EntIDIn applies the In predicate on the "ent_id" field.
func EntIDIn(vs ...uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIn(FieldEntID, vs...))
}

// EntIDNotIn applies the NotIn predicate on the "ent_id" field.
func EntIDNotIn(vs ...uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotIn(FieldEntID, vs...))
}

// EntIDGT applies the GT predicate on the "ent_id" field.
func EntIDGT(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGT(FieldEntID, v))
}

// EntIDGTE applies the GTE predicate on the "ent_id" field.
func EntIDGTE(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGTE(FieldEntID, v))
}

// EntIDLT applies the LT predicate on the "ent_id" field.
func EntIDLT(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLT(FieldEntID, v))
}

// EntIDLTE applies the LTE predicate on the "ent_id" field.
func EntIDLTE(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLTE(FieldEntID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v uint32) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLTE(FieldDeletedAt, v))
}

// PaymentIDEQ applies the EQ predicate on the "payment_id" field.
func PaymentIDEQ(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldPaymentID, v))
}

// PaymentIDNEQ applies the NEQ predicate on the "payment_id" field.
func PaymentIDNEQ(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNEQ(FieldPaymentID, v))
}

// PaymentIDIn applies the In predicate on the "payment_id" field.
func PaymentIDIn(vs ...uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIn(FieldPaymentID, vs...))
}

// PaymentIDNotIn applies the NotIn predicate on the "payment_id" field.
func PaymentIDNotIn(vs ...uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotIn(FieldPaymentID, vs...))
}

// PaymentIDGT applies the GT predicate on the "payment_id" field.
func PaymentIDGT(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGT(FieldPaymentID, v))
}

// PaymentIDGTE applies the GTE predicate on the "payment_id" field.
func PaymentIDGTE(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGTE(FieldPaymentID, v))
}

// PaymentIDLT applies the LT predicate on the "payment_id" field.
func PaymentIDLT(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLT(FieldPaymentID, v))
}

// PaymentIDLTE applies the LTE predicate on the "payment_id" field.
func PaymentIDLTE(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLTE(FieldPaymentID, v))
}

// PaymentIDIsNil applies the IsNil predicate on the "payment_id" field.
func PaymentIDIsNil() predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIsNull(FieldPaymentID))
}

// PaymentIDNotNil applies the NotNil predicate on the "payment_id" field.
func PaymentIDNotNil() predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotNull(FieldPaymentID))
}

// FiatIDEQ applies the EQ predicate on the "fiat_id" field.
func FiatIDEQ(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldFiatID, v))
}

// FiatIDNEQ applies the NEQ predicate on the "fiat_id" field.
func FiatIDNEQ(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNEQ(FieldFiatID, v))
}

// FiatIDIn applies the In predicate on the "fiat_id" field.
func FiatIDIn(vs ...uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIn(FieldFiatID, vs...))
}

// FiatIDNotIn applies the NotIn predicate on the "fiat_id" field.
func FiatIDNotIn(vs ...uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotIn(FieldFiatID, vs...))
}

// FiatIDGT applies the GT predicate on the "fiat_id" field.
func FiatIDGT(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGT(FieldFiatID, v))
}

// FiatIDGTE applies the GTE predicate on the "fiat_id" field.
func FiatIDGTE(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGTE(FieldFiatID, v))
}

// FiatIDLT applies the LT predicate on the "fiat_id" field.
func FiatIDLT(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLT(FieldFiatID, v))
}

// FiatIDLTE applies the LTE predicate on the "fiat_id" field.
func FiatIDLTE(v uuid.UUID) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLTE(FieldFiatID, v))
}

// FiatIDIsNil applies the IsNil predicate on the "fiat_id" field.
func FiatIDIsNil() predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIsNull(FieldFiatID))
}

// FiatIDNotNil applies the NotNil predicate on the "fiat_id" field.
func FiatIDNotNil() predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotNull(FieldFiatID))
}

// PaymentChannelEQ applies the EQ predicate on the "payment_channel" field.
func PaymentChannelEQ(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldPaymentChannel, v))
}

// PaymentChannelNEQ applies the NEQ predicate on the "payment_channel" field.
func PaymentChannelNEQ(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNEQ(FieldPaymentChannel, v))
}

// PaymentChannelIn applies the In predicate on the "payment_channel" field.
func PaymentChannelIn(vs ...string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIn(FieldPaymentChannel, vs...))
}

// PaymentChannelNotIn applies the NotIn predicate on the "payment_channel" field.
func PaymentChannelNotIn(vs ...string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotIn(FieldPaymentChannel, vs...))
}

// PaymentChannelGT applies the GT predicate on the "payment_channel" field.
func PaymentChannelGT(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGT(FieldPaymentChannel, v))
}

// PaymentChannelGTE applies the GTE predicate on the "payment_channel" field.
func PaymentChannelGTE(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGTE(FieldPaymentChannel, v))
}

// PaymentChannelLT applies the LT predicate on the "payment_channel" field.
func PaymentChannelLT(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLT(FieldPaymentChannel, v))
}

// PaymentChannelLTE applies the LTE predicate on the "payment_channel" field.
func PaymentChannelLTE(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLTE(FieldPaymentChannel, v))
}

// PaymentChannelContains applies the Contains predicate on the "payment_channel" field.
func PaymentChannelContains(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldContains(FieldPaymentChannel, v))
}

// PaymentChannelHasPrefix applies the HasPrefix predicate on the "payment_channel" field.
func PaymentChannelHasPrefix(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldHasPrefix(FieldPaymentChannel, v))
}

// PaymentChannelHasSuffix applies the HasSuffix predicate on the "payment_channel" field.
func PaymentChannelHasSuffix(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldHasSuffix(FieldPaymentChannel, v))
}

// PaymentChannelIsNil applies the IsNil predicate on the "payment_channel" field.
func PaymentChannelIsNil() predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIsNull(FieldPaymentChannel))
}

// PaymentChannelNotNil applies the NotNil predicate on the "payment_channel" field.
func PaymentChannelNotNil() predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotNull(FieldPaymentChannel))
}

// PaymentChannelEqualFold applies the EqualFold predicate on the "payment_channel" field.
func PaymentChannelEqualFold(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEqualFold(FieldPaymentChannel, v))
}

// PaymentChannelContainsFold applies the ContainsFold predicate on the "payment_channel" field.
func PaymentChannelContainsFold(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldContainsFold(FieldPaymentChannel, v))
}

// AmountEQ applies the EQ predicate on the "amount" field.
func AmountEQ(v decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldAmount, v))
}

// AmountNEQ applies the NEQ predicate on the "amount" field.
func AmountNEQ(v decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNEQ(FieldAmount, v))
}

// AmountIn applies the In predicate on the "amount" field.
func AmountIn(vs ...decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIn(FieldAmount, vs...))
}

// AmountNotIn applies the NotIn predicate on the "amount" field.
func AmountNotIn(vs ...decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotIn(FieldAmount, vs...))
}

// AmountGT applies the GT predicate on the "amount" field.
func AmountGT(v decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGT(FieldAmount, v))
}

// AmountGTE applies the GTE predicate on the "amount" field.
func AmountGTE(v decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGTE(FieldAmount, v))
}

// AmountLT applies the LT predicate on the "amount" field.
func AmountLT(v decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLT(FieldAmount, v))
}

// AmountLTE applies the LTE predicate on the "amount" field.
func AmountLTE(v decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLTE(FieldAmount, v))
}

// AmountIsNil applies the IsNil predicate on the "amount" field.
func AmountIsNil() predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIsNull(FieldAmount))
}

// AmountNotNil applies the NotNil predicate on the "amount" field.
func AmountNotNil() predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotNull(FieldAmount))
}

// ChannelPaymentIDEQ applies the EQ predicate on the "channel_payment_id" field.
func ChannelPaymentIDEQ(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldChannelPaymentID, v))
}

// ChannelPaymentIDNEQ applies the NEQ predicate on the "channel_payment_id" field.
func ChannelPaymentIDNEQ(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNEQ(FieldChannelPaymentID, v))
}

// ChannelPaymentIDIn applies the In predicate on the "channel_payment_id" field.
func ChannelPaymentIDIn(vs ...string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIn(FieldChannelPaymentID, vs...))
}

// ChannelPaymentIDNotIn applies the NotIn predicate on the "channel_payment_id" field.
func ChannelPaymentIDNotIn(vs ...string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotIn(FieldChannelPaymentID, vs...))
}

// ChannelPaymentIDGT applies the GT predicate on the "channel_payment_id" field.
func ChannelPaymentIDGT(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGT(FieldChannelPaymentID, v))
}

// ChannelPaymentIDGTE applies the GTE predicate on the "channel_payment_id" field.
func ChannelPaymentIDGTE(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGTE(FieldChannelPaymentID, v))
}

// ChannelPaymentIDLT applies the LT predicate on the "channel_payment_id" field.
func ChannelPaymentIDLT(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLT(FieldChannelPaymentID, v))
}

// ChannelPaymentIDLTE applies the LTE predicate on the "channel_payment_id" field.
func ChannelPaymentIDLTE(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLTE(FieldChannelPaymentID, v))
}

// ChannelPaymentIDContains applies the Contains predicate on the "channel_payment_id" field.
func ChannelPaymentIDContains(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldContains(FieldChannelPaymentID, v))
}

// ChannelPaymentIDHasPrefix applies the HasPrefix predicate on the "channel_payment_id" field.
func ChannelPaymentIDHasPrefix(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldHasPrefix(FieldChannelPaymentID, v))
}

// ChannelPaymentIDHasSuffix applies the HasSuffix predicate on the "channel_payment_id" field.
func ChannelPaymentIDHasSuffix(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldHasSuffix(FieldChannelPaymentID, v))
}

// ChannelPaymentIDIsNil applies the IsNil predicate on the "channel_payment_id" field.
func ChannelPaymentIDIsNil() predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIsNull(FieldChannelPaymentID))
}

// ChannelPaymentIDNotNil applies the NotNil predicate on the "channel_payment_id" field.
func ChannelPaymentIDNotNil() predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotNull(FieldChannelPaymentID))
}

// ChannelPaymentIDEqualFold applies the EqualFold predicate on the "channel_payment_id" field.
func ChannelPaymentIDEqualFold(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEqualFold(FieldChannelPaymentID, v))
}

// ChannelPaymentIDContainsFold applies the ContainsFold predicate on the "channel_payment_id" field.
func ChannelPaymentIDContainsFold(v string) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldContainsFold(FieldChannelPaymentID, v))
}

// UsdCurrencyEQ applies the EQ predicate on the "usd_currency" field.
func UsdCurrencyEQ(v decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldEQ(FieldUsdCurrency, v))
}

// UsdCurrencyNEQ applies the NEQ predicate on the "usd_currency" field.
func UsdCurrencyNEQ(v decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNEQ(FieldUsdCurrency, v))
}

// UsdCurrencyIn applies the In predicate on the "usd_currency" field.
func UsdCurrencyIn(vs ...decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIn(FieldUsdCurrency, vs...))
}

// UsdCurrencyNotIn applies the NotIn predicate on the "usd_currency" field.
func UsdCurrencyNotIn(vs ...decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotIn(FieldUsdCurrency, vs...))
}

// UsdCurrencyGT applies the GT predicate on the "usd_currency" field.
func UsdCurrencyGT(v decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGT(FieldUsdCurrency, v))
}

// UsdCurrencyGTE applies the GTE predicate on the "usd_currency" field.
func UsdCurrencyGTE(v decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldGTE(FieldUsdCurrency, v))
}

// UsdCurrencyLT applies the LT predicate on the "usd_currency" field.
func UsdCurrencyLT(v decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLT(FieldUsdCurrency, v))
}

// UsdCurrencyLTE applies the LTE predicate on the "usd_currency" field.
func UsdCurrencyLTE(v decimal.Decimal) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldLTE(FieldUsdCurrency, v))
}

// UsdCurrencyIsNil applies the IsNil predicate on the "usd_currency" field.
func UsdCurrencyIsNil() predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldIsNull(FieldUsdCurrency))
}

// UsdCurrencyNotNil applies the NotNil predicate on the "usd_currency" field.
func UsdCurrencyNotNil() predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.FieldNotNull(FieldUsdCurrency))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PaymentFiat) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PaymentFiat) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PaymentFiat) predicate.PaymentFiat {
	return predicate.PaymentFiat(sql.NotPredicates(p))
}
