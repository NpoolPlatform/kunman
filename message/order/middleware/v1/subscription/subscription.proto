syntax = "proto3";

package order.middleware.subscription.v1;

option go_package = "github.com/NpoolPlatform/kunman/message/order/middleware/v1/subscription";

import "basetypes/order/v1/enums.proto";
import "basetypes/good/v1/enums.proto";
import "basetypes/v1/conds.proto";
import "order/middleware/v1/payment/payment.proto";
import "order/middleware/v1/order/coupon/coupon.proto";
import "order/middleware/v1/order/order.proto";

message SubscriptionOrderReq {
    // Order base
    optional uint32 ID = 10;
    optional string EntID = 20;
    optional string AppID = 30;
    optional string UserID = 40;
    optional string GoodID = 50;
    optional basetypes.good.v1.GoodType GoodType = 60;
    optional string AppGoodID = 70;
    optional string OrderID = 80;
    optional basetypes.order.v1.OrderType OrderType = 100;
    optional basetypes.order.v1.PaymentType PaymentType = 110;
    optional basetypes.order.v1.OrderCreateMethod CreateMethod = 120;

    // Power rental
    optional string GoodValueUSD = 220;
    optional string PaymentAmountUSD = 230;
    optional string DiscountAmountUSD = 240;
    optional string PromotionID = 250;

    // Order state base
    optional basetypes.order.v1.OrderState OrderState = 300;

    // Power rental state
    optional bool UserSetPaid = 410;
    optional bool UserSetCanceled = 420;
    optional bool AdminSetCanceled = 430;
    optional basetypes.order.v1.PaymentState PaymentState = 440;

    optional string LedgerLockID = 510;
    optional string PaymentID = 520;

    // Coupons
    repeated string CouponIDs = 600;
    // Payment balances
    repeated order.middleware.payment.v1.PaymentBalanceReq PaymentBalances = 610;
    // Payment transfers
    repeated order.middleware.payment.v1.PaymentTransferReq PaymentTransfers = 620;
    // Payment fiats
    repeated order.middleware.payment.v1.PaymentFiatReq PaymentFiats = 630;

    optional uint32 LifeSeconds = 640;
    // When create subscription, it's activated event id, otherwise it's updated event id
    optional string DealEventID = 650;
}

message SubscriptionOrder {
    // Base order information
    // @inject_tag: sql:"id"
    uint32 ID = 10;
    // @inject_tag: sql:"ent_id"
    string EntID = 20;
    // @inject_tag: sql:"app_id"
    string AppID = 30;
    // @inject_tag: sql:"user_id"
    string UserID = 40;
    // @inject_tag: sql:"good_id"
    string GoodID = 50;
    // @inject_tag: sql:"good_type"
    string GoodTypeStr = 60;
    basetypes.good.v1.GoodType GoodType = 70;
    // @inject_tag: sql:"app_good_id"
    string AppGoodID = 80;
    // @inject_tag: sql:"order_id"
    string OrderID = 90;
    // @inject_tag: sql:"order_type"
    string OrderTypeStr = 150;
    basetypes.order.v1.OrderType OrderType = 160;
    // @inject_tag: sql:"payment_type"
    string PaymentTypeStr = 170;
    basetypes.order.v1.PaymentType PaymentType = 180;
    // @inject_tag: sql:"create_method"
    string CreateMethodStr = 190;
    basetypes.order.v1.OrderCreateMethod CreateMethod = 200;

    // Base order state information
    // @inject_tag: sql:"order_state"
    string OrderStateStr = 250;
    basetypes.order.v1.OrderState OrderState = 260;

    // Power rental information
    // @inject_tag: sql:"good_value_usd"
    string GoodValueUSD = 300;
    // @inject_tag: sql:"payment_good_value_usd"
    string PaymentGoodValueUSD = 310;
    // @inject_tag: sql:"payment_amount_usd"
    string PaymentAmountUSD = 320;
    // @inject_tag: sql:"discount_amount_usd"
    string DiscountAmountUSD = 330;
    // @inject_tag: sql:"promotion_id"
    string PromotionID = 340;
    // @inject_tag: sql:"life_seconds"
    uint32 LifeSeconds = 350;
    // @inject_tag: sql:"deal_event_id"
    string DealEventID = 360;

    // Power rental state information
    // @inject_tag: sql:"cancel_state"
    string CancelStateStr = 400;
    basetypes.order.v1.OrderState CancelState = 410;
    // @inject_tag: sql:"canceled_at"
    uint32 CanceledAt = 420;
    // @inject_tag: sql:"paid_at"
    uint32 PaidAt = 430;
    // @inject_tag: sql:"user_set_paid"
    bool UserSetPaid = 440;
    // @inject_tag: sql:"user_set_canceled"
    bool UserSetCanceled = 450;
    // @inject_tag: sql:"admin_set_canceled"
    bool AdminSetCanceled = 460;
    // @inject_tag: sql:"payment_state"
    string PaymentStateStr = 470;
    basetypes.order.v1.PaymentState PaymentState = 480;

    // @inject_tag: sql:"payment_id"
    string PaymentID = 500;
    // @inject_tag: sql:"ledger_lock_id"
    string LedgerLockID = 510;

    // Coupons
    repeated order.middleware.order1.coupon.v1.OrderCouponInfo Coupons = 600;
    // Payment balances
    repeated order.middleware.payment.v1.PaymentBalanceInfo PaymentBalances = 610;
    // Payment transfers
    repeated order.middleware.payment.v1.PaymentTransferInfo PaymentTransfers = 620;
    // Payment fiats
    repeated order.middleware.payment.v1.PaymentFiatInfo PaymentFiats = 630;

    // @inject_tag: sql:"created_at"
    uint32 CreatedAt = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt = 1010;
}

message Conds {
    // order
    optional basetypes.v1.Uint32Val ID = 10;
    optional basetypes.v1.Uint32SliceVal IDs = 20;
    optional basetypes.v1.StringVal EntID = 30;
    optional basetypes.v1.StringSliceVal EntIDs = 40;
    optional basetypes.v1.StringVal OrderID = 50;
    optional basetypes.v1.StringSliceVal OrderIDs = 60;
    optional basetypes.v1.StringVal AppID = 70;
    optional basetypes.v1.StringVal UserID = 80;
    optional basetypes.v1.StringVal GoodID = 90;
    optional basetypes.v1.StringSliceVal GoodIDs = 100;
    optional basetypes.v1.StringVal AppGoodID = 110;
    optional basetypes.v1.StringSliceVal AppGoodIDs = 120;
    optional basetypes.v1.Uint32Val OrderType = 150;
    optional basetypes.v1.Uint32Val PaymentType = 160;
    optional basetypes.v1.Uint32SliceVal PaymentTypes = 170;

    // orderstate
    optional basetypes.v1.Uint32Val OrderState = 200;
    optional basetypes.v1.Uint32SliceVal OrderStates = 210;

    // power rental
    optional basetypes.v1.BoolVal UserSetCanceled = 300;
    optional basetypes.v1.BoolVal AdminSetCanceled = 310;

    // power rental state
    optional basetypes.v1.Uint32Val PaymentState = 400;
    optional basetypes.v1.Uint32SliceVal PaymentStates = 410;

    // coupon
    optional basetypes.v1.StringVal CouponID = 500;
    optional basetypes.v1.StringSliceVal CouponIDs = 510;

    // other
    optional basetypes.v1.Uint32Val CreatedAt = 600;
    optional basetypes.v1.Uint32Val UpdatedAt = 610;
    optional basetypes.v1.Uint32Val PaidAt = 620;
}

