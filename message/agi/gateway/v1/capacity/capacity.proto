syntax = "proto3";

package agi.gateway.capacity.v1;

option go_package = "github.com/NpoolPlatform/kunman/message/agi/gateway/v1/capacity";

import "agi/middleware/v1/capacity/capacity.proto";
import "google/api/annotations.proto";
import "basetypes/agi/v1/enums.proto";

// Service Name
service Gateway {
    rpc AdminCreateCapacity(AdminCreateCapacityRequest) returns (AdminCreateCapacityResponse) {
        option (google.api.http) = {
            post: "/v1/admin/create/capacity"
            body: "*"
        };
    }
    rpc CreateCapacity(CreateCapacityRequest) returns (CreateCapacityResponse) {
        option (google.api.http) = {
            post: "/v1/create/capacity"
            body: "*"
        };
    }
    rpc UpdateCapacity(UpdateCapacityRequest) returns (UpdateCapacityResponse) {
        option (google.api.http) = {
            post: "/v1/update/capacity"
            body: "*"
        };
    }
    rpc AdminGetCapacities(AdminGetCapacitiesRequest) returns (AdminGetCapacitiesResponse) {
        option (google.api.http) = {
            post: "/v1/admin/get/capacities"
            body: "*"
        };
    }
    rpc GetCapacities(GetCapacitiesRequest) returns (GetCapacitiesResponse) {
        option (google.api.http) = {
            post: "/v1/get/capacities"
            body: "*"
        };
    }
    rpc AdminCountCapacities(AdminCountCapacitiesRequest) returns (AdminCountCapacitiesResponse) {
        option (google.api.http) = {
            post: "/v1/admin/count/capacities"
            body: "*"
        };
    }
    rpc CountCapacities(CountCapacitiesRequest) returns (CountCapacitiesResponse) {
        option (google.api.http) = {
            post: "/v1/count/capacities"
            body: "*"
        };
    }
    rpc DeleteCapacity(DeleteCapacityRequest) returns (DeleteCapacityResponse) {
        option (google.api.http) = {
            post: "/v1/delete/capacity"
            body: "*"
        };
    }
}

message AdminCreateCapacityRequest {
    string TargetAppID = 10;
    string AppGoodID = 20;
    basetypes.agi.v1.CapacityKey CapacityKey = 30;
    string Value = 40;
    string Description = 50;
}

message AdminCreateCapacityResponse {
    middleware.capacity.v1.Capacity Info = 10;
}

message CreateCapacityRequest {
    string AppID = 10;
    string AppGoodID = 20;
    basetypes.agi.v1.CapacityKey CapacityKey = 30;
    string Value = 40;
    string Description = 50;
}

message CreateCapacityResponse {
    middleware.capacity.v1.Capacity Info = 10;
}

message UpdateCapacityRequest {
    uint32 ID = 10;
    string EntID = 20;
    optional string Value = 30;
    optional string Description = 40;
}

message UpdateCapacityResponse {
    middleware.capacity.v1.Capacity Info = 10;
}

message GetCapacityRequest {
    string EntID = 10;
}

message GetCapacityResponse {
    middleware.capacity.v1.Capacity Info = 10;
}

message AdminGetCapacitiesRequest {
    optional string TargetAppID = 10;
    optional string AppGoodID = 20;
    int32 Offset = 30;
    int32 Limit = 40;
}

message AdminGetCapacitiesResponse {
    repeated middleware.capacity.v1.Capacity Infos = 10;
}

message GetCapacitiesRequest {
    string AppID = 10;
    optional string AppGoodID = 20;
    int32 Offset = 30;
    int32 Limit = 40;
}

message GetCapacitiesResponse {
    repeated middleware.capacity.v1.Capacity Infos = 10;
}

message AdminCountCapacitiesRequest {
    optional string TargetAppID = 10;
    optional string AppGoodID = 20;
}

message AdminCountCapacitiesResponse {
    uint32 Total = 10;
}

message CountCapacitiesRequest {
    optional string AppGoodID = 10;
}

message CountCapacitiesResponse {
    uint32 Total = 10;
}

message DeleteCapacityRequest {
    uint32 ID = 10;
    string EntID = 20;
}

message DeleteCapacityResponse {
    middleware.capacity.v1.Capacity Info = 10;
}

