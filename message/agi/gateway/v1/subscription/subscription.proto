syntax = "proto3";

package agi.gateway.subscription.v1;

option go_package = "github.com/NpoolPlatform/kunman/message/agi/gateway/v1/subscription";

import "agi/middleware/v1/subscription/subscription.proto";
import "google/api/annotations.proto";
import "basetypes/agi/v1/enums.proto";

// Service Name
service Gateway {
    rpc GetSubscription(GetSubscriptionRequest) returns (GetSubscriptionResponse) {
        option (google.api.http) = {
            post: "/v1/get/subscription"
            body: "*"
        };
    }
    rpc GetSubscriptions(GetSubscriptionsRequest) returns (GetSubscriptionsResponse) {
        option (google.api.http) = {
            post: "/v1/get/subscriptions"
            body: "*"
        };
    }
    rpc CountSubscriptions(CountSubscriptionsRequest) returns (CountSubscriptionsResponse) {
        option (google.api.http) = {
            post: "/v1/count/subscriptions"
            body: "*"
        };
    }
}

message GetSubscriptionRequest {
    optional string AppID = 10;
    optional string UserID = 20;
    optional string EntID = 30;
}

message GetSubscriptionResponse {
    middleware.subscription.v1.Subscription Info = 10;
}

message GetSubscriptionsRequest {
    optional string AppGoodID = 10;
    int32 Offset = 20;
    int32 Limit = 30;
}

message GetSubscriptionsResponse {
    repeated middleware.subscription.v1.Subscription Infos = 10;
}

message CountSubscriptionsRequest {
    optional string AppGoodID = 10;
}

message CountSubscriptionsResponse {
    uint32 Total = 10;
}
