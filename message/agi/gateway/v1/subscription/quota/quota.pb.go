// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: agi/gateway/v1/subscription/quota/quota.proto

package quota

import (
	reflect "reflect"
	sync "sync"

	quota "github.com/NpoolPlatform/kunman/message/agi/middleware/v1/subscription/quota"
	_ "github.com/NpoolPlatform/kunman/message/basetypes/agi/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdminGetQuotasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID  *string `protobuf:"bytes,10,opt,name=TargetAppID,proto3,oneof" json:"TargetAppID,omitempty"`
	TargetUserID *string `protobuf:"bytes,20,opt,name=TargetUserID,proto3,oneof" json:"TargetUserID,omitempty"`
	Offset       int32   `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit        int32   `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *AdminGetQuotasRequest) Reset() {
	*x = AdminGetQuotasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetQuotasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetQuotasRequest) ProtoMessage() {}

func (x *AdminGetQuotasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetQuotasRequest.ProtoReflect.Descriptor instead.
func (*AdminGetQuotasRequest) Descriptor() ([]byte, []int) {
	return file_agi_gateway_v1_subscription_quota_quota_proto_rawDescGZIP(), []int{0}
}

func (x *AdminGetQuotasRequest) GetTargetAppID() string {
	if x != nil && x.TargetAppID != nil {
		return *x.TargetAppID
	}
	return ""
}

func (x *AdminGetQuotasRequest) GetTargetUserID() string {
	if x != nil && x.TargetUserID != nil {
		return *x.TargetUserID
	}
	return ""
}

func (x *AdminGetQuotasRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AdminGetQuotasRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type AdminGetQuotasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*quota.Quota `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *AdminGetQuotasResponse) Reset() {
	*x = AdminGetQuotasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetQuotasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetQuotasResponse) ProtoMessage() {}

func (x *AdminGetQuotasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetQuotasResponse.ProtoReflect.Descriptor instead.
func (*AdminGetQuotasResponse) Descriptor() ([]byte, []int) {
	return file_agi_gateway_v1_subscription_quota_quota_proto_rawDescGZIP(), []int{1}
}

func (x *AdminGetQuotasResponse) GetInfos() []*quota.Quota {
	if x != nil {
		return x.Infos
	}
	return nil
}

type AdminCountQuotasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAppID  *string `protobuf:"bytes,10,opt,name=TargetAppID,proto3,oneof" json:"TargetAppID,omitempty"`
	TargetUserID *string `protobuf:"bytes,20,opt,name=TargetUserID,proto3,oneof" json:"TargetUserID,omitempty"`
}

func (x *AdminCountQuotasRequest) Reset() {
	*x = AdminCountQuotasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCountQuotasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCountQuotasRequest) ProtoMessage() {}

func (x *AdminCountQuotasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCountQuotasRequest.ProtoReflect.Descriptor instead.
func (*AdminCountQuotasRequest) Descriptor() ([]byte, []int) {
	return file_agi_gateway_v1_subscription_quota_quota_proto_rawDescGZIP(), []int{2}
}

func (x *AdminCountQuotasRequest) GetTargetAppID() string {
	if x != nil && x.TargetAppID != nil {
		return *x.TargetAppID
	}
	return ""
}

func (x *AdminCountQuotasRequest) GetTargetUserID() string {
	if x != nil && x.TargetUserID != nil {
		return *x.TargetUserID
	}
	return ""
}

type AdminCountQuotasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32 `protobuf:"varint,10,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *AdminCountQuotasResponse) Reset() {
	*x = AdminCountQuotasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCountQuotasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCountQuotasResponse) ProtoMessage() {}

func (x *AdminCountQuotasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCountQuotasResponse.ProtoReflect.Descriptor instead.
func (*AdminCountQuotasResponse) Descriptor() ([]byte, []int) {
	return file_agi_gateway_v1_subscription_quota_quota_proto_rawDescGZIP(), []int{3}
}

func (x *AdminCountQuotasResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetQuotasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID        string  `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetUserID *string `protobuf:"bytes,20,opt,name=TargetUserID,proto3,oneof" json:"TargetUserID,omitempty"`
	Offset       int32   `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit        int32   `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetQuotasRequest) Reset() {
	*x = GetQuotasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuotasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuotasRequest) ProtoMessage() {}

func (x *GetQuotasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuotasRequest.ProtoReflect.Descriptor instead.
func (*GetQuotasRequest) Descriptor() ([]byte, []int) {
	return file_agi_gateway_v1_subscription_quota_quota_proto_rawDescGZIP(), []int{4}
}

func (x *GetQuotasRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetQuotasRequest) GetTargetUserID() string {
	if x != nil && x.TargetUserID != nil {
		return *x.TargetUserID
	}
	return ""
}

func (x *GetQuotasRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetQuotasRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetQuotasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*quota.Quota `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetQuotasResponse) Reset() {
	*x = GetQuotasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuotasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuotasResponse) ProtoMessage() {}

func (x *GetQuotasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuotasResponse.ProtoReflect.Descriptor instead.
func (*GetQuotasResponse) Descriptor() ([]byte, []int) {
	return file_agi_gateway_v1_subscription_quota_quota_proto_rawDescGZIP(), []int{5}
}

func (x *GetQuotasResponse) GetInfos() []*quota.Quota {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CountQuotasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID        string  `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TargetUserID *string `protobuf:"bytes,20,opt,name=TargetUserID,proto3,oneof" json:"TargetUserID,omitempty"`
}

func (x *CountQuotasRequest) Reset() {
	*x = CountQuotasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountQuotasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountQuotasRequest) ProtoMessage() {}

func (x *CountQuotasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountQuotasRequest.ProtoReflect.Descriptor instead.
func (*CountQuotasRequest) Descriptor() ([]byte, []int) {
	return file_agi_gateway_v1_subscription_quota_quota_proto_rawDescGZIP(), []int{6}
}

func (x *CountQuotasRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CountQuotasRequest) GetTargetUserID() string {
	if x != nil && x.TargetUserID != nil {
		return *x.TargetUserID
	}
	return ""
}

type CountQuotasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32 `protobuf:"varint,10,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *CountQuotasResponse) Reset() {
	*x = CountQuotasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountQuotasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountQuotasResponse) ProtoMessage() {}

func (x *CountQuotasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountQuotasResponse.ProtoReflect.Descriptor instead.
func (*CountQuotasResponse) Descriptor() ([]byte, []int) {
	return file_agi_gateway_v1_subscription_quota_quota_proto_rawDescGZIP(), []int{7}
}

func (x *CountQuotasResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetMyQuotasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Offset int32  `protobuf:"varint,30,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32  `protobuf:"varint,40,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetMyQuotasRequest) Reset() {
	*x = GetMyQuotasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyQuotasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyQuotasRequest) ProtoMessage() {}

func (x *GetMyQuotasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyQuotasRequest.ProtoReflect.Descriptor instead.
func (*GetMyQuotasRequest) Descriptor() ([]byte, []int) {
	return file_agi_gateway_v1_subscription_quota_quota_proto_rawDescGZIP(), []int{8}
}

func (x *GetMyQuotasRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetMyQuotasRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetMyQuotasRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetMyQuotasRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetMyQuotasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*quota.Quota `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetMyQuotasResponse) Reset() {
	*x = GetMyQuotasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyQuotasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyQuotasResponse) ProtoMessage() {}

func (x *GetMyQuotasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyQuotasResponse.ProtoReflect.Descriptor instead.
func (*GetMyQuotasResponse) Descriptor() ([]byte, []int) {
	return file_agi_gateway_v1_subscription_quota_quota_proto_rawDescGZIP(), []int{9}
}

func (x *GetMyQuotasResponse) GetInfos() []*quota.Quota {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CountMyQuotasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,10,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,20,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *CountMyQuotasRequest) Reset() {
	*x = CountMyQuotasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountMyQuotasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountMyQuotasRequest) ProtoMessage() {}

func (x *CountMyQuotasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountMyQuotasRequest.ProtoReflect.Descriptor instead.
func (*CountMyQuotasRequest) Descriptor() ([]byte, []int) {
	return file_agi_gateway_v1_subscription_quota_quota_proto_rawDescGZIP(), []int{10}
}

func (x *CountMyQuotasRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CountMyQuotasRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type CountMyQuotasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32 `protobuf:"varint,10,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *CountMyQuotasResponse) Reset() {
	*x = CountMyQuotasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountMyQuotasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountMyQuotasResponse) ProtoMessage() {}

func (x *CountMyQuotasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountMyQuotasResponse.ProtoReflect.Descriptor instead.
func (*CountMyQuotasResponse) Descriptor() ([]byte, []int) {
	return file_agi_gateway_v1_subscription_quota_quota_proto_rawDescGZIP(), []int{11}
}

func (x *CountMyQuotasResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_agi_gateway_v1_subscription_quota_quota_proto protoreflect.FileDescriptor

var file_agi_gateway_v1_subscription_quota_quota_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x61, 0x67, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x21, 0x61, 0x67, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x1a, 0x30, 0x61, 0x67, 0x69, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x61, 0x67,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb6, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x27, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x5b, 0x0a, 0x16, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x67, 0x69, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x27, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61,
	0x67, 0x69, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x22, 0x64, 0x0a, 0x12, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x0c,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x2b, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x70, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x58, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x67,
	0x69, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x44, 0x0a, 0x14, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x2d, 0x0a, 0x15, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x79,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x32, 0x93, 0x08, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x12, 0xb2, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x12, 0x38, 0x2e, 0x61, 0x67, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e,
	0x61, 0x67, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25,
	0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0xba, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0x3a, 0x2e, 0x61, 0x67, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x61, 0x67, 0x69, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x12, 0x9d, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73,
	0x12, 0x33, 0x2e, 0x61, 0x67, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x67, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x12, 0xa5, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x12, 0x35, 0x2e, 0x61, 0x67, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x67, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0xa1, 0x01, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0x33, 0x2e, 0x61, 0x67, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x61, 0x67, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a,
	0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6d, 0x79, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0xa9,
	0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73,
	0x12, 0x35, 0x2e, 0x61, 0x67, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x67, 0x69, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x6d, 0x79, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6b, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x67, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_agi_gateway_v1_subscription_quota_quota_proto_rawDescOnce sync.Once
	file_agi_gateway_v1_subscription_quota_quota_proto_rawDescData = file_agi_gateway_v1_subscription_quota_quota_proto_rawDesc
)

func file_agi_gateway_v1_subscription_quota_quota_proto_rawDescGZIP() []byte {
	file_agi_gateway_v1_subscription_quota_quota_proto_rawDescOnce.Do(func() {
		file_agi_gateway_v1_subscription_quota_quota_proto_rawDescData = protoimpl.X.CompressGZIP(file_agi_gateway_v1_subscription_quota_quota_proto_rawDescData)
	})
	return file_agi_gateway_v1_subscription_quota_quota_proto_rawDescData
}

var (
	file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
	file_agi_gateway_v1_subscription_quota_quota_proto_goTypes  = []interface{}{
		(*AdminGetQuotasRequest)(nil),    // 0: agi.gateway.subscription.quota.v1.AdminGetQuotasRequest
		(*AdminGetQuotasResponse)(nil),   // 1: agi.gateway.subscription.quota.v1.AdminGetQuotasResponse
		(*AdminCountQuotasRequest)(nil),  // 2: agi.gateway.subscription.quota.v1.AdminCountQuotasRequest
		(*AdminCountQuotasResponse)(nil), // 3: agi.gateway.subscription.quota.v1.AdminCountQuotasResponse
		(*GetQuotasRequest)(nil),         // 4: agi.gateway.subscription.quota.v1.GetQuotasRequest
		(*GetQuotasResponse)(nil),        // 5: agi.gateway.subscription.quota.v1.GetQuotasResponse
		(*CountQuotasRequest)(nil),       // 6: agi.gateway.subscription.quota.v1.CountQuotasRequest
		(*CountQuotasResponse)(nil),      // 7: agi.gateway.subscription.quota.v1.CountQuotasResponse
		(*GetMyQuotasRequest)(nil),       // 8: agi.gateway.subscription.quota.v1.GetMyQuotasRequest
		(*GetMyQuotasResponse)(nil),      // 9: agi.gateway.subscription.quota.v1.GetMyQuotasResponse
		(*CountMyQuotasRequest)(nil),     // 10: agi.gateway.subscription.quota.v1.CountMyQuotasRequest
		(*CountMyQuotasResponse)(nil),    // 11: agi.gateway.subscription.quota.v1.CountMyQuotasResponse
		(*quota.Quota)(nil),              // 12: agi.middleware.subscription.quota.v1.Quota
	}
)
var file_agi_gateway_v1_subscription_quota_quota_proto_depIdxs = []int32{
	12, // 0: agi.gateway.subscription.quota.v1.AdminGetQuotasResponse.Infos:type_name -> agi.middleware.subscription.quota.v1.Quota
	12, // 1: agi.gateway.subscription.quota.v1.GetQuotasResponse.Infos:type_name -> agi.middleware.subscription.quota.v1.Quota
	12, // 2: agi.gateway.subscription.quota.v1.GetMyQuotasResponse.Infos:type_name -> agi.middleware.subscription.quota.v1.Quota
	0,  // 3: agi.gateway.subscription.quota.v1.Gateway.AdminGetQuotas:input_type -> agi.gateway.subscription.quota.v1.AdminGetQuotasRequest
	2,  // 4: agi.gateway.subscription.quota.v1.Gateway.AdminCountQuotas:input_type -> agi.gateway.subscription.quota.v1.AdminCountQuotasRequest
	4,  // 5: agi.gateway.subscription.quota.v1.Gateway.GetQuotas:input_type -> agi.gateway.subscription.quota.v1.GetQuotasRequest
	6,  // 6: agi.gateway.subscription.quota.v1.Gateway.CountQuotas:input_type -> agi.gateway.subscription.quota.v1.CountQuotasRequest
	4,  // 7: agi.gateway.subscription.quota.v1.Gateway.GetMyQuotas:input_type -> agi.gateway.subscription.quota.v1.GetQuotasRequest
	6,  // 8: agi.gateway.subscription.quota.v1.Gateway.CountMyQuotas:input_type -> agi.gateway.subscription.quota.v1.CountQuotasRequest
	1,  // 9: agi.gateway.subscription.quota.v1.Gateway.AdminGetQuotas:output_type -> agi.gateway.subscription.quota.v1.AdminGetQuotasResponse
	3,  // 10: agi.gateway.subscription.quota.v1.Gateway.AdminCountQuotas:output_type -> agi.gateway.subscription.quota.v1.AdminCountQuotasResponse
	5,  // 11: agi.gateway.subscription.quota.v1.Gateway.GetQuotas:output_type -> agi.gateway.subscription.quota.v1.GetQuotasResponse
	7,  // 12: agi.gateway.subscription.quota.v1.Gateway.CountQuotas:output_type -> agi.gateway.subscription.quota.v1.CountQuotasResponse
	5,  // 13: agi.gateway.subscription.quota.v1.Gateway.GetMyQuotas:output_type -> agi.gateway.subscription.quota.v1.GetQuotasResponse
	7,  // 14: agi.gateway.subscription.quota.v1.Gateway.CountMyQuotas:output_type -> agi.gateway.subscription.quota.v1.CountQuotasResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_agi_gateway_v1_subscription_quota_quota_proto_init() }
func file_agi_gateway_v1_subscription_quota_quota_proto_init() {
	if File_agi_gateway_v1_subscription_quota_quota_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetQuotasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetQuotasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCountQuotasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCountQuotasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuotasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuotasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountQuotasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountQuotasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyQuotasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyQuotasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountMyQuotasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountMyQuotasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agi_gateway_v1_subscription_quota_quota_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agi_gateway_v1_subscription_quota_quota_proto_goTypes,
		DependencyIndexes: file_agi_gateway_v1_subscription_quota_quota_proto_depIdxs,
		MessageInfos:      file_agi_gateway_v1_subscription_quota_quota_proto_msgTypes,
	}.Build()
	File_agi_gateway_v1_subscription_quota_quota_proto = out.File
	file_agi_gateway_v1_subscription_quota_quota_proto_rawDesc = nil
	file_agi_gateway_v1_subscription_quota_quota_proto_goTypes = nil
	file_agi_gateway_v1_subscription_quota_quota_proto_depIdxs = nil
}
