syntax = "proto3";

package agi.middleware.subscription.v1;

option go_package = "github.com/NpoolPlatform/kunman/message/agi/middleware/v1/subscription";

import "basetypes/agi/v1/enums.proto";
import "basetypes/order/v1/enums.proto";
import "basetypes/v1/conds.proto";

message SubscriptionReq {
    optional uint32 ID = 10;
    optional string EntID = 20;
    optional string AppID = 30;
    optional string UserID = 40;
    optional string AppGoodID = 50;
    optional uint32 NextExtendAt = 60;
    optional uint32 PermanentQuota = 70;
    optional uint32 ConsumedQuota = 90;

    optional bool PayWithCoinBalance = 91;

    // For fiat payment
    optional string SubscriptionID = 100;
    optional basetypes.order.v1.FiatPaymentChannel FiatPaymentChannel = 110;
    optional uint32 LastPaymentAt = 120;
    optional string LastUpdatedEventID = 130;
    optional uint32 ActivatedAt = 140;
    optional string ActiviatedEventID = 150;
    optional bool Canceled = 160;
    optional string CanceledEventID = 170;
}

message Subscription {
    // @inject_tag: sql:"id"
    uint32 ID = 10;
    // @inject_tag: sql:"ent_id"
    string EntID = 20;
    // @inject_tag: sql:"app_id"
    string AppID = 30;
    // @inject_tag: sql:"user_id"
    string UserID = 40;
    // @inject_tag: sql:"app_good_id"
    string AppGoodID = 50;
    // @inject_tag: sql:"next_extend_at"
    uint32 NextExtendAt = 60;
    // @inject_tag: sql:"permanent_quota"
    uint32 PermanentQuota = 70;
    // @inject_tag: sql:"consumed_quota"
    uint32 ConsumedQuota = 80;
    // @inject_tag: sql:"pay_with_coin_balance"
    bool PayWithCoinBalance = 81;

    // @inject_tag: sql:"subscription_id"
    string SubscriptionID = 90;
    // @inject_tag: sql:"fiat_payment_channel"
    string FiatPaymentChannelStr = 100;
    basetypes.order.v1.FiatPaymentChannel FiatPaymentChannel = 110;
    // @inject_tag: sql:"last_payment_at"
    uint32 LastPaymentAt = 120;

    // @inject_tag: sql:"last_updated_event_id"
    string LastUpdatedEventID = 130;
    // @inject_tag: sql:"activated_at"
    uint32 ActivatedAt = 140;
    // @inject_tag: sql:"activated_event_id"
    string ActivatedEventID = 150;

    // @inject_tag: sql:"created_at"
    uint32 CreatedAt = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt = 2000;
}

message Conds {
    optional basetypes.v1.Uint32Val ID = 10;
    optional basetypes.v1.Uint32SliceVal IDs = 20;
    optional basetypes.v1.StringVal EntID = 30;
    optional basetypes.v1.StringSliceVal EntIDs = 40;
    optional basetypes.v1.StringVal AppGoodID = 50;
    optional basetypes.v1.StringSliceVal AppGoodIDs = 60;
    optional basetypes.v1.StringVal AppID = 70;
    optional basetypes.v1.StringSliceVal AppIDs = 80;
    optional basetypes.v1.StringVal UserID = 90;
    optional basetypes.v1.StringSliceVal UserIDs = 100;
}

