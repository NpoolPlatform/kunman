// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: miningpool/middleware/v1/pool/pool.proto

package pool

import (
	reflect "reflect"
	sync "sync"

	v1 "github.com/NpoolPlatform/kunman/message/basetypes/miningpool/v1"
	v11 "github.com/NpoolPlatform/kunman/message/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PoolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             *uint32            `protobuf:"varint,9,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID          *string            `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	MiningPoolType *v1.MiningPoolType `protobuf:"varint,20,opt,name=MiningPoolType,proto3,enum=basetypes.miningpool.v1.MiningPoolType,oneof" json:"MiningPoolType,omitempty"`
	Name           *string            `protobuf:"bytes,30,opt,name=Name,proto3,oneof" json:"Name,omitempty"`
	Site           *string            `protobuf:"bytes,40,opt,name=Site,proto3,oneof" json:"Site,omitempty"`
	Logo           *string            `protobuf:"bytes,50,opt,name=Logo,proto3,oneof" json:"Logo,omitempty"`
	Description    *string            `protobuf:"bytes,60,opt,name=Description,proto3,oneof" json:"Description,omitempty"`
}

func (x *PoolReq) Reset() {
	*x = PoolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miningpool_middleware_v1_pool_pool_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolReq) ProtoMessage() {}

func (x *PoolReq) ProtoReflect() protoreflect.Message {
	mi := &file_miningpool_middleware_v1_pool_pool_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolReq.ProtoReflect.Descriptor instead.
func (*PoolReq) Descriptor() ([]byte, []int) {
	return file_miningpool_middleware_v1_pool_pool_proto_rawDescGZIP(), []int{0}
}

func (x *PoolReq) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *PoolReq) GetEntID() string {
	if x != nil && x.EntID != nil {
		return *x.EntID
	}
	return ""
}

func (x *PoolReq) GetMiningPoolType() v1.MiningPoolType {
	if x != nil && x.MiningPoolType != nil {
		return *x.MiningPoolType
	}
	return v1.MiningPoolType(0)
}

func (x *PoolReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PoolReq) GetSite() string {
	if x != nil && x.Site != nil {
		return *x.Site
	}
	return ""
}

func (x *PoolReq) GetLogo() string {
	if x != nil && x.Logo != nil {
		return *x.Logo
	}
	return ""
}

func (x *PoolReq) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type Pool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"ent_id"
	EntID string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty" sql:"ent_id"`
	// @inject_tag: sql:"mining_pool_type"
	MiningPoolTypeStr string            `protobuf:"bytes,30,opt,name=MiningPoolTypeStr,proto3" json:"MiningPoolTypeStr,omitempty" sql:"mining_pool_type"`
	MiningPoolType    v1.MiningPoolType `protobuf:"varint,31,opt,name=MiningPoolType,proto3,enum=basetypes.miningpool.v1.MiningPoolType" json:"MiningPoolType,omitempty"`
	// @inject_tag: sql:"name"
	Name string `protobuf:"bytes,40,opt,name=Name,proto3" json:"Name,omitempty" sql:"name"`
	// @inject_tag: sql:"site"
	Site string `protobuf:"bytes,50,opt,name=Site,proto3" json:"Site,omitempty" sql:"site"`
	// @inject_tag: sql:"logo"
	Logo string `protobuf:"bytes,60,opt,name=Logo,proto3" json:"Logo,omitempty" sql:"logo"`
	// @inject_tag: sql:"description"
	Description string `protobuf:"bytes,70,opt,name=Description,proto3" json:"Description,omitempty" sql:"description"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,110,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,120,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *Pool) Reset() {
	*x = Pool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miningpool_middleware_v1_pool_pool_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pool) ProtoMessage() {}

func (x *Pool) ProtoReflect() protoreflect.Message {
	mi := &file_miningpool_middleware_v1_pool_pool_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pool.ProtoReflect.Descriptor instead.
func (*Pool) Descriptor() ([]byte, []int) {
	return file_miningpool_middleware_v1_pool_pool_proto_rawDescGZIP(), []int{1}
}

func (x *Pool) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Pool) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *Pool) GetMiningPoolTypeStr() string {
	if x != nil {
		return x.MiningPoolTypeStr
	}
	return ""
}

func (x *Pool) GetMiningPoolType() v1.MiningPoolType {
	if x != nil {
		return x.MiningPoolType
	}
	return v1.MiningPoolType(0)
}

func (x *Pool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pool) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *Pool) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Pool) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Pool) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Pool) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             *v11.Uint32Val      `protobuf:"bytes,9,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID          *v11.StringVal      `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	MiningPoolType *v11.Uint32Val      `protobuf:"bytes,20,opt,name=MiningPoolType,proto3,oneof" json:"MiningPoolType,omitempty"`
	Name           *v11.StringVal      `protobuf:"bytes,30,opt,name=Name,proto3,oneof" json:"Name,omitempty"`
	EntIDs         *v11.StringSliceVal `protobuf:"bytes,70,opt,name=EntIDs,proto3,oneof" json:"EntIDs,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miningpool_middleware_v1_pool_pool_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_miningpool_middleware_v1_pool_pool_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_miningpool_middleware_v1_pool_pool_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetID() *v11.Uint32Val {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Conds) GetEntID() *v11.StringVal {
	if x != nil {
		return x.EntID
	}
	return nil
}

func (x *Conds) GetMiningPoolType() *v11.Uint32Val {
	if x != nil {
		return x.MiningPoolType
	}
	return nil
}

func (x *Conds) GetName() *v11.StringVal {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Conds) GetEntIDs() *v11.StringSliceVal {
	if x != nil {
		return x.EntIDs
	}
	return nil
}

var File_miningpool_middleware_v1_pool_pool_proto protoreflect.FileDescriptor

var file_miningpool_middleware_v1_pool_pool_proto_rawDesc = []byte{
	0x0a, 0x28, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6f, 0x6c, 0x2f,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x6d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x18, 0x62, 0x61, 0x73, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x02, 0x0a, 0x07, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x45, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x54, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70,
	0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x02, 0x52, 0x0e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x53, 0x69, 0x74, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x04, 0x53, 0x69, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x04, 0x4c, 0x6f,
	0x67, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x53, 0x69,
	0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4c, 0x6f, 0x67, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc5, 0x02, 0x0a, 0x04,
	0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x12, 0x4f, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x27, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6d, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x4d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x69, 0x74, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xd4, 0x02, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x05, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x44, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x48, 0x02, 0x52, 0x0e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x69,
	0x63, 0x65, 0x56, 0x61, 0x6c, 0x48, 0x04, 0x52, 0x06, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x88,
	0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e,
	0x74, 0x49, 0x44, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6b, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c,
	0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x6f, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_miningpool_middleware_v1_pool_pool_proto_rawDescOnce sync.Once
	file_miningpool_middleware_v1_pool_pool_proto_rawDescData = file_miningpool_middleware_v1_pool_pool_proto_rawDesc
)

func file_miningpool_middleware_v1_pool_pool_proto_rawDescGZIP() []byte {
	file_miningpool_middleware_v1_pool_pool_proto_rawDescOnce.Do(func() {
		file_miningpool_middleware_v1_pool_pool_proto_rawDescData = protoimpl.X.CompressGZIP(file_miningpool_middleware_v1_pool_pool_proto_rawDescData)
	})
	return file_miningpool_middleware_v1_pool_pool_proto_rawDescData
}

var (
	file_miningpool_middleware_v1_pool_pool_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
	file_miningpool_middleware_v1_pool_pool_proto_goTypes  = []interface{}{
		(*PoolReq)(nil),            // 0: miningpool.middleware.pool.v1.PoolReq
		(*Pool)(nil),               // 1: miningpool.middleware.pool.v1.Pool
		(*Conds)(nil),              // 2: miningpool.middleware.pool.v1.Conds
		(v1.MiningPoolType)(0),     // 3: basetypes.miningpool.v1.MiningPoolType
		(*v11.Uint32Val)(nil),      // 4: basetypes.v1.Uint32Val
		(*v11.StringVal)(nil),      // 5: basetypes.v1.StringVal
		(*v11.StringSliceVal)(nil), // 6: basetypes.v1.StringSliceVal
	}
)
var file_miningpool_middleware_v1_pool_pool_proto_depIdxs = []int32{
	3, // 0: miningpool.middleware.pool.v1.PoolReq.MiningPoolType:type_name -> basetypes.miningpool.v1.MiningPoolType
	3, // 1: miningpool.middleware.pool.v1.Pool.MiningPoolType:type_name -> basetypes.miningpool.v1.MiningPoolType
	4, // 2: miningpool.middleware.pool.v1.Conds.ID:type_name -> basetypes.v1.Uint32Val
	5, // 3: miningpool.middleware.pool.v1.Conds.EntID:type_name -> basetypes.v1.StringVal
	4, // 4: miningpool.middleware.pool.v1.Conds.MiningPoolType:type_name -> basetypes.v1.Uint32Val
	5, // 5: miningpool.middleware.pool.v1.Conds.Name:type_name -> basetypes.v1.StringVal
	6, // 6: miningpool.middleware.pool.v1.Conds.EntIDs:type_name -> basetypes.v1.StringSliceVal
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_miningpool_middleware_v1_pool_pool_proto_init() }
func file_miningpool_middleware_v1_pool_pool_proto_init() {
	if File_miningpool_middleware_v1_pool_pool_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_miningpool_middleware_v1_pool_pool_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miningpool_middleware_v1_pool_pool_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miningpool_middleware_v1_pool_pool_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_miningpool_middleware_v1_pool_pool_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_miningpool_middleware_v1_pool_pool_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_miningpool_middleware_v1_pool_pool_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_miningpool_middleware_v1_pool_pool_proto_goTypes,
		DependencyIndexes: file_miningpool_middleware_v1_pool_pool_proto_depIdxs,
		MessageInfos:      file_miningpool_middleware_v1_pool_pool_proto_msgTypes,
	}.Build()
	File_miningpool_middleware_v1_pool_pool_proto = out.File
	file_miningpool_middleware_v1_pool_pool_proto_rawDesc = nil
	file_miningpool_middleware_v1_pool_pool_proto_goTypes = nil
	file_miningpool_middleware_v1_pool_pool_proto_depIdxs = nil
}
