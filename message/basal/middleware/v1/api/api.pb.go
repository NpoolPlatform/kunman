// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: basal/middleware/v1/api/api.proto

package api

import (
	reflect "reflect"
	sync "sync"

	v1 "github.com/NpoolPlatform/kunman/message/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Protocol int32

const (
	Protocol_DefaultProtocol Protocol = 0
	Protocol_GRPC            Protocol = 10
	Protocol_HTTP            Protocol = 20
)

// Enum value maps for Protocol.
var (
	Protocol_name = map[int32]string{
		0:  "DefaultProtocol",
		10: "GRPC",
		20: "HTTP",
	}
	Protocol_value = map[string]int32{
		"DefaultProtocol": 0,
		"GRPC":            10,
		"HTTP":            20,
	}
)

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}

func (x Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_basal_middleware_v1_api_api_proto_enumTypes[0].Descriptor()
}

func (Protocol) Type() protoreflect.EnumType {
	return &file_basal_middleware_v1_api_api_proto_enumTypes[0]
}

func (x Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol.Descriptor instead.
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return file_basal_middleware_v1_api_api_proto_rawDescGZIP(), []int{0}
}

type Method int32

const (
	Method_DefaultMethod Method = 0
	Method_GET           Method = 10
	Method_POST          Method = 20
	Method_STREAM        Method = 30
)

// Enum value maps for Method.
var (
	Method_name = map[int32]string{
		0:  "DefaultMethod",
		10: "GET",
		20: "POST",
		30: "STREAM",
	}
	Method_value = map[string]int32{
		"DefaultMethod": 0,
		"GET":           10,
		"POST":          20,
		"STREAM":        30,
	}
)

func (x Method) Enum() *Method {
	p := new(Method)
	*p = x
	return p
}

func (x Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Method) Descriptor() protoreflect.EnumDescriptor {
	return file_basal_middleware_v1_api_api_proto_enumTypes[1].Descriptor()
}

func (Method) Type() protoreflect.EnumType {
	return &file_basal_middleware_v1_api_api_proto_enumTypes[1]
}

func (x Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Method.Descriptor instead.
func (Method) EnumDescriptor() ([]byte, []int) {
	return file_basal_middleware_v1_api_api_proto_rawDescGZIP(), []int{1}
}

type APIReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *uint32   `protobuf:"varint,9,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID       *string   `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	Protocol    *Protocol `protobuf:"varint,20,opt,name=Protocol,proto3,enum=basal.middleware.api.v1.Protocol,oneof" json:"Protocol,omitempty"`
	ServiceName *string   `protobuf:"bytes,30,opt,name=ServiceName,proto3,oneof" json:"ServiceName,omitempty"`
	Method      *Method   `protobuf:"varint,40,opt,name=Method,proto3,enum=basal.middleware.api.v1.Method,oneof" json:"Method,omitempty"`
	MethodName  *string   `protobuf:"bytes,50,opt,name=MethodName,proto3,oneof" json:"MethodName,omitempty"`
	Path        *string   `protobuf:"bytes,60,opt,name=Path,proto3,oneof" json:"Path,omitempty"`
	Exported    *bool     `protobuf:"varint,70,opt,name=Exported,proto3,oneof" json:"Exported,omitempty"`
	PathPrefix  *string   `protobuf:"bytes,80,opt,name=PathPrefix,proto3,oneof" json:"PathPrefix,omitempty"`
	Domains     []string  `protobuf:"bytes,90,rep,name=Domains,proto3" json:"Domains,omitempty"`
	Deprecated  *bool     `protobuf:"varint,100,opt,name=Deprecated,proto3,oneof" json:"Deprecated,omitempty"`
}

func (x *APIReq) Reset() {
	*x = APIReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basal_middleware_v1_api_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIReq) ProtoMessage() {}

func (x *APIReq) ProtoReflect() protoreflect.Message {
	mi := &file_basal_middleware_v1_api_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIReq.ProtoReflect.Descriptor instead.
func (*APIReq) Descriptor() ([]byte, []int) {
	return file_basal_middleware_v1_api_api_proto_rawDescGZIP(), []int{0}
}

func (x *APIReq) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *APIReq) GetEntID() string {
	if x != nil && x.EntID != nil {
		return *x.EntID
	}
	return ""
}

func (x *APIReq) GetProtocol() Protocol {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return Protocol_DefaultProtocol
}

func (x *APIReq) GetServiceName() string {
	if x != nil && x.ServiceName != nil {
		return *x.ServiceName
	}
	return ""
}

func (x *APIReq) GetMethod() Method {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return Method_DefaultMethod
}

func (x *APIReq) GetMethodName() string {
	if x != nil && x.MethodName != nil {
		return *x.MethodName
	}
	return ""
}

func (x *APIReq) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *APIReq) GetExported() bool {
	if x != nil && x.Exported != nil {
		return *x.Exported
	}
	return false
}

func (x *APIReq) GetPathPrefix() string {
	if x != nil && x.PathPrefix != nil {
		return *x.PathPrefix
	}
	return ""
}

func (x *APIReq) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *APIReq) GetDeprecated() bool {
	if x != nil && x.Deprecated != nil {
		return *x.Deprecated
	}
	return false
}

type API struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,9,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"ent_id"
	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty" sql:"ent_id"`
	// @inject_tag: sql:"protocol"
	ProtocolStr string   `protobuf:"bytes,19,opt,name=ProtocolStr,proto3" json:"ProtocolStr,omitempty" sql:"protocol"`
	Protocol    Protocol `protobuf:"varint,20,opt,name=Protocol,proto3,enum=basal.middleware.api.v1.Protocol" json:"Protocol,omitempty"`
	// @inject_tag: sql:"service_name"
	ServiceName string `protobuf:"bytes,30,opt,name=ServiceName,proto3" json:"ServiceName,omitempty" sql:"service_name"`
	// @inject_tag: sql:"method"
	MethodStr string `protobuf:"bytes,39,opt,name=MethodStr,proto3" json:"MethodStr,omitempty" sql:"method"`
	Method    Method `protobuf:"varint,40,opt,name=Method,proto3,enum=basal.middleware.api.v1.Method" json:"Method,omitempty"`
	// @inject_tag: sql:"method_name"
	MethodName string `protobuf:"bytes,50,opt,name=MethodName,proto3" json:"MethodName,omitempty" sql:"method_name"`
	// @inject_tag: sql:"path"
	Path string `protobuf:"bytes,60,opt,name=Path,proto3" json:"Path,omitempty" sql:"path"`
	// @inject_tag: sql:"exported"
	Exported bool `protobuf:"varint,70,opt,name=Exported,proto3" json:"Exported,omitempty" sql:"exported"`
	// @inject_tag: sql:"path_prefix"
	PathPrefix string `protobuf:"bytes,80,opt,name=PathPrefix,proto3" json:"PathPrefix,omitempty" sql:"path_prefix"`
	// @inject_tag: sql:"domains"
	DomainsStr string   `protobuf:"bytes,89,opt,name=DomainsStr,proto3" json:"DomainsStr,omitempty" sql:"domains"`
	Domains    []string `protobuf:"bytes,90,rep,name=Domains,proto3" json:"Domains,omitempty"`
	// @inject_tag: sql:"deprecated"
	Deprecated bool `protobuf:"varint,100,opt,name=Deprecated,proto3" json:"Deprecated,omitempty" sql:"deprecated"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,110,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,120,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *API) Reset() {
	*x = API{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basal_middleware_v1_api_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *API) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*API) ProtoMessage() {}

func (x *API) ProtoReflect() protoreflect.Message {
	mi := &file_basal_middleware_v1_api_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use API.ProtoReflect.Descriptor instead.
func (*API) Descriptor() ([]byte, []int) {
	return file_basal_middleware_v1_api_api_proto_rawDescGZIP(), []int{1}
}

func (x *API) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *API) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *API) GetProtocolStr() string {
	if x != nil {
		return x.ProtocolStr
	}
	return ""
}

func (x *API) GetProtocol() Protocol {
	if x != nil {
		return x.Protocol
	}
	return Protocol_DefaultProtocol
}

func (x *API) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *API) GetMethodStr() string {
	if x != nil {
		return x.MethodStr
	}
	return ""
}

func (x *API) GetMethod() Method {
	if x != nil {
		return x.Method
	}
	return Method_DefaultMethod
}

func (x *API) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *API) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *API) GetExported() bool {
	if x != nil {
		return x.Exported
	}
	return false
}

func (x *API) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *API) GetDomainsStr() string {
	if x != nil {
		return x.DomainsStr
	}
	return ""
}

func (x *API) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *API) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

func (x *API) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *API) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID       *v1.StringVal      `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	Protocol    *v1.Uint32Val      `protobuf:"bytes,20,opt,name=Protocol,proto3,oneof" json:"Protocol,omitempty"`
	ServiceName *v1.StringVal      `protobuf:"bytes,30,opt,name=ServiceName,proto3,oneof" json:"ServiceName,omitempty"`
	Method      *v1.Uint32Val      `protobuf:"bytes,40,opt,name=Method,proto3,oneof" json:"Method,omitempty"`
	Path        *v1.StringVal      `protobuf:"bytes,50,opt,name=Path,proto3,oneof" json:"Path,omitempty"`
	Exported    *v1.BoolVal        `protobuf:"bytes,60,opt,name=Exported,proto3,oneof" json:"Exported,omitempty"`
	Deprecated  *v1.BoolVal        `protobuf:"bytes,70,opt,name=Deprecated,proto3,oneof" json:"Deprecated,omitempty"`
	EntIDs      *v1.StringSliceVal `protobuf:"bytes,80,opt,name=EntIDs,proto3,oneof" json:"EntIDs,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basal_middleware_v1_api_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_basal_middleware_v1_api_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_basal_middleware_v1_api_api_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetEntID() *v1.StringVal {
	if x != nil {
		return x.EntID
	}
	return nil
}

func (x *Conds) GetProtocol() *v1.Uint32Val {
	if x != nil {
		return x.Protocol
	}
	return nil
}

func (x *Conds) GetServiceName() *v1.StringVal {
	if x != nil {
		return x.ServiceName
	}
	return nil
}

func (x *Conds) GetMethod() *v1.Uint32Val {
	if x != nil {
		return x.Method
	}
	return nil
}

func (x *Conds) GetPath() *v1.StringVal {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *Conds) GetExported() *v1.BoolVal {
	if x != nil {
		return x.Exported
	}
	return nil
}

func (x *Conds) GetDeprecated() *v1.BoolVal {
	if x != nil {
		return x.Deprecated
	}
	return nil
}

func (x *Conds) GetEntIDs() *v1.StringSliceVal {
	if x != nil {
		return x.EntIDs
	}
	return nil
}

var File_basal_middleware_v1_api_api_proto protoreflect.FileDescriptor

var file_basal_middleware_v1_api_api_proto_rawDesc = []byte{
	0x0a, 0x21, 0x62, 0x61, 0x73, 0x61, 0x6c, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x17, 0x62, 0x61, 0x73, 0x61, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x18, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x04, 0x0a, 0x06, 0x41, 0x50, 0x49, 0x52, 0x65,
	0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x42, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x62, 0x61, 0x73, 0x61, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x48, 0x02, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x06,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62,
	0x61, 0x73, 0x61, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x04, 0x52,
	0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05,
	0x52, 0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x46, 0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x08, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x50, 0x61, 0x74,
	0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52,
	0x0a, 0x50, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x88, 0x01, 0x01, 0x12, 0x18,
	0x0a, 0x07, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x5a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x72,
	0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x08, 0x48, 0x09, 0x52, 0x0a,
	0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a,
	0x03, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x50, 0x61, 0x74, 0x68, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x50, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x44,
	0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x8b, 0x04, 0x0a, 0x03, 0x41, 0x50,
	0x49, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x53, 0x74, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x53, 0x74, 0x72, 0x12, 0x3d, 0x0a, 0x08, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x62, 0x61,
	0x73, 0x61, 0x6c, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x53, 0x74, 0x72, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x53, 0x74, 0x72, 0x12, 0x37, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x61, 0x73, 0x61, 0x6c,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x18, 0x46, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x53, 0x74, 0x72, 0x18,
	0x59, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x53, 0x74,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x5a, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x44,
	0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xae, 0x04, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x32, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x45, 0x6e, 0x74,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x48, 0x01, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x3e, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x02, 0x52,
	0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x34, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x04, 0x52, 0x04,
	0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x08, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x48, 0x05, 0x52, 0x08, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x3a, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x46, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x48, 0x06, 0x52, 0x0a, 0x44, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x06, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x73, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x48, 0x07, 0x52, 0x06, 0x45, 0x6e, 0x74,
	0x49, 0x44, 0x73, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x50, 0x61, 0x74,
	0x68, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x2a, 0x33, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x52, 0x50,
	0x43, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x10, 0x14, 0x2a, 0x3a, 0x0a,
	0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45,
	0x54, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x14, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x10, 0x1e, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6b, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x61, 0x6c, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_basal_middleware_v1_api_api_proto_rawDescOnce sync.Once
	file_basal_middleware_v1_api_api_proto_rawDescData = file_basal_middleware_v1_api_api_proto_rawDesc
)

func file_basal_middleware_v1_api_api_proto_rawDescGZIP() []byte {
	file_basal_middleware_v1_api_api_proto_rawDescOnce.Do(func() {
		file_basal_middleware_v1_api_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_basal_middleware_v1_api_api_proto_rawDescData)
	})
	return file_basal_middleware_v1_api_api_proto_rawDescData
}

var (
	file_basal_middleware_v1_api_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
	file_basal_middleware_v1_api_api_proto_msgTypes  = make([]protoimpl.MessageInfo, 3)
	file_basal_middleware_v1_api_api_proto_goTypes   = []interface{}{
		(Protocol)(0),             // 0: basal.middleware.api.v1.Protocol
		(Method)(0),               // 1: basal.middleware.api.v1.Method
		(*APIReq)(nil),            // 2: basal.middleware.api.v1.APIReq
		(*API)(nil),               // 3: basal.middleware.api.v1.API
		(*Conds)(nil),             // 4: basal.middleware.api.v1.Conds
		(*v1.StringVal)(nil),      // 5: basetypes.v1.StringVal
		(*v1.Uint32Val)(nil),      // 6: basetypes.v1.Uint32Val
		(*v1.BoolVal)(nil),        // 7: basetypes.v1.BoolVal
		(*v1.StringSliceVal)(nil), // 8: basetypes.v1.StringSliceVal
	}
)
var file_basal_middleware_v1_api_api_proto_depIdxs = []int32{
	0,  // 0: basal.middleware.api.v1.APIReq.Protocol:type_name -> basal.middleware.api.v1.Protocol
	1,  // 1: basal.middleware.api.v1.APIReq.Method:type_name -> basal.middleware.api.v1.Method
	0,  // 2: basal.middleware.api.v1.API.Protocol:type_name -> basal.middleware.api.v1.Protocol
	1,  // 3: basal.middleware.api.v1.API.Method:type_name -> basal.middleware.api.v1.Method
	5,  // 4: basal.middleware.api.v1.Conds.EntID:type_name -> basetypes.v1.StringVal
	6,  // 5: basal.middleware.api.v1.Conds.Protocol:type_name -> basetypes.v1.Uint32Val
	5,  // 6: basal.middleware.api.v1.Conds.ServiceName:type_name -> basetypes.v1.StringVal
	6,  // 7: basal.middleware.api.v1.Conds.Method:type_name -> basetypes.v1.Uint32Val
	5,  // 8: basal.middleware.api.v1.Conds.Path:type_name -> basetypes.v1.StringVal
	7,  // 9: basal.middleware.api.v1.Conds.Exported:type_name -> basetypes.v1.BoolVal
	7,  // 10: basal.middleware.api.v1.Conds.Deprecated:type_name -> basetypes.v1.BoolVal
	8,  // 11: basal.middleware.api.v1.Conds.EntIDs:type_name -> basetypes.v1.StringSliceVal
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_basal_middleware_v1_api_api_proto_init() }
func file_basal_middleware_v1_api_api_proto_init() {
	if File_basal_middleware_v1_api_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_basal_middleware_v1_api_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basal_middleware_v1_api_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*API); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basal_middleware_v1_api_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_basal_middleware_v1_api_api_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_basal_middleware_v1_api_api_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_basal_middleware_v1_api_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_basal_middleware_v1_api_api_proto_goTypes,
		DependencyIndexes: file_basal_middleware_v1_api_api_proto_depIdxs,
		EnumInfos:         file_basal_middleware_v1_api_api_proto_enumTypes,
		MessageInfos:      file_basal_middleware_v1_api_api_proto_msgTypes,
	}.Build()
	File_basal_middleware_v1_api_api_proto = out.File
	file_basal_middleware_v1_api_api_proto_rawDesc = nil
	file_basal_middleware_v1_api_api_proto_goTypes = nil
	file_basal_middleware_v1_api_api_proto_depIdxs = nil
}
