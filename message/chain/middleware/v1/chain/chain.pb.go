// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: chain/middleware/v1/chain/chain.proto

package chain

import (
	reflect "reflect"
	sync "sync"

	v1 "github.com/NpoolPlatform/kunman/message/basetypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *uint32     `protobuf:"varint,9,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	EntID      *string     `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	ChainType  *string     `protobuf:"bytes,20,opt,name=ChainType,proto3,oneof" json:"ChainType,omitempty"`
	Logo       *string     `protobuf:"bytes,30,opt,name=Logo,proto3,oneof" json:"Logo,omitempty"`
	ChainID    *string     `protobuf:"bytes,40,opt,name=ChainID,proto3,oneof" json:"ChainID,omitempty"`
	NativeUnit *string     `protobuf:"bytes,50,opt,name=NativeUnit,proto3,oneof" json:"NativeUnit,omitempty"`
	AtomicUnit *string     `protobuf:"bytes,60,opt,name=AtomicUnit,proto3,oneof" json:"AtomicUnit,omitempty"`
	UnitExp    *uint32     `protobuf:"varint,70,opt,name=UnitExp,proto3,oneof" json:"UnitExp,omitempty"`
	NickName   *string     `protobuf:"bytes,80,opt,name=NickName,proto3,oneof" json:"NickName,omitempty"`
	GasType    *v1.GasType `protobuf:"varint,90,opt,name=GasType,proto3,enum=basetypes.v1.GasType,oneof" json:"GasType,omitempty"`
	ENV        *string     `protobuf:"bytes,100,opt,name=ENV,proto3,oneof" json:"ENV,omitempty"`
}

func (x *ChainReq) Reset() {
	*x = ChainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_middleware_v1_chain_chain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainReq) ProtoMessage() {}

func (x *ChainReq) ProtoReflect() protoreflect.Message {
	mi := &file_chain_middleware_v1_chain_chain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainReq.ProtoReflect.Descriptor instead.
func (*ChainReq) Descriptor() ([]byte, []int) {
	return file_chain_middleware_v1_chain_chain_proto_rawDescGZIP(), []int{0}
}

func (x *ChainReq) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *ChainReq) GetEntID() string {
	if x != nil && x.EntID != nil {
		return *x.EntID
	}
	return ""
}

func (x *ChainReq) GetChainType() string {
	if x != nil && x.ChainType != nil {
		return *x.ChainType
	}
	return ""
}

func (x *ChainReq) GetLogo() string {
	if x != nil && x.Logo != nil {
		return *x.Logo
	}
	return ""
}

func (x *ChainReq) GetChainID() string {
	if x != nil && x.ChainID != nil {
		return *x.ChainID
	}
	return ""
}

func (x *ChainReq) GetNativeUnit() string {
	if x != nil && x.NativeUnit != nil {
		return *x.NativeUnit
	}
	return ""
}

func (x *ChainReq) GetAtomicUnit() string {
	if x != nil && x.AtomicUnit != nil {
		return *x.AtomicUnit
	}
	return ""
}

func (x *ChainReq) GetUnitExp() uint32 {
	if x != nil && x.UnitExp != nil {
		return *x.UnitExp
	}
	return 0
}

func (x *ChainReq) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *ChainReq) GetGasType() v1.GasType {
	if x != nil && x.GasType != nil {
		return *x.GasType
	}
	return v1.GasType(0)
}

func (x *ChainReq) GetENV() string {
	if x != nil && x.ENV != nil {
		return *x.ENV
	}
	return ""
}

type Chain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"ent_id"
	EntID string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty" sql:"ent_id"`
	// @inject_tag: sql:"chain_type"
	ChainType string `protobuf:"bytes,30,opt,name=ChainType,proto3" json:"ChainType,omitempty" sql:"chain_type"`
	// @inject_tag: sql:"logo"
	Logo string `protobuf:"bytes,40,opt,name=Logo,proto3" json:"Logo,omitempty" sql:"logo"`
	// @inject_tag: sql:"chain_id"
	ChainID string `protobuf:"bytes,50,opt,name=ChainID,proto3" json:"ChainID,omitempty" sql:"chain_id"`
	// @inject_tag: sql:"native_unit"
	NativeUnit string `protobuf:"bytes,60,opt,name=NativeUnit,proto3" json:"NativeUnit,omitempty" sql:"native_unit"`
	// @inject_tag: sql:"atomic_unit"
	AtomicUnit string `protobuf:"bytes,70,opt,name=AtomicUnit,proto3" json:"AtomicUnit,omitempty" sql:"atomic_unit"`
	// @inject_tag: sql:"unit_exp"
	UnitExp uint32 `protobuf:"varint,80,opt,name=UnitExp,proto3" json:"UnitExp,omitempty" sql:"unit_exp"`
	// @inject_tag: sql:"nickname"
	Nickname string `protobuf:"bytes,90,opt,name=Nickname,proto3" json:"Nickname,omitempty" sql:"nickname"`
	// @inject_tag: sql:"env"
	ENV string `protobuf:"bytes,100,opt,name=ENV,proto3" json:"ENV,omitempty" sql:"env"`
	// @inject_tag: sql:"gas_type"
	GasTypeStr string     `protobuf:"bytes,110,opt,name=GasTypeStr,proto3" json:"GasTypeStr,omitempty" sql:"gas_type"`
	GasType    v1.GasType `protobuf:"varint,120,opt,name=GasType,proto3,enum=basetypes.v1.GasType" json:"GasType,omitempty"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *Chain) Reset() {
	*x = Chain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_middleware_v1_chain_chain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chain) ProtoMessage() {}

func (x *Chain) ProtoReflect() protoreflect.Message {
	mi := &file_chain_middleware_v1_chain_chain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chain.ProtoReflect.Descriptor instead.
func (*Chain) Descriptor() ([]byte, []int) {
	return file_chain_middleware_v1_chain_chain_proto_rawDescGZIP(), []int{1}
}

func (x *Chain) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Chain) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *Chain) GetChainType() string {
	if x != nil {
		return x.ChainType
	}
	return ""
}

func (x *Chain) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Chain) GetChainID() string {
	if x != nil {
		return x.ChainID
	}
	return ""
}

func (x *Chain) GetNativeUnit() string {
	if x != nil {
		return x.NativeUnit
	}
	return ""
}

func (x *Chain) GetAtomicUnit() string {
	if x != nil {
		return x.AtomicUnit
	}
	return ""
}

func (x *Chain) GetUnitExp() uint32 {
	if x != nil {
		return x.UnitExp
	}
	return 0
}

func (x *Chain) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Chain) GetENV() string {
	if x != nil {
		return x.ENV
	}
	return ""
}

func (x *Chain) GetGasTypeStr() string {
	if x != nil {
		return x.GasTypeStr
	}
	return ""
}

func (x *Chain) GetGasType() v1.GasType {
	if x != nil {
		return x.GasType
	}
	return v1.GasType(0)
}

func (x *Chain) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Chain) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntID     *v1.StringVal      `protobuf:"bytes,10,opt,name=EntID,proto3,oneof" json:"EntID,omitempty"`
	ChainType *v1.StringVal      `protobuf:"bytes,20,opt,name=ChainType,proto3,oneof" json:"ChainType,omitempty"`
	ENV       *v1.StringVal      `protobuf:"bytes,30,opt,name=ENV,proto3,oneof" json:"ENV,omitempty"`
	EntIDs    *v1.StringSliceVal `protobuf:"bytes,40,opt,name=EntIDs,proto3,oneof" json:"EntIDs,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_middleware_v1_chain_chain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_chain_middleware_v1_chain_chain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_chain_middleware_v1_chain_chain_proto_rawDescGZIP(), []int{2}
}

func (x *Conds) GetEntID() *v1.StringVal {
	if x != nil {
		return x.EntID
	}
	return nil
}

func (x *Conds) GetChainType() *v1.StringVal {
	if x != nil {
		return x.ChainType
	}
	return nil
}

func (x *Conds) GetENV() *v1.StringVal {
	if x != nil {
		return x.ENV
	}
	return nil
}

func (x *Conds) GetEntIDs() *v1.StringSliceVal {
	if x != nil {
		return x.EntIDs
	}
	return nil
}

var File_chain_middleware_v1_chain_chain_proto protoreflect.FileDescriptor

var file_chain_middleware_v1_chain_chain_proto_rawDesc = []byte{
	0x0a, 0x25, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x1a, 0x1a, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x61, 0x73, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x03, 0x0a, 0x08, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x45, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x45, 0x6e, 0x74,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x6f,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0a, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0a, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x55,
	0x6e, 0x69, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x41, 0x74, 0x6f,
	0x6d, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x55, 0x6e,
	0x69, 0x74, 0x45, 0x78, 0x70, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x07, 0x52, 0x07, 0x55,
	0x6e, 0x69, 0x74, 0x45, 0x78, 0x70, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x4e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x08, 0x4e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x07, 0x47, 0x61,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x09, 0x52, 0x07, 0x47, 0x61, 0x73, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x15, 0x0a, 0x03, 0x45, 0x4e, 0x56, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52,
	0x03, 0x45, 0x4e, 0x56, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4c, 0x6f, 0x67, 0x6f, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x41,
	0x74, 0x6f, 0x6d, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x55, 0x6e,
	0x69, 0x74, 0x45, 0x78, 0x70, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x47, 0x61, 0x73, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x45, 0x4e, 0x56, 0x22, 0x90, 0x03, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x6e, 0x69, 0x74, 0x45, 0x78, 0x70, 0x18, 0x50, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x55, 0x6e, 0x69, 0x74, 0x45, 0x78, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x4e, 0x56, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x4e, 0x56, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x61,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x47, 0x61, 0x73, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x47, 0x61,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x07, 0x47, 0x61, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8d, 0x02, 0x0a, 0x05, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x03, 0x45, 0x4e, 0x56, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x48, 0x02, 0x52, 0x03, 0x45, 0x4e, 0x56,
	0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x56, 0x61,
	0x6c, 0x48, 0x03, 0x52, 0x06, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x45, 0x4e, 0x56, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6b, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chain_middleware_v1_chain_chain_proto_rawDescOnce sync.Once
	file_chain_middleware_v1_chain_chain_proto_rawDescData = file_chain_middleware_v1_chain_chain_proto_rawDesc
)

func file_chain_middleware_v1_chain_chain_proto_rawDescGZIP() []byte {
	file_chain_middleware_v1_chain_chain_proto_rawDescOnce.Do(func() {
		file_chain_middleware_v1_chain_chain_proto_rawDescData = protoimpl.X.CompressGZIP(file_chain_middleware_v1_chain_chain_proto_rawDescData)
	})
	return file_chain_middleware_v1_chain_chain_proto_rawDescData
}

var (
	file_chain_middleware_v1_chain_chain_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
	file_chain_middleware_v1_chain_chain_proto_goTypes  = []interface{}{
		(*ChainReq)(nil),          // 0: chain.middleware.chain.v1.ChainReq
		(*Chain)(nil),             // 1: chain.middleware.chain.v1.Chain
		(*Conds)(nil),             // 2: chain.middleware.chain.v1.Conds
		(v1.GasType)(0),           // 3: basetypes.v1.GasType
		(*v1.StringVal)(nil),      // 4: basetypes.v1.StringVal
		(*v1.StringSliceVal)(nil), // 5: basetypes.v1.StringSliceVal
	}
)
var file_chain_middleware_v1_chain_chain_proto_depIdxs = []int32{
	3, // 0: chain.middleware.chain.v1.ChainReq.GasType:type_name -> basetypes.v1.GasType
	3, // 1: chain.middleware.chain.v1.Chain.GasType:type_name -> basetypes.v1.GasType
	4, // 2: chain.middleware.chain.v1.Conds.EntID:type_name -> basetypes.v1.StringVal
	4, // 3: chain.middleware.chain.v1.Conds.ChainType:type_name -> basetypes.v1.StringVal
	4, // 4: chain.middleware.chain.v1.Conds.ENV:type_name -> basetypes.v1.StringVal
	5, // 5: chain.middleware.chain.v1.Conds.EntIDs:type_name -> basetypes.v1.StringSliceVal
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_chain_middleware_v1_chain_chain_proto_init() }
func file_chain_middleware_v1_chain_chain_proto_init() {
	if File_chain_middleware_v1_chain_chain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chain_middleware_v1_chain_chain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_middleware_v1_chain_chain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_middleware_v1_chain_chain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_chain_middleware_v1_chain_chain_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_chain_middleware_v1_chain_chain_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chain_middleware_v1_chain_chain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chain_middleware_v1_chain_chain_proto_goTypes,
		DependencyIndexes: file_chain_middleware_v1_chain_chain_proto_depIdxs,
		MessageInfos:      file_chain_middleware_v1_chain_chain_proto_msgTypes,
	}.Build()
	File_chain_middleware_v1_chain_chain_proto = out.File
	file_chain_middleware_v1_chain_chain_proto_rawDesc = nil
	file_chain_middleware_v1_chain_chain_proto_goTypes = nil
	file_chain_middleware_v1_chain_chain_proto_depIdxs = nil
}
