syntax = "proto3";

package billing.middleware.user.credit.record.v1;

option go_package = "github.com/NpoolPlatform/kunman/message/billing/middleware/v1/user/credit/record";

import "basetypes/v1/conds.proto";
import "basetypes/billing/v1/enums.proto";

message RecordReq {
    optional uint32 ID = 10;
    optional string EntID = 20;
    optional string AppID = 30;
    optional string UserID = 40;
    optional basetypes.billing.v1.OperationType OperationType = 50;
    optional int32 CreditsChange = 60;
    optional string Extra = 70;
}

message Record {
    // @inject_tag: sql:"id"
    uint32 ID = 10;
    // @inject_tag: sql:"ent_id"
    string EntID = 20;
    // @inject_tag: sql:"app_id"
    string AppID = 30;
    // @inject_tag: sql:"user_id"
    string UserID = 40;
    // @inject_tag: sql:"operation_type"
    string OperationTypeStr = 50;
    basetypes.billing.v1.OperationType OperationType = 51;
    // @inject_tag: sql:"credits_change"
    int32 CreditsChange = 60;
    // @inject_tag: sql:"extra"
    string Extra = 70;
    // @inject_tag: sql:"created_at"
    uint32 CreatedAt = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt = 1010;
}

message Conds {
    optional basetypes.v1.Uint32Val ID = 9;
    optional basetypes.v1.StringVal EntID = 10;
    optional basetypes.v1.StringVal AppID = 20;
    optional basetypes.v1.StringVal UserID = 30;
    optional basetypes.v1.Uint32Val OperationType = 40;
    optional basetypes.v1.Uint32SliceVal IDs = 1000;
    optional basetypes.v1.StringSliceVal EntIDs = 1010;
}

