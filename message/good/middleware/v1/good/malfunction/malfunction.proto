syntax = "proto3";

package good.middleware.good1.malfunction.v1;

option go_package = "github.com/NpoolPlatform/kunman/message/good/middleware/v1/good/malfunction";

import "basetypes/v1/conds.proto";
import "basetypes/good/v1/enums.proto";

message MalfunctionReq {
    optional uint32 ID = 10;
    optional string EntID = 20;
    optional string GoodID = 30;
    optional string Title = 40;
    optional string Message = 50;
    optional uint32 StartAt = 60;
    optional uint32 DurationSeconds = 70;
    optional uint32 CompensateSeconds = 80;
}

message Malfunction {
    // @inject_tag: sql:"id"
    uint32 ID = 10;
    // @inject_tag: sql:"ent_id"
    string EntID = 20;
    // @inject_tag: sql:"good_id"
    string GoodID = 30;
    // @inject_tag: sql:"good_type"
    string GoodTypeStr = 40;
    basetypes.good.v1.GoodType GoodType = 50;
    // @inject_tag: sql:"good_name"
    string GoodName = 60;
    // @inject_tag: sql:"title"
    string Title = 70;
    // @inject_tag: sql:"message"
    string Message = 80;
    // @inject_tag: sql:"start_at"
    uint32 StartAt = 90;
    // @inject_tag: sql:"duration_seconds"
    uint32 DurationSeconds = 100;
    // @inject_tag: sql:"compensate_seconds"
    uint32 CompensateSeconds = 110;

    // @inject_tag: sql:"created_at"
    uint32 CreatedAt = 1000;
    // @inject_tag: sql:"updated_at"
    uint32 UpdatedAt = 1010;
}

message Conds {
    optional basetypes.v1.Uint32Val ID = 10;
    optional basetypes.v1.StringVal EntID = 20;
    optional basetypes.v1.StringSliceVal EntIDs = 30;
    optional basetypes.v1.StringVal GoodID = 40;
    optional basetypes.v1.StringVal AppGoodID = 50;
}

