// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: good/middleware/v1/app/good/stock/stock.proto

package stock

import (
	v1 "github.com/NpoolPlatform/kunman/message/basetypes/good/v1"
	_ "github.com/NpoolPlatform/kunman/message/basetypes/v1"
	mining "github.com/NpoolPlatform/message/good/middleware/v1/app/good/stock/mining"
	stock "github.com/NpoolPlatform/message/good/middleware/v1/good/stock"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Stock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: sql:"id"
	ID uint32 `protobuf:"varint,9,opt,name=ID,proto3" json:"ID,omitempty" sql:"id"`
	// @inject_tag: sql:"ent_id"
	EntID string `protobuf:"bytes,10,opt,name=EntID,proto3" json:"EntID,omitempty" sql:"ent_id"`
	// @inject_tag: sql:"app_id"
	AppID string `protobuf:"bytes,20,opt,name=AppID,proto3" json:"AppID,omitempty" sql:"app_id"`
	// @inject_tag: sql:"good_id"
	GoodID string `protobuf:"bytes,30,opt,name=GoodID,proto3" json:"GoodID,omitempty" sql:"good_id"`
	// @inject_tag: sql:"good_name"
	GoodName string `protobuf:"bytes,40,opt,name=GoodName,proto3" json:"GoodName,omitempty" sql:"good_name"`
	// @inject_tag: sql:"app_good_id"
	AppGoodID string `protobuf:"bytes,50,opt,name=AppGoodID,proto3" json:"AppGoodID,omitempty" sql:"app_good_id"`
	// @inject_tag: sql:"app_good_name"
	AppGoodName string `protobuf:"bytes,60,opt,name=AppGoodName,proto3" json:"AppGoodName,omitempty" sql:"app_good_name"`
	// @inject_tag: sql:"reserved"
	Reserved string `protobuf:"bytes,70,opt,name=Reserved,proto3" json:"Reserved,omitempty" sql:"reserved"`
	// @inject_tag: sql:"spot_quantity"
	SpotQuantity string `protobuf:"bytes,80,opt,name=SpotQuantity,proto3" json:"SpotQuantity,omitempty" sql:"spot_quantity"`
	// @inject_tag: sql:"locked"
	Locked string `protobuf:"bytes,90,opt,name=Locked,proto3" json:"Locked,omitempty" sql:"locked"`
	// @inject_tag: sql:"wait_start"
	WaitStart string `protobuf:"bytes,100,opt,name=WaitStart,proto3" json:"WaitStart,omitempty" sql:"wait_start"`
	// @inject_tag: sql:"in_service"
	InService string `protobuf:"bytes,110,opt,name=InService,proto3" json:"InService,omitempty" sql:"in_service"`
	// @inject_tag: sql:"sold"
	Sold string `protobuf:"bytes,120,opt,name=Sold,proto3" json:"Sold,omitempty" sql:"sold"`
	// @inject_tag: sql:"stock_mode"
	StockModeStr        string                       `protobuf:"bytes,130,opt,name=StockModeStr,proto3" json:"StockModeStr,omitempty" sql:"stock_mode"`
	StockMode           v1.GoodStockMode             `protobuf:"varint,140,opt,name=StockMode,proto3,enum=basetypes.good.v1.GoodStockMode" json:"StockMode,omitempty"`
	MiningGoodStocks    []*stock.MiningGoodStockInfo `protobuf:"bytes,500,rep,name=MiningGoodStocks,proto3" json:"MiningGoodStocks,omitempty"`
	AppMiningGoodStocks []*mining.StockInfo          `protobuf:"bytes,510,rep,name=AppMiningGoodStocks,proto3" json:"AppMiningGoodStocks,omitempty"`
	// @inject_tag: sql:"created_at"
	CreatedAt uint32 `protobuf:"varint,1000,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" sql:"created_at"`
	// @inject_tag: sql:"updated_at"
	UpdatedAt uint32 `protobuf:"varint,1010,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" sql:"updated_at"`
}

func (x *Stock) Reset() {
	*x = Stock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_good_middleware_v1_app_good_stock_stock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_good_middleware_v1_app_good_stock_stock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_good_middleware_v1_app_good_stock_stock_proto_rawDescGZIP(), []int{0}
}

func (x *Stock) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Stock) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *Stock) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Stock) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *Stock) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *Stock) GetAppGoodID() string {
	if x != nil {
		return x.AppGoodID
	}
	return ""
}

func (x *Stock) GetAppGoodName() string {
	if x != nil {
		return x.AppGoodName
	}
	return ""
}

func (x *Stock) GetReserved() string {
	if x != nil {
		return x.Reserved
	}
	return ""
}

func (x *Stock) GetSpotQuantity() string {
	if x != nil {
		return x.SpotQuantity
	}
	return ""
}

func (x *Stock) GetLocked() string {
	if x != nil {
		return x.Locked
	}
	return ""
}

func (x *Stock) GetWaitStart() string {
	if x != nil {
		return x.WaitStart
	}
	return ""
}

func (x *Stock) GetInService() string {
	if x != nil {
		return x.InService
	}
	return ""
}

func (x *Stock) GetSold() string {
	if x != nil {
		return x.Sold
	}
	return ""
}

func (x *Stock) GetStockModeStr() string {
	if x != nil {
		return x.StockModeStr
	}
	return ""
}

func (x *Stock) GetStockMode() v1.GoodStockMode {
	if x != nil {
		return x.StockMode
	}
	return v1.GoodStockMode(0)
}

func (x *Stock) GetMiningGoodStocks() []*stock.MiningGoodStockInfo {
	if x != nil {
		return x.MiningGoodStocks
	}
	return nil
}

func (x *Stock) GetAppMiningGoodStocks() []*mining.StockInfo {
	if x != nil {
		return x.AppMiningGoodStocks
	}
	return nil
}

func (x *Stock) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Stock) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_good_middleware_v1_app_good_stock_stock_proto protoreflect.FileDescriptor

var file_good_middleware_v1_app_good_stock_stock_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x22, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x2e, 0x76, 0x31, 0x1a, 0x18, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x67, 0x6f,
	0x6f, 0x64, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xce,
	0x05, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x47,
	0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x70, 0x70,
	0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x47, 0x6f, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x70, 0x70,
	0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x70, 0x6f, 0x74, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x70, 0x6f, 0x74,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x57, 0x61, 0x69, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x57, 0x61, 0x69, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x49, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x49, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x6f, 0x6c, 0x64, 0x18, 0x78, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x6f, 0x6c, 0x64,
	0x12, 0x23, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72,
	0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4d, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x72, 0x12, 0x3f, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x60, 0x0a, 0x10, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x47, 0x6f, 0x6f, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0xf4, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x64, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x47, 0x6f,
	0x6f, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x67, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x4d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x18,
	0xfe, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x41, 0x70,
	0x70, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x73, 0x12, 0x1d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xe8,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0xf2, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42,
	0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70,
	0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_good_middleware_v1_app_good_stock_stock_proto_rawDescOnce sync.Once
	file_good_middleware_v1_app_good_stock_stock_proto_rawDescData = file_good_middleware_v1_app_good_stock_stock_proto_rawDesc
)

func file_good_middleware_v1_app_good_stock_stock_proto_rawDescGZIP() []byte {
	file_good_middleware_v1_app_good_stock_stock_proto_rawDescOnce.Do(func() {
		file_good_middleware_v1_app_good_stock_stock_proto_rawDescData = protoimpl.X.CompressGZIP(file_good_middleware_v1_app_good_stock_stock_proto_rawDescData)
	})
	return file_good_middleware_v1_app_good_stock_stock_proto_rawDescData
}

var file_good_middleware_v1_app_good_stock_stock_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_good_middleware_v1_app_good_stock_stock_proto_goTypes = []interface{}{
	(*Stock)(nil),                     // 0: good.middleware.app.good1.stock.v1.Stock
	(v1.GoodStockMode)(0),             // 1: basetypes.good.v1.GoodStockMode
	(*stock.MiningGoodStockInfo)(nil), // 2: good.middleware.good1.stock.v1.MiningGoodStockInfo
	(*mining.StockInfo)(nil),          // 3: good.middleware.app.good1.stock.mining.v1.StockInfo
}
var file_good_middleware_v1_app_good_stock_stock_proto_depIdxs = []int32{
	1, // 0: good.middleware.app.good1.stock.v1.Stock.StockMode:type_name -> basetypes.good.v1.GoodStockMode
	2, // 1: good.middleware.app.good1.stock.v1.Stock.MiningGoodStocks:type_name -> good.middleware.good1.stock.v1.MiningGoodStockInfo
	3, // 2: good.middleware.app.good1.stock.v1.Stock.AppMiningGoodStocks:type_name -> good.middleware.app.good1.stock.mining.v1.StockInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_good_middleware_v1_app_good_stock_stock_proto_init() }
func file_good_middleware_v1_app_good_stock_stock_proto_init() {
	if File_good_middleware_v1_app_good_stock_stock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_good_middleware_v1_app_good_stock_stock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_good_middleware_v1_app_good_stock_stock_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_good_middleware_v1_app_good_stock_stock_proto_goTypes,
		DependencyIndexes: file_good_middleware_v1_app_good_stock_stock_proto_depIdxs,
		MessageInfos:      file_good_middleware_v1_app_good_stock_stock_proto_msgTypes,
	}.Build()
	File_good_middleware_v1_app_good_stock_stock_proto = out.File
	file_good_middleware_v1_app_good_stock_stock_proto_rawDesc = nil
	file_good_middleware_v1_app_good_stock_stock_proto_goTypes = nil
	file_good_middleware_v1_app_good_stock_stock_proto_depIdxs = nil
}
