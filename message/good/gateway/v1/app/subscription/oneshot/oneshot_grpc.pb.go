// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.18.1
// source: good/gateway/v1/app/subscription/oneshot/oneshot.proto

package oneshot

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Gateway_UpdateAppOneShot_FullMethodName      = "/good.gateway.app.subscription.oneshot.v1.Gateway/UpdateAppOneShot"
	Gateway_GetAppOneShot_FullMethodName         = "/good.gateway.app.subscription.oneshot.v1.Gateway/GetAppOneShot"
	Gateway_GetAppOneShots_FullMethodName        = "/good.gateway.app.subscription.oneshot.v1.Gateway/GetAppOneShots"
	Gateway_AdminCreateAppOneShot_FullMethodName = "/good.gateway.app.subscription.oneshot.v1.Gateway/AdminCreateAppOneShot"
	Gateway_AdminUpdateAppOneShot_FullMethodName = "/good.gateway.app.subscription.oneshot.v1.Gateway/AdminUpdateAppOneShot"
	Gateway_AdminGetAppOneShots_FullMethodName   = "/good.gateway.app.subscription.oneshot.v1.Gateway/AdminGetAppOneShots"
	Gateway_AdminDeleteAppOneShot_FullMethodName = "/good.gateway.app.subscription.oneshot.v1.Gateway/AdminDeleteAppOneShot"
)

// GatewayClient is the client API for Gateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GatewayClient interface {
	UpdateAppOneShot(ctx context.Context, in *UpdateAppOneShotRequest, opts ...grpc.CallOption) (*UpdateAppOneShotResponse, error)
	GetAppOneShot(ctx context.Context, in *GetAppOneShotRequest, opts ...grpc.CallOption) (*GetAppOneShotResponse, error)
	GetAppOneShots(ctx context.Context, in *GetAppOneShotsRequest, opts ...grpc.CallOption) (*GetAppOneShotsResponse, error)
	// Run by church admin
	AdminCreateAppOneShot(ctx context.Context, in *AdminCreateAppOneShotRequest, opts ...grpc.CallOption) (*AdminCreateAppOneShotResponse, error)
	AdminUpdateAppOneShot(ctx context.Context, in *AdminUpdateAppOneShotRequest, opts ...grpc.CallOption) (*AdminUpdateAppOneShotResponse, error)
	AdminGetAppOneShots(ctx context.Context, in *AdminGetAppOneShotsRequest, opts ...grpc.CallOption) (*AdminGetAppOneShotsResponse, error)
	AdminDeleteAppOneShot(ctx context.Context, in *AdminDeleteAppOneShotRequest, opts ...grpc.CallOption) (*AdminDeleteAppOneShotResponse, error)
}

type gatewayClient struct {
	cc grpc.ClientConnInterface
}

func NewGatewayClient(cc grpc.ClientConnInterface) GatewayClient {
	return &gatewayClient{cc}
}

func (c *gatewayClient) UpdateAppOneShot(ctx context.Context, in *UpdateAppOneShotRequest, opts ...grpc.CallOption) (*UpdateAppOneShotResponse, error) {
	out := new(UpdateAppOneShotResponse)
	err := c.cc.Invoke(ctx, Gateway_UpdateAppOneShot_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) GetAppOneShot(ctx context.Context, in *GetAppOneShotRequest, opts ...grpc.CallOption) (*GetAppOneShotResponse, error) {
	out := new(GetAppOneShotResponse)
	err := c.cc.Invoke(ctx, Gateway_GetAppOneShot_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) GetAppOneShots(ctx context.Context, in *GetAppOneShotsRequest, opts ...grpc.CallOption) (*GetAppOneShotsResponse, error) {
	out := new(GetAppOneShotsResponse)
	err := c.cc.Invoke(ctx, Gateway_GetAppOneShots_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) AdminCreateAppOneShot(ctx context.Context, in *AdminCreateAppOneShotRequest, opts ...grpc.CallOption) (*AdminCreateAppOneShotResponse, error) {
	out := new(AdminCreateAppOneShotResponse)
	err := c.cc.Invoke(ctx, Gateway_AdminCreateAppOneShot_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) AdminUpdateAppOneShot(ctx context.Context, in *AdminUpdateAppOneShotRequest, opts ...grpc.CallOption) (*AdminUpdateAppOneShotResponse, error) {
	out := new(AdminUpdateAppOneShotResponse)
	err := c.cc.Invoke(ctx, Gateway_AdminUpdateAppOneShot_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) AdminGetAppOneShots(ctx context.Context, in *AdminGetAppOneShotsRequest, opts ...grpc.CallOption) (*AdminGetAppOneShotsResponse, error) {
	out := new(AdminGetAppOneShotsResponse)
	err := c.cc.Invoke(ctx, Gateway_AdminGetAppOneShots_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) AdminDeleteAppOneShot(ctx context.Context, in *AdminDeleteAppOneShotRequest, opts ...grpc.CallOption) (*AdminDeleteAppOneShotResponse, error) {
	out := new(AdminDeleteAppOneShotResponse)
	err := c.cc.Invoke(ctx, Gateway_AdminDeleteAppOneShot_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GatewayServer is the server API for Gateway service.
// All implementations must embed UnimplementedGatewayServer
// for forward compatibility
type GatewayServer interface {
	UpdateAppOneShot(context.Context, *UpdateAppOneShotRequest) (*UpdateAppOneShotResponse, error)
	GetAppOneShot(context.Context, *GetAppOneShotRequest) (*GetAppOneShotResponse, error)
	GetAppOneShots(context.Context, *GetAppOneShotsRequest) (*GetAppOneShotsResponse, error)
	// Run by church admin
	AdminCreateAppOneShot(context.Context, *AdminCreateAppOneShotRequest) (*AdminCreateAppOneShotResponse, error)
	AdminUpdateAppOneShot(context.Context, *AdminUpdateAppOneShotRequest) (*AdminUpdateAppOneShotResponse, error)
	AdminGetAppOneShots(context.Context, *AdminGetAppOneShotsRequest) (*AdminGetAppOneShotsResponse, error)
	AdminDeleteAppOneShot(context.Context, *AdminDeleteAppOneShotRequest) (*AdminDeleteAppOneShotResponse, error)
	mustEmbedUnimplementedGatewayServer()
}

// UnimplementedGatewayServer must be embedded to have forward compatible implementations.
type UnimplementedGatewayServer struct {
}

func (UnimplementedGatewayServer) UpdateAppOneShot(context.Context, *UpdateAppOneShotRequest) (*UpdateAppOneShotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAppOneShot not implemented")
}
func (UnimplementedGatewayServer) GetAppOneShot(context.Context, *GetAppOneShotRequest) (*GetAppOneShotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppOneShot not implemented")
}
func (UnimplementedGatewayServer) GetAppOneShots(context.Context, *GetAppOneShotsRequest) (*GetAppOneShotsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppOneShots not implemented")
}
func (UnimplementedGatewayServer) AdminCreateAppOneShot(context.Context, *AdminCreateAppOneShotRequest) (*AdminCreateAppOneShotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminCreateAppOneShot not implemented")
}
func (UnimplementedGatewayServer) AdminUpdateAppOneShot(context.Context, *AdminUpdateAppOneShotRequest) (*AdminUpdateAppOneShotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminUpdateAppOneShot not implemented")
}
func (UnimplementedGatewayServer) AdminGetAppOneShots(context.Context, *AdminGetAppOneShotsRequest) (*AdminGetAppOneShotsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminGetAppOneShots not implemented")
}
func (UnimplementedGatewayServer) AdminDeleteAppOneShot(context.Context, *AdminDeleteAppOneShotRequest) (*AdminDeleteAppOneShotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AdminDeleteAppOneShot not implemented")
}
func (UnimplementedGatewayServer) mustEmbedUnimplementedGatewayServer() {}

// UnsafeGatewayServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GatewayServer will
// result in compilation errors.
type UnsafeGatewayServer interface {
	mustEmbedUnimplementedGatewayServer()
}

func RegisterGatewayServer(s grpc.ServiceRegistrar, srv GatewayServer) {
	s.RegisterService(&Gateway_ServiceDesc, srv)
}

func _Gateway_UpdateAppOneShot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppOneShotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).UpdateAppOneShot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gateway_UpdateAppOneShot_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).UpdateAppOneShot(ctx, req.(*UpdateAppOneShotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_GetAppOneShot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppOneShotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).GetAppOneShot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gateway_GetAppOneShot_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).GetAppOneShot(ctx, req.(*GetAppOneShotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_GetAppOneShots_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppOneShotsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).GetAppOneShots(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gateway_GetAppOneShots_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).GetAppOneShots(ctx, req.(*GetAppOneShotsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_AdminCreateAppOneShot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminCreateAppOneShotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).AdminCreateAppOneShot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gateway_AdminCreateAppOneShot_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).AdminCreateAppOneShot(ctx, req.(*AdminCreateAppOneShotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_AdminUpdateAppOneShot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminUpdateAppOneShotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).AdminUpdateAppOneShot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gateway_AdminUpdateAppOneShot_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).AdminUpdateAppOneShot(ctx, req.(*AdminUpdateAppOneShotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_AdminGetAppOneShots_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminGetAppOneShotsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).AdminGetAppOneShots(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gateway_AdminGetAppOneShots_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).AdminGetAppOneShots(ctx, req.(*AdminGetAppOneShotsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_AdminDeleteAppOneShot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminDeleteAppOneShotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).AdminDeleteAppOneShot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gateway_AdminDeleteAppOneShot_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).AdminDeleteAppOneShot(ctx, req.(*AdminDeleteAppOneShotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Gateway_ServiceDesc is the grpc.ServiceDesc for Gateway service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Gateway_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "good.gateway.app.subscription.oneshot.v1.Gateway",
	HandlerType: (*GatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateAppOneShot",
			Handler:    _Gateway_UpdateAppOneShot_Handler,
		},
		{
			MethodName: "GetAppOneShot",
			Handler:    _Gateway_GetAppOneShot_Handler,
		},
		{
			MethodName: "GetAppOneShots",
			Handler:    _Gateway_GetAppOneShots_Handler,
		},
		{
			MethodName: "AdminCreateAppOneShot",
			Handler:    _Gateway_AdminCreateAppOneShot_Handler,
		},
		{
			MethodName: "AdminUpdateAppOneShot",
			Handler:    _Gateway_AdminUpdateAppOneShot_Handler,
		},
		{
			MethodName: "AdminGetAppOneShots",
			Handler:    _Gateway_AdminGetAppOneShots_Handler,
		},
		{
			MethodName: "AdminDeleteAppOneShot",
			Handler:    _Gateway_AdminDeleteAppOneShot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "good/gateway/v1/app/subscription/oneshot/oneshot.proto",
}
