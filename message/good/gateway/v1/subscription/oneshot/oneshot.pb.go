// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.18.1
// source: good/gateway/v1/subscription/oneshot/oneshot.proto

package oneshot

import (
	v1 "github.com/NpoolPlatform/kunman/message/basetypes/good/v1"
	oneshot "github.com/NpoolPlatform/kunman/message/good/middleware/v1/subscription/oneshot"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdminCreateOneShotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string              `protobuf:"bytes,10,opt,name=Name,proto3" json:"Name,omitempty"`
	DurationDisplayType v1.GoodDurationType `protobuf:"varint,20,opt,name=DurationDisplayType,proto3,enum=basetypes.good.v1.GoodDurationType" json:"DurationDisplayType,omitempty"`
	DurationUints       *uint32             `protobuf:"varint,30,opt,name=DurationUints,proto3,oneof" json:"DurationUints,omitempty"`
	DurationQuota       uint32              `protobuf:"varint,40,opt,name=DurationQuota,proto3" json:"DurationQuota,omitempty"`
	DailyBonusQuota     *uint32             `protobuf:"varint,50,opt,name=DailyBonusQuota,proto3,oneof" json:"DailyBonusQuota,omitempty"`
	USDPrice            string              `protobuf:"bytes,60,opt,name=USDPrice,proto3" json:"USDPrice,omitempty"`
}

func (x *AdminCreateOneShotRequest) Reset() {
	*x = AdminCreateOneShotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateOneShotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateOneShotRequest) ProtoMessage() {}

func (x *AdminCreateOneShotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateOneShotRequest.ProtoReflect.Descriptor instead.
func (*AdminCreateOneShotRequest) Descriptor() ([]byte, []int) {
	return file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescGZIP(), []int{0}
}

func (x *AdminCreateOneShotRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminCreateOneShotRequest) GetDurationDisplayType() v1.GoodDurationType {
	if x != nil {
		return x.DurationDisplayType
	}
	return v1.GoodDurationType(0)
}

func (x *AdminCreateOneShotRequest) GetDurationUints() uint32 {
	if x != nil && x.DurationUints != nil {
		return *x.DurationUints
	}
	return 0
}

func (x *AdminCreateOneShotRequest) GetDurationQuota() uint32 {
	if x != nil {
		return x.DurationQuota
	}
	return 0
}

func (x *AdminCreateOneShotRequest) GetDailyBonusQuota() uint32 {
	if x != nil && x.DailyBonusQuota != nil {
		return *x.DailyBonusQuota
	}
	return 0
}

func (x *AdminCreateOneShotRequest) GetUSDPrice() string {
	if x != nil {
		return x.USDPrice
	}
	return ""
}

type AdminCreateOneShotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *oneshot.OneShot `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminCreateOneShotResponse) Reset() {
	*x = AdminCreateOneShotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateOneShotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateOneShotResponse) ProtoMessage() {}

func (x *AdminCreateOneShotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateOneShotResponse.ProtoReflect.Descriptor instead.
func (*AdminCreateOneShotResponse) Descriptor() ([]byte, []int) {
	return file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescGZIP(), []int{1}
}

func (x *AdminCreateOneShotResponse) GetInfo() *oneshot.OneShot {
	if x != nil {
		return x.Info
	}
	return nil
}

type AdminUpdateOneShotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                  uint32               `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID               string               `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	GoodID              string               `protobuf:"bytes,30,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	Name                *string              `protobuf:"bytes,40,opt,name=Name,proto3,oneof" json:"Name,omitempty"`
	DurationDisplayType *v1.GoodDurationType `protobuf:"varint,50,opt,name=DurationDisplayType,proto3,enum=basetypes.good.v1.GoodDurationType,oneof" json:"DurationDisplayType,omitempty"`
	DurationUints       *uint32              `protobuf:"varint,60,opt,name=DurationUints,proto3,oneof" json:"DurationUints,omitempty"`
	DurationQuota       *uint32              `protobuf:"varint,70,opt,name=DurationQuota,proto3,oneof" json:"DurationQuota,omitempty"`
	DailyBonusQuota     *uint32              `protobuf:"varint,80,opt,name=DailyBonusQuota,proto3,oneof" json:"DailyBonusQuota,omitempty"`
	USDPrice            *string              `protobuf:"bytes,90,opt,name=USDPrice,proto3,oneof" json:"USDPrice,omitempty"`
}

func (x *AdminUpdateOneShotRequest) Reset() {
	*x = AdminUpdateOneShotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateOneShotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateOneShotRequest) ProtoMessage() {}

func (x *AdminUpdateOneShotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateOneShotRequest.ProtoReflect.Descriptor instead.
func (*AdminUpdateOneShotRequest) Descriptor() ([]byte, []int) {
	return file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescGZIP(), []int{2}
}

func (x *AdminUpdateOneShotRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminUpdateOneShotRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AdminUpdateOneShotRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *AdminUpdateOneShotRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AdminUpdateOneShotRequest) GetDurationDisplayType() v1.GoodDurationType {
	if x != nil && x.DurationDisplayType != nil {
		return *x.DurationDisplayType
	}
	return v1.GoodDurationType(0)
}

func (x *AdminUpdateOneShotRequest) GetDurationUints() uint32 {
	if x != nil && x.DurationUints != nil {
		return *x.DurationUints
	}
	return 0
}

func (x *AdminUpdateOneShotRequest) GetDurationQuota() uint32 {
	if x != nil && x.DurationQuota != nil {
		return *x.DurationQuota
	}
	return 0
}

func (x *AdminUpdateOneShotRequest) GetDailyBonusQuota() uint32 {
	if x != nil && x.DailyBonusQuota != nil {
		return *x.DailyBonusQuota
	}
	return 0
}

func (x *AdminUpdateOneShotRequest) GetUSDPrice() string {
	if x != nil && x.USDPrice != nil {
		return *x.USDPrice
	}
	return ""
}

type AdminUpdateOneShotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *oneshot.OneShot `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminUpdateOneShotResponse) Reset() {
	*x = AdminUpdateOneShotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateOneShotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateOneShotResponse) ProtoMessage() {}

func (x *AdminUpdateOneShotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateOneShotResponse.ProtoReflect.Descriptor instead.
func (*AdminUpdateOneShotResponse) Descriptor() ([]byte, []int) {
	return file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescGZIP(), []int{3}
}

func (x *AdminUpdateOneShotResponse) GetInfo() *oneshot.OneShot {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetOneShotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodID string `protobuf:"bytes,10,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
}

func (x *GetOneShotRequest) Reset() {
	*x = GetOneShotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneShotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneShotRequest) ProtoMessage() {}

func (x *GetOneShotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneShotRequest.ProtoReflect.Descriptor instead.
func (*GetOneShotRequest) Descriptor() ([]byte, []int) {
	return file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescGZIP(), []int{4}
}

func (x *GetOneShotRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

type GetOneShotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *oneshot.OneShot `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetOneShotResponse) Reset() {
	*x = GetOneShotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneShotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneShotResponse) ProtoMessage() {}

func (x *GetOneShotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneShotResponse.ProtoReflect.Descriptor instead.
func (*GetOneShotResponse) Descriptor() ([]byte, []int) {
	return file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescGZIP(), []int{5}
}

func (x *GetOneShotResponse) GetInfo() *oneshot.OneShot {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetOneShotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,10,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32 `protobuf:"varint,20,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetOneShotsRequest) Reset() {
	*x = GetOneShotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneShotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneShotsRequest) ProtoMessage() {}

func (x *GetOneShotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneShotsRequest.ProtoReflect.Descriptor instead.
func (*GetOneShotsRequest) Descriptor() ([]byte, []int) {
	return file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescGZIP(), []int{6}
}

func (x *GetOneShotsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetOneShotsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetOneShotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*oneshot.OneShot `protobuf:"bytes,10,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetOneShotsResponse) Reset() {
	*x = GetOneShotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneShotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneShotsResponse) ProtoMessage() {}

func (x *GetOneShotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneShotsResponse.ProtoReflect.Descriptor instead.
func (*GetOneShotsResponse) Descriptor() ([]byte, []int) {
	return file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescGZIP(), []int{7}
}

func (x *GetOneShotsResponse) GetInfos() []*oneshot.OneShot {
	if x != nil {
		return x.Infos
	}
	return nil
}

type AdminDeleteOneShotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     uint32 `protobuf:"varint,10,opt,name=ID,proto3" json:"ID,omitempty"`
	EntID  string `protobuf:"bytes,20,opt,name=EntID,proto3" json:"EntID,omitempty"`
	GoodID string `protobuf:"bytes,30,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
}

func (x *AdminDeleteOneShotRequest) Reset() {
	*x = AdminDeleteOneShotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDeleteOneShotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDeleteOneShotRequest) ProtoMessage() {}

func (x *AdminDeleteOneShotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDeleteOneShotRequest.ProtoReflect.Descriptor instead.
func (*AdminDeleteOneShotRequest) Descriptor() ([]byte, []int) {
	return file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescGZIP(), []int{8}
}

func (x *AdminDeleteOneShotRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminDeleteOneShotRequest) GetEntID() string {
	if x != nil {
		return x.EntID
	}
	return ""
}

func (x *AdminDeleteOneShotRequest) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

type AdminDeleteOneShotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *oneshot.OneShot `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AdminDeleteOneShotResponse) Reset() {
	*x = AdminDeleteOneShotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDeleteOneShotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDeleteOneShotResponse) ProtoMessage() {}

func (x *AdminDeleteOneShotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDeleteOneShotResponse.ProtoReflect.Descriptor instead.
func (*AdminDeleteOneShotResponse) Descriptor() ([]byte, []int) {
	return file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescGZIP(), []int{9}
}

func (x *AdminDeleteOneShotResponse) GetInfo() *oneshot.OneShot {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_good_gateway_v1_subscription_oneshot_oneshot_proto protoreflect.FileDescriptor

var file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDesc = []byte{
	0x0a, 0x32, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f,
	0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2f, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x35, 0x67, 0x6f, 0x6f, 0x64,
	0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x6e, 0x65, 0x73,
	0x68, 0x6f, 0x74, 0x2f, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1d, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8,
	0x02, 0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e,
	0x65, 0x53, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x55, 0x0a, 0x13, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x13, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x0d, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x0d, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x6e, 0x74, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x0f, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x01, 0x52, 0x0f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x53, 0x44, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x53, 0x44, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x69, 0x6e, 0x74, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x22, 0x62, 0x0a, 0x1a, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xda, 0x03,
	0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65,
	0x53, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x5a, 0x0a, 0x13, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x13, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29,
	0x0a, 0x0d, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x0d, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x69, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x03, 0x52, 0x0d, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52,
	0x0f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x55, 0x53, 0x44, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x5a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x55, 0x53, 0x44, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x16, 0x0a,
	0x14, 0x5f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x69, 0x6e, 0x74, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x55, 0x53, 0x44, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x62, 0x0a, 0x1a, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2b,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x22, 0x5a, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6f,
	0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f,
	0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x42, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x65, 0x53, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5d, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x65, 0x53,
	0x68, 0x6f, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x59, 0x0a, 0x19, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47,
	0x6f, 0x6f, 0x64, 0x49, 0x44, 0x22, 0x62, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x65, 0x53,
	0x68, 0x6f, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xc2, 0x07, 0x0a, 0x07, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0xc8, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x12, 0x3f, 0x2e, 0x67,
	0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e,
	0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x6f, 0x6e, 0x65,
	0x73, 0x68, 0x6f, 0x74, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0xc8, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x12, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x53, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xa7, 0x01, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x12, 0x37, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x65, 0x53, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xab, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65,
	0x53, 0x68, 0x6f, 0x74, 0x73, 0x12, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6f, 0x6e, 0x65, 0x73,
	0x68, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6f,
	0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0xc8, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x12, 0x3f, 0x2e, 0x67, 0x6f, 0x6f,
	0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65,
	0x53, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e,
	0x65, 0x53, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x6f, 0x6e, 0x65, 0x73, 0x68,
	0x6f, 0x74, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x4e,
	0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f,
	0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6b, 0x75, 0x6e, 0x6d, 0x61,
	0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x2f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x6e, 0x65, 0x73, 0x68, 0x6f, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescOnce sync.Once
	file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescData = file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDesc
)

func file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescGZIP() []byte {
	file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescOnce.Do(func() {
		file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescData = protoimpl.X.CompressGZIP(file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescData)
	})
	return file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDescData
}

var file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_good_gateway_v1_subscription_oneshot_oneshot_proto_goTypes = []interface{}{
	(*AdminCreateOneShotRequest)(nil),  // 0: good.gateway.subscription.oneshot.v1.AdminCreateOneShotRequest
	(*AdminCreateOneShotResponse)(nil), // 1: good.gateway.subscription.oneshot.v1.AdminCreateOneShotResponse
	(*AdminUpdateOneShotRequest)(nil),  // 2: good.gateway.subscription.oneshot.v1.AdminUpdateOneShotRequest
	(*AdminUpdateOneShotResponse)(nil), // 3: good.gateway.subscription.oneshot.v1.AdminUpdateOneShotResponse
	(*GetOneShotRequest)(nil),          // 4: good.gateway.subscription.oneshot.v1.GetOneShotRequest
	(*GetOneShotResponse)(nil),         // 5: good.gateway.subscription.oneshot.v1.GetOneShotResponse
	(*GetOneShotsRequest)(nil),         // 6: good.gateway.subscription.oneshot.v1.GetOneShotsRequest
	(*GetOneShotsResponse)(nil),        // 7: good.gateway.subscription.oneshot.v1.GetOneShotsResponse
	(*AdminDeleteOneShotRequest)(nil),  // 8: good.gateway.subscription.oneshot.v1.AdminDeleteOneShotRequest
	(*AdminDeleteOneShotResponse)(nil), // 9: good.gateway.subscription.oneshot.v1.AdminDeleteOneShotResponse
	(v1.GoodDurationType)(0),           // 10: basetypes.good.v1.GoodDurationType
	(*oneshot.OneShot)(nil),            // 11: good.middleware.subscription.oneshot.v1.OneShot
}
var file_good_gateway_v1_subscription_oneshot_oneshot_proto_depIdxs = []int32{
	10, // 0: good.gateway.subscription.oneshot.v1.AdminCreateOneShotRequest.DurationDisplayType:type_name -> basetypes.good.v1.GoodDurationType
	11, // 1: good.gateway.subscription.oneshot.v1.AdminCreateOneShotResponse.Info:type_name -> good.middleware.subscription.oneshot.v1.OneShot
	10, // 2: good.gateway.subscription.oneshot.v1.AdminUpdateOneShotRequest.DurationDisplayType:type_name -> basetypes.good.v1.GoodDurationType
	11, // 3: good.gateway.subscription.oneshot.v1.AdminUpdateOneShotResponse.Info:type_name -> good.middleware.subscription.oneshot.v1.OneShot
	11, // 4: good.gateway.subscription.oneshot.v1.GetOneShotResponse.Info:type_name -> good.middleware.subscription.oneshot.v1.OneShot
	11, // 5: good.gateway.subscription.oneshot.v1.GetOneShotsResponse.Infos:type_name -> good.middleware.subscription.oneshot.v1.OneShot
	11, // 6: good.gateway.subscription.oneshot.v1.AdminDeleteOneShotResponse.Info:type_name -> good.middleware.subscription.oneshot.v1.OneShot
	0,  // 7: good.gateway.subscription.oneshot.v1.Gateway.AdminCreateOneShot:input_type -> good.gateway.subscription.oneshot.v1.AdminCreateOneShotRequest
	2,  // 8: good.gateway.subscription.oneshot.v1.Gateway.AdminUpdateOneShot:input_type -> good.gateway.subscription.oneshot.v1.AdminUpdateOneShotRequest
	4,  // 9: good.gateway.subscription.oneshot.v1.Gateway.GetOneShot:input_type -> good.gateway.subscription.oneshot.v1.GetOneShotRequest
	6,  // 10: good.gateway.subscription.oneshot.v1.Gateway.GetOneShots:input_type -> good.gateway.subscription.oneshot.v1.GetOneShotsRequest
	8,  // 11: good.gateway.subscription.oneshot.v1.Gateway.AdminDeleteOneShot:input_type -> good.gateway.subscription.oneshot.v1.AdminDeleteOneShotRequest
	1,  // 12: good.gateway.subscription.oneshot.v1.Gateway.AdminCreateOneShot:output_type -> good.gateway.subscription.oneshot.v1.AdminCreateOneShotResponse
	3,  // 13: good.gateway.subscription.oneshot.v1.Gateway.AdminUpdateOneShot:output_type -> good.gateway.subscription.oneshot.v1.AdminUpdateOneShotResponse
	5,  // 14: good.gateway.subscription.oneshot.v1.Gateway.GetOneShot:output_type -> good.gateway.subscription.oneshot.v1.GetOneShotResponse
	7,  // 15: good.gateway.subscription.oneshot.v1.Gateway.GetOneShots:output_type -> good.gateway.subscription.oneshot.v1.GetOneShotsResponse
	9,  // 16: good.gateway.subscription.oneshot.v1.Gateway.AdminDeleteOneShot:output_type -> good.gateway.subscription.oneshot.v1.AdminDeleteOneShotResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_good_gateway_v1_subscription_oneshot_oneshot_proto_init() }
func file_good_gateway_v1_subscription_oneshot_oneshot_proto_init() {
	if File_good_gateway_v1_subscription_oneshot_oneshot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateOneShotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateOneShotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateOneShotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUpdateOneShotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneShotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneShotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneShotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneShotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDeleteOneShotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDeleteOneShotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_good_gateway_v1_subscription_oneshot_oneshot_proto_goTypes,
		DependencyIndexes: file_good_gateway_v1_subscription_oneshot_oneshot_proto_depIdxs,
		MessageInfos:      file_good_gateway_v1_subscription_oneshot_oneshot_proto_msgTypes,
	}.Build()
	File_good_gateway_v1_subscription_oneshot_oneshot_proto = out.File
	file_good_gateway_v1_subscription_oneshot_oneshot_proto_rawDesc = nil
	file_good_gateway_v1_subscription_oneshot_oneshot_proto_goTypes = nil
	file_good_gateway_v1_subscription_oneshot_oneshot_proto_depIdxs = nil
}
